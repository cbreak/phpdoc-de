
 <reference id="ref.http">
  <title>HTTP-Funktionen</title>
  <titleabbrev>HTTP</titleabbrev>

  <partintro>
   <simpara>
    Diese Funktionen ermöglichen die Manipulation der an den Browser
    geschickten Informationen bis hinunter auf HTTP-Protokoll-Ebene.
   </simpara>
  </partintro>

  <refentry id="function.header">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>Sendet einen HTTP-Header</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcdef>int <function>header</function></funcdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcsynopsis>
    <para>
     Die <function>Header</function>-Funktion wird zu Beginn einer
     <acronym>HTML</acronym>-Datei benutzt um
     <acronym>HTTP</acronym>-Anfangsinformationen. Siehe <ulink
     url="&spec.http1.1;">HTTP 1.1 Spezifikationen</ulink> für weitere
     Informationen.  <emphasis>Hinweis:</emphasis> Beachten sie, dass
     die <function>Header</function>-Funktion aufgerufen werden muss,
     bevor irgendeine Ausgabe durch normale HTML-Tags oder PHP erzeugt
     wird.  Es ist ein häufig anzutreffender Fehler, per
     <function>include</function> Programm-Code einzubinden (bzw. per
     auto_prepend) oder Leerzeichen oder -zeilen vor im Code stehen zu
     haben, die bereits Ausgaben bewirken bevor
     <function>header</function> aufgerufen wird.
    </para>
    <para>
     Es gibt zwei Spezialfälle von Header-Aufrufen. Der Erste ist der
     &quot;Location&quot;-Header. Es wird nicht nur der Header an den 
     Browser geschickt, der Apache erhält auch noch den Status-Code
     REDIRECT. Aus Sicht des Skript-Schreibers ist das nicht wichtig,
     aber für alle, die die Internas von Apache verstehen wollen, ist
     dies von Belang.
     <informalexample>
      <programlisting role="php">
header ("Location: http://www.php.net");  /* Umleitung des Browsers
                                             zur PHP-Web-Seite. */
exit;  /* Sicher stellen, das nicht trotz Umleitung nachfolgender
          Code ausgeführt wird. */
      </programlisting>
     </informalexample>
    </para>
    <para>
     Der zweite Spezialfall ist ein Header der mit der Zeichenfolge
     &quot;HTTP/&quot; beginnt (Groß-/Kleinschreibung ist egal). Falls
     sie z.B. die Dokument-Fehler-Anweisung 404 des Apache auf ein
     PHP-Skript zeigen lassen, ist es gut, wenn dieses Skript einen
     404-Fehler erzeugt. In diesem Skript sollten sie also zuerst
     stehen haben:
     <informalexample>
      <programlisting role="php">
header ("http/1.0 404 Not Found");
      </programlisting>
     </informalexample>
    </para>
    <para>
     PHP-Skripte erzeugen oft dynamisches HTML, dass weder vom Browser noch
     von irgendeinem Proxy zwischen Web-Server und Client-Browser gepuffert
     ("gecached") werden soll bzw. darf. Bei vielen Proxies und Browsern
     kann das Cachen unterbunden werden und zwar mit:
     <informalexample>
      <programlisting role="php">
header ("Expires: Mon, 26 Jul 1997 05:00:00 GMT");    // Datum der
Vergangenheit
header ("Last-Modified: " . gmdate ("D, d M Y H:i:s") . " GMT"); 
                                                      // immer geändert
header ("Cache-Control: no-cache, must-revalidate");  // HTTP/1.1
header ("Pragma: no-cache");                          // HTTP/1.0
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.setcookie">
   <refnamediv>
    <refname>setcookie</refname>
    <refpurpose>Sendet ein Cookie</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcdef>int <function>setcookie</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>string <parameter>value</parameter></paramdef>
     <paramdef>int <parameter>expire</parameter></paramdef>
     <paramdef>string <parameter>path</parameter></paramdef>
     <paramdef>string <parameter>domain</parameter></paramdef>
     <paramdef>int <parameter>secure</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>Setcookie</function> definiert ein mit den
     Header-Informationen zu übertragendes Cookie. Cookies müssen
     <emphasis>vor</emphasis> irgendwelchen anderen Headern gesendet
     werden (dies ist eine Einschränkung der Cookies, nicht von PHP).
     Sie müssen deshalb solche Funktionsaufrufe vor irgendwelchen
     <literal>&lt;html></literal>- oder
     <literal>&lt;head></literal>-Tags im Skript einsetzen.
    </para>
    <para>
     Alle Angaben ausser dem <parameter>name</parameter>-Argument
     können angegeben werden. Ist nur der Name angegeben wird das
     Cookie mit diesem Namen auf dem Client gelöscht. Sie können
     beliebige Argumente auch durch einen Leerstring
     (<emphasis>&quot;&quot;</emphasis>) ersetzen, um diese Argument
     zu übergehen. Der <parameter>expire</parameter>-Parameter und das
     <parameter>secure</parameter>-Argument sind Integer-Werte und
     können nicht mir einem Leerstring übersprungen werden.  Setzen
     sie statt dessen Null (<emphasis>0</emphasis>). Der
     <parameter>expire</parameter>- Parameter ist ein normaler
     UNIX-Zeitwert als Integer-Zahl, wie er von der
     <function>time</function> oder
     <function>mktime</function>-Funktion zurück gegeben wird. Das
     <parameter>secure</parameter>-Argument bedeutet, dass das Cookie
     nur über eine sichere HTTP-Verbindung geschickt werden soll.
    </para>
    <para>  
     Anwendungsbereiche:
    </para>
    <simpara>
     Cokies werden nicht sichtbar, bevor nicht eine Seite geladen
     wird, in der das Cookie sichtbar sein soll.  
    </simpara>
    <simpara>
     Mehrfache Aufrufe der <function>setcookie</function>-Funktion im
     selben Skript werden in umgekehrter Reihenfolge abgearbeitet.
     Sollten sie also ein Cookie löschen wollen bevor sie ein anderes
     setzen, sollten sie das Setzen vor dem Löschen vornehmen.
    </simpara>
    <para>
     Einige Beispiele:
     <example>
      <title><function>Setcookie</function>-Beispiele</title>
      <programlisting role="php">
setcookie ("TestCookie", "Test Value");
setcookie ("TestCookie", $value, time()+3600);  /* verfällt in 1 Stunde */
setcookie ("TestCookie", $value, time()+3600, "/~rasmus/", ".utoronto.ca",1);
      </programlisting>
     </example>
    </para>
    <para>
     Beachten sie, dass der Wertebereich des Cookies automatisch
     URL-konform codiert (urlencoded) wird, sobald sie das Cookie
     senden, und wenn es gelesen wird, wird es automatisch URL-konform
     decodiert und einer Variablen zugewiesen, die den selben Namen
     wie das Cookie trägt. Um die Inhalte unserer Test-Cookies zu
     sehen brauchen sie nur eines der folgenden Beispiel zu benutzen:
     <informalexample>
      <programlisting role="php">
echo $TestCookie;
echo $HTTP_COOKIE_VARS["TestCookie"];
      </programlisting>
     </informalexample>
    </para>
    <para>
     Sie können auch ein Array an Cookies setzen, in dem sie die
     Array-Schreibweise benutzen. Dadurch werden so viele Cookies
     gesetzt, wie ihr Array Elemente hat. Sobald das Cookie aber von
     ihrem Skript gelesen wird, werden alle Werte in ein einziges
     Array mit dem Cookie-Namen eingelesen: 
     <informalexample>
      <programlisting role="php">
setcookie ("cookie[three]", "cookiethree");
setcookie ("cookie[two]", "cookietwo");
setcookie ("cookie[one]", "cookieone");
if (isset ($cookie)) {
    while (list ($name, $value) = each ($cookie)) {
        echo "$name == $value&lt;br>\n";
    }
}
      </programlisting>
     </informalexample>
    </para>
    <para>
     Weitere Informationen zu Cookies und deren Spezifikationen
     erhalten sie bei Netscape unter <ulink
     url="&spec.cookies;">&spec.cookies;</ulink>.
    </para>
    <simpara>
     Microsofts Internet-Explorer 4 mit Servive-Pack 1 geht nicht
     korrekt mit Cookies um, die den Pfad-Parameter beinhalten.
    </simpara>
    <simpara>
     Netscape Communicator 4.05 und Microsoft Internet Explorer 3.x
     scheinen mit Cookies Probleme zu haben, wenn die Argumente für
     Pfad und Zeit nicht angegeben sind.
    </simpara>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
