 <reference id="ref.dba">
  <title>Datenbank (dbm-style) Abstraktions Funktionen</title>
  <titleabbrev>dba</titleabbrev>

  <partintro>
   <para>
    Diese Funktionen bilden die Basis f&uuml;r den Zugriff auf
    Datenbanken im Berkeley DB Stil.
   </para>
   <para>
    Es handelt sich hierbei um eine generelle Abstraktionsschicht f&uuml;r
    verschiedenen textbasierte Datenbanken.
    Als solche ist der Funktionsumfang beschr&auml;nkt auf einen Bruchteil
    des Funktionsumfangs moderner Datenbanken wie zum Beispiel
    <ulink url="&url.sleepycat;">Sleepycat Software's DB2</ulink>.
    (Diese sollte nicht verwechselt werden mit IBM's DB2 Software, 
    die &uuml;ber die <link linkend="ref.odbc">ODBC Funktionen</link>
    unterst&uuml;tzt wird.)
   </para>
   <para>
    Das Verhalten verschiedener Aspekte des Systems ist abh&auml;ngig von
    der Implementation des zugrunde liegenden Datenbanksystems.
    Funktionen wie zum Beispiel <function>dba_optimize</function>
    und <function>dba_sync</function> funktionieren wie angepriesen mit
    der einen Datenbank und versagen ihren Dienst mit Anderen.
   </para>
   <para>
    Um Unterst&uuml;tzung f&uuml;r einen der folgenden Handler
    verf&uuml;gbar zu machen, f&uuml;gen Sie bitte den jeweils angegebenen
    --with Kompilerschalter in ihre PHP Konfigurationszeile ein:
    <itemizedlist>
     <listitem>
      <simpara>
       Dbm ist der &auml;lteste und der original Typ der Datenbanken
       im Berkeley DB Stil. Sie sollten dieses System wenn m&ouml;glich
       vermeiden. 
       Wir &uuml;nterst&uuml;tzen nicht die Kompatibilit&auml;tsfunktionen,
       die in DB2 und gdbm enthalten sind, da sie nur auf
       Quellcode Basis kompatibel sind und nicht mit dem original dbm
       Format arbeiten k&ouml;nnen.  (--with-dbm)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Ndbm ist neuer und flexibler als Dbm. Es hat jedoch immer noch
       die meisten Einschr&auml;nkungen von Dbm und ist daher ebenfalls
       nicht empfehlenswert.  (--with-ndbm)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Gdbm ist der <ulink url="&url.gdbm;">GNU Datenbank Manager</ulink>.
         (--with-gdbm)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       DB2 ist <ulink url="&url.sleepycat;">Sleepycat Software's
       DB2</ulink>. Es wird beschrieben als "Werkzeugsatz, der
       schnell verf&uuml;gbaren eingebauten Datenbank Support sowohl
       f&uuml;r Einzel- als auch f&uuml;r Client/Server- Applikationen
       zur Verf&uuml;gung stellt."  (--with-db2)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       DB3 ist <ulink url="&url.sleepycat;">Sleepycat Software's
       DB3</ulink>.  (--with-db3) 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Cdb ist "ein schnelles, zuverl&auml;ssiges und kompaktes
       Paket zum Erstellen und Auslesen konstanter Datenbanken."
       Es stammt vom Autor von qmail und kann <ulink url="&url.cdb;">
       hier</ulink> heruntergeladen werden. Da es ein konstantes
       System ist, werden nur Lese-Operationen unterst&uuml;tzt.
         (--with-cdb)
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    <example>
     <title>DBA Beispiel</title>
     <programlisting role="php">
&lt;?php

$id = dba_open ("/tmp/test.db", "n", "db2");

if (!$id) {
    echo "dba_open schlug fehl\n";
    exit;
}

dba_replace ("key", "Dies ist ein Beispiel!", $id);

if (dba_exists ("key", $id)) {
    echo dba_fetch ("key", $id);
    dba_delete ("key", $id);
}

dba_close ($id);
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    DBA arbeitet bin&auml;rsicher und besitzt keine willk&uuml;rlichen Limits.
    Es vererbt alle Einschr&auml;nkungen von der Datenbank Implementation, die
    ihm zugrunde liegt.
   </para>
   <para>
    Alle textbasierten Datenbanken m&uuml;ssen einen Weg zur
    Verf&uuml;gung stellen, um den Dateimodus einer neu erstellten
    Datenbank zu bestimmen, soweit dies &uuml;berhaupt m&ouml;glich ist.
    Der Dateimodus wird f&uuml;r gew&ouml;hnlich als viertes Argument
    an die Funktionen <function>dba_open</function> oder
    <function>dba_popen</function> &uuml;bergeben.
   </para>
   <para>
    Sie k&ouml;nnen auf alle Eintr&auml;ge in einer Datenbank auf
    linearem Weg durch die Verwendung von <function>dba_firstkey</function>
    und <function>dba_nextkey</function> zugreifen. W&auml;hrend die
    Datenbank so durchlaufen wird, kann sie nicht ver&auml;ndert werden.
   </para> 
   <para>
    <example>
     <title>Durchlaufen einer Datenbank</title>
     <programlisting role="php">
&lt;?php

# ...oeffnen der Datenbank...

$key = dba_firstkey ($id);

while ($key != false) {
    if (...) { # den Schluessel fuer spaetere Aktionen merken
        $handle_later[] = $key;
    }
    $key = dba_nextkey ($id);
}

for ($i = 0; $i &lt; count($handle_later); $i++)
    dba_delete ($handle_later[$i], $id);

?&gt;
     </programlisting>
    </example>
   </para>
  </partintro>

  <refentry id="function.dba-close">
   <refnamediv>
    <refname>dba_close</refname>
    <refpurpose>Datenbank schliessen</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>dba_close</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>Dba_close</function> schliesst die aufgebaute
     Verbindung zur Datenbank, die durch <parameter>handle</parameter>
     festgelegt wird, und gibt alle Resourcen wieder frei.
    </para>
    <para>
     <parameter>handle</parameter> ist ein Datenbankhandle das von
     <function>dba_open</function> zur&uuml;ckgegeben wird.
    </para>
    <para>
     <function>Dba_close</function> besitzt keinen R&uuml;ckgabewert.
    </para>
    <para>
     Siehe auch <function>dba_open</function> und
     <function>dba_popen</function>
    </para>     
   </refsect1>
  </refentry>

  <refentry id="function.dba-delete">
   <refnamediv>
    <refname>dba_delete</refname>
    <refpurpose>L&ouml;schen des durch key festgelegten Eintrages</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_delete</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_delete</function> l&ouml;scht den Eintrag, der
     durch <parameter>key</parameter> festgelegt ist, aus der 
     Datenbank, die mit <parameter>handle</parameter> spezifiziert 
     ist.
    </para>
    <para>
     <parameter>key</parameter> ist der Schl&uuml;ssel des Eintrags,
     der gel&ouml;scht wird.
    </para>
    <para>
     <parameter>handle</parameter> ist ein Datenbankhandle das von
     <function>dba_open</function> zur&uuml;ckgegeben wird.
    </para>
    <para>
     <function>dba_delete</function> hat als R&uuml;ckgabewert true
     oder false, abh&auml;ngig davon, ob der Eintrag gel&ouml;scht
     wurde oder nicht.
    </para>
    <para>
     Siehe auch <function>dba_exists</function>,
     <function>dba_fetch</function>, <function>dba_insert</function>,
     und <function>dba_replace</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-exists">
   <refnamediv>
    <refname>dba_exists</refname>
    <refpurpose>&Uuml;berpr&uuml;fen, ob key existiert</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_exists</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>Dba_exists</function> &uuml;berpr&uuml;ft, ob 
     <parameter>key</parameter> in der Datenbank, die durch
     <parameter>handle</parameter> spezifiziert wird, existiert.
    </para>
    <para>
     <parameter>Key</parameter> ist der Schl&uuml;ssel, dessen
     Existenz &uuml;berpr&uuml;ft werden soll.
    </para>
    <para>
     <parameter>handle</parameter> ist ein Datenbankhandle das von
     <function>dba_open</function> zur&uuml;ckgegeben wird.
    </para>
    <para>
     <function>Dba_exists</function> hat als R&uuml;ckgabewert true
     oder false, abh&auml;ngig davon, ob der Schl&uuml;ssel gefunden
     wurde oder nicht.
    </para>
    <para>
     Siehe auch <function>dba_fetch</function>,
     <function>dba_delete</function>, <function>dba_insert</function>,
     und <function>dba_replace</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-fetch">
   <refnamediv>
    <refname>dba_fetch</refname>
    <refpurpose>Daten, die durch key festgelegt sind, auslesen</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_fetch</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>Dba_fetch</function> liest die Daten, die durch
     <parameter>key</parameter> festgelegt, sind aus der
     Datenbank, die durch <parameter>handle</parameter> spezifiziert
     ist, aus.
    </para>
    <para>
     <parameter>Key</parameter> ist der Schl&uuml;ssel, mit dem
     die Daten identifizert werden.
    </para>
    <para>
     <parameter>handle</parameter> ist ein Datenbankhandle das von
     <function>dba_open</function> zur&uuml;ckgegeben wird.
    </para>

    <para>
     <function>Dba_fetch</function> hat als R&uuml;ckgabewert
     entweder den ausgelesenen String oder false, abh&auml;ngig
     davon, ob das Schl&uuml;ssel/Wert Paar gefunden wurde oder
     nicht.
    </para>
    <para>
     Siehe auch <function>dba_exists</function>,
     <function>dba_delete</function>, <function>dba_insert</function>,
     und <function>dba_replace</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-firstkey">
   <refnamediv>
    <refname>dba_firstkey</refname>
    <refpurpose>Ersten Schl&uuml;ssel auslesen</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_firstkey</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>Dba_firstkey</function> gibt den ersten Schl&uuml;ssel
     aus der Datenbank, die durch <parameter>handle</parameter>
     spezifiziert wird, zur&uuml;ck und setzt den internen
     Z&auml;hler zur&uuml;ck. Dies erlaubt eine lineare Suche durch
     die gesamte Datenbank.
    </para>
    <para>
     <parameter>handle</parameter> ist ein Datenbankhandle das von
     <function>dba_open</function> zur&uuml;ckgegeben wird.
    </para>
    <para>
     <function>Dba_firstkey</function> hat als R&uuml;ckgabewert
     den Schl&uuml;ssel oder false, abh&auml;ngig davon, ob die
     Aktion erfolgreich war oder fehlschlug.
    </para>
    <para>
     Siehe auch
     <function>Dba_nextkey</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-insert">
   <refnamediv>
    <refname>dba_insert</refname>
    <refpurpose>Eintrag einf&uuml;gen</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_insert</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_insert</function> f&uuml;gt den Eintrag, der
     durch <parameter>key</parameter> und <parameter>value</parameter>
     beschrieben wird in die Datenbank, die durch 
     <parameter>handle</parameter> spezifiziert wird, ein. Die Aktion
     schl&auml;gt fehl, wenn es bereits einen Eintrag mit dem gleichen
     <parameter>key</parameter> in der Datenbank gibt.
    </para>
    <para>
     <parameter>key</parameter> ist der Schl&uuml;ssel des Eintrags,
     der eingef&uuml;gt werden soll.
    </para>
    <para>
     <parameter>value</parameter> ist der Wert, der eingef&uuml;gt
     werden soll.
    </para>
    <para>
     <parameter>handle</parameter> ist ein Datenbankhandle das von
     <function>dba_open</function> zur&uuml;ckgegeben wird.
    </para>
    <para>
     <function>dba_insert</function> hat als R&uuml;ckgabewert true
     oder false, abh&auml;ngig davon, ob die Aktion erfolgreich
     war oder nicht.
    </para>
    <para>
     Siehe auch
     <function>dba_exists</function>
     <function>dba_delete</function>
     <function>dba_fetch</function>
     <function>dba_replace</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-nextkey">
   <refnamediv>
    <refname>dba_nextkey</refname>
    <refpurpose>N&auml;chsten Schl&uuml;ssel auslesen</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_nextkey</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_nextkey</function> gibt den n&auml;chsten
     Schl&uuml;ssel aus der Datenbank, die durch 
     <parameter>handle</parameter> spezifiziert wird, zur&uuml;ck
     und erh&ouml;ht den internen Schl&uuml;sselz&auml;hler um eins.
    </para> 
    <para>
     <parameter>handle</parameter> ist ein Datenbankhandle das von
     <function>dba_open</function> zur&uuml;ckgegeben wird.
    </para>
    <para>
     <function>dba_nextkey</function> hat als R&uuml;ckgabewert den
     Schl&uuml;ssel oder false, abh&auml;ngig davon, ob die Aktion
     erfolgreich war oder nicht.
    </para>
    <para>
     Siehe auch
     <function>dba_firstkey</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-popen">
   <refnamediv>
    <refname>dba_popen</refname>
    <refpurpose>Persistene Verbindung zu einer Datenbank &ouml;ffnen</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dba_popen</function></funcdef>
      <paramdef>string <parameter>path</parameter></paramdef>
      <paramdef>string <parameter>mode</parameter></paramdef>
      <paramdef>string <parameter>handler</parameter></paramdef>
      <paramdef><parameter><optional>...</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>

    <para>
     <function>dba_popen</function> stellt eine persistente
     Datenbankinstanz f&uuml;r <parameter>path</parameter> mit
     <parameter>mode</parameter> her und benutzt dabei 
     <parameter>handler</parameter>.
    </para>
    <para>
     <parameter>path</parameter> ist f&uuml;r gew&ouml;hnlich ein
     g&uuml;ltiger Pfad in Ihrem Dateisystem.
    </para>
    <para>
     <parameter>mode</parameter> ist "r" f&uuml;r Lesezugriff,
     "w" f&uuml;r Lese- und Schreibzugriff, "c" f&uuml;r Lese-
     und Schreibzugriff und die M&ouml;glichkeit, die
     Datenbank zu erstellen, falls sie nicht existiert, und "n"
     ist f&uuml;r Erstellen, Bearbeiten und Lese- und Schreibzugriff.     
    </para>
    <para>
     <parameter>handler</parameter> ist der Name des Handlers, der f&uuml;r
     den Zugriff auf <parameter>path</parameter> benutzt werden soll.
    </para>
    <para>
     <function>dba_popen</function> hat als R&uuml;ckgabewert eine
     positive Handler ID oder false, abh&auml;ngig davon, ob
     die Verbindung hergestellt werden konnte oder nicht.
    </para>
    <para>
     Siehe auch
     <function>dba_open</function>
     <function>dba_close</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-open">
   <refnamediv>
    <refname>dba_open</refname>
    <refpurpose>Verbindung zu einer Datenbank &ouml;ffnen</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dba_open</function></funcdef>
      <paramdef>string <parameter>path</parameter></paramdef>
      <paramdef>string <parameter>mode</parameter></paramdef>
      <paramdef>string <parameter>handler</parameter></paramdef>
      <paramdef><parameter><optional>...</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_open</function> stellt eine Datenbankinstanz 
     f&uuml;r <parameter>path</parameter> mit <parameter>mode</parameter>
     her und benutzt dabei <parameter>handler</parameter>.
    </para>
    <para>
     <parameter>path</parameter> ist f&uuml;r gew&ouml;hnlich ein
     g&uuml;ltiger Pfad in Ihrem Dateisystem.
    </para>
    <para>
     <parameter>mode</parameter> ist "r" f&uuml;r Lesezugriff,
     "w" f&uuml;r Lese- und Schreibzugriff, "c" f&uuml;r Lese-
     und Schreibzugriff und die M&ouml;glichkeit, die
     Datenbank zu erstellen, falls sie nicht existiert, und "n"
     ist f&uuml;r Erstellen, Bearbeiten und Lese- und Schreibzugriff.     
    </para>
    <para>
     <parameter>handler</parameter> ist der Name des Handlers, der f&uuml;r
     den Zugriff auf <parameter>path</parameter> benutzt werden soll.
    </para>
    <para>
     <function>dba_open</function> hat als R&uuml;ckgabewert eine
     positive Handler ID oder false, abh&auml;ngig davon, ob
     die Verbindung hergestellt werden konnte oder nicht.
    </para>
    <para>
     Siehe auch
     <function>dba_popen</function>
     <function>dba_close</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-optimize">
   <refnamediv>
    <refname>dba_optimize</refname>
    <refpurpose>Optimieren einer Datenbank</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_optimize</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_optimize</function> optimiert die zugrunde
     liegende Datenbank, die durch <parameter>handle</parameter>
     spezifiziert wird.
    </para>
    <para>
     <parameter>handle</parameter> ist ein Datenbankhandle das von
     <function>dba_open</function> zur&uuml;ckgegeben wird.
    </para>
    <para>
     <function>dba_optimize</function> hat als R&uuml;ckgabewert
     true oder false, abh&auml;ngig davon, ob die Optimierung
     erfolgreich war oder ob sie fehlschlug.
    </para>
    <para>
     Siehe auch
     <function>dba_sync</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-replace">
   <refnamediv>
    <refname>dba_replace</refname>
    <refpurpose>Ersetzen oder Einf&uuml;gen eines Eintrags</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_replace</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_replace</function> ersetzt oder f&uuml;gt
     einen Eintrag, der durch <parameter>key</parameter> und
     <parameter>value</parameter> beschrieben wird, in die
     Datenbank, die durch <parameter>handle</parameter>
     spezifiziert wird, ein.
    </para> 
    <para>
     <parameter>key</parameter> ist der Schl&uuml;ssel des Eintrags,
     der eingef&uuml;gt werden soll.
    </para>
    <para>
     <parameter>value</parameter> ist der Wert, der eingef&uuml;gt
     werden soll.
    </para>
    <para>
     <parameter>handle</parameter> ist ein Datenbankhandle das von
     <function>dba_open</function> zur&uuml;ckgegeben wird.
    </para>
    <para>
     <function>dba_replace</function> hat als R&uuml;ckgabewert
     true oder false, abh&auml;ngig davon, ob die Aktion erfolgreich
     war oder nicht.
    </para>
    <para>
     Siehe auch <function>dba_exists</function>,
     <function>dba_delete</function>, <function>dba_fetch</function>,
     und <function>dba_insert</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dba-sync">
   <refnamediv>
    <refname>dba_sync</refname>
    <refpurpose>Datenbank synchronisieren</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_sync</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_sync</function> synchronisiert die Datenbank,
     die durch <parameter>handle</parameter> spezifiziert wird.
     Dies kann m&ouml;glicherweise einen physikalischen
     Schreibvorgang auf den Datentr&auml;ger ausl&ouml;sen, falls
     dies unterst&uuml;tzt wird.     
    </para>
    <para>
     <parameter>handle</parameter> ist ein Datenbankhandle das von
     <function>dba_open</function> zur&uuml;ckgegeben wird.
    </para>
    <para>
     <function>dba_sync</function> hat als R&uuml;ckgabewert
     true oder false, abh&auml;ngig davon, ob die Aktion erfolgreich
     war oder nicht.
    </para>
    <para>
     Siehe auch <function>dba_optimize</function>
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
