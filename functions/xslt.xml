 <reference id="ref.xml">
  <title>XSLT functions</title>
  <titleabbrev>XSLT</titleabbrev>

  <partintro>
   <sect1 id="xslt.partintro">
    <title>Introduction</title>
    <sect2 id="xslt.intro">
     <title>About XSLT and Sablotron</title>
     <para>
      XSLT (Extensible Stylesheet Language (XSL)
      Transformations) is a language for transforming XML
      documents into other XML documents.  It is a standard
      defined by The World Wide Web consortium (W3C). 
      Information about XSLT and related technologies can be
      found at <ulink url="&url.xslt;">&url.xslt;</ulink>.
     </para>
    </sect2>
    <sect2 id="xslt.install">
     <title>Installation</title>
     <para>
      This extension uses <productname>Sabloton</productname>
      and <productname>expat</productname>, which can both be
      found at <ulink
      url="&url.sablotron;">&url.sablotron;</ulink>. Binaries
      are provided as well as source.
     <para>
      On UNIX, run <command>configure</command> with the <option
      role="configure">--with-sablot</option> and <option
      role="configure">--enable-sablot-errors-descriptive</option>
      options.  The <productname>Sablotron</productname> library
      should be installed somewhere your compiler can find it. 
     </para>
    </sect2>

    <sect2 id="xslt.about">
     <title>About This Extension</title>
     <para>
      This PHP extension implements support
      <productname>Sablotron</productname> from Ginger Alliance
      in PHP. This toolkit lets you transform 
      XML documents into other documents, including new XML
      documents, but also into HTML or other target formats. It
      basically provides a standardized and portable template
      mechanism, separating content and design of a website.
     </para>

  <refentry id="function.xslt-closelog">
   <refnamediv>
    <refname>xslt_closelog</refname>
    <refpurpose>Clear the logfile for a given instance of Sablotron</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_closelog</function></funcdef>
      <paramdef>resource <parameter>xh</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <variablelist>
      <varlistentry>
       <term><parameter>xh</parameter></term>
       <listitem>
    <simpara>
     A reference to the XSLT parser.
    </simpara>
       </listitem>
      </varlistentry>
     </variablelist></para>
    <para>
     This function returns false if <parameter>parser</parameter> does
     not refer to a valid parser, or if the closing of the logfile
     fails. Otherwise it returns true.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-create">
   <refnamediv>
    <refname>xslt_create</refname>
    <refpurpose>Create a new XSL processor.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>xslt_create</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     This function returns a handle for a new XSL processor. This handle
     is needed in all subsequent calls to XSL functions.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-errno">
   <refnamediv>
    <refname>xslt_errno</refname>
    <refpurpose>Return the current error number</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>xslt_errno</function></funcdef>
       <paramdef>
        <parameter><optional>int xh</optional></parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Return the current error number of the given XSL processor. If
     no handle is given, the last error number that occured anywhere
     is returned.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-error">
   <refnamediv>
    <refname>xslt_error</refname>
    <refpurpose>Return the current error string</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>xslt_error</function></funcdef>
       <paramdef>
        <parameter><optional>int xh</optional></parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Return the current error string of the given XSL processor. If
     no handle is given, the last error string that occured anywhere
     is returned.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-fetch-result">
   <refnamediv>
    <refname>xslt_fetch_result</refname>
    <refpurpose>Fetch a (named) result buffer</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>xslt_fetch_result</function></funcdef>
       <paramdef>
        <parameter>int xh</parameter>
        <parameter><optional>string result_name</optional></parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Fetch a result buffer from the XSLT processor identified by
     the given handle. If no result name is given, the
     buffer named &quot;/_result&quot; is fetched.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-free">
   <refnamediv>
    <refname>xslt_free</refname>
    <refpurpose>Free XSLT processor</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>xslt_free</function></funcdef>
       <paramdef>
        <parameter>resource xh</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Free the XSLT processor identified by the given handle.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-openlog">
   <refnamediv>
    <refname>xslt_openlog</refname>
    <refpurpose>Set a logfile for XSLT processor messages</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_openlog</function></funcdef>
       <paramdef>
        <parameter>resource xh</parameter>
        <parameter>string logfile</parameter>
        <parameter><optional>int loglevel</optional></parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Set a logfile for the XSLT processor to place all of its error
     messages.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-output-begintransform">
   <refnamediv>
    <refname>xslt_output_begintransform</refname>
    <refpurpose>unknown</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>unknown <function>xslt_output_begintransform</function></funcdef>
       <paramdef>
        <parameter>unknown</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     This function lacks a prototype definition.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-output-endtransform">
   <refnamediv>
    <refname>xslt_output_endtransform</refname>
    <refpurpose>unknown</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>unknown <function>xslt_output_endtransform</function></funcdef>
       <paramdef>
        <parameter>unknown</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     This function lacks a prototype definition.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-process">
   <refnamediv>
    <refname>xslt_output_process</refname>
    <refpurpose>unknown</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>unknown <function>xslt_process</function></funcdef>
       <paramdef>
        <parameter>unknown</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     This function lacks a prototype definition.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-run">
   <refnamediv>
    <refname>xslt_run</refname>
    <refpurpose>Apply a XSLT stylesheet to a file.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_run</function></funcdef>
       <paramdef>
        <parameter>resource xh</parameter>
        <parameter>string xslt_file</parameter>
        <parameter>string xml_data_file</parameter>
        <parameter><optional>string result</optional></parameter>
        <parameter><optional>array xslt_params</optional></parameter>
        <parameter><optional>array xslt_args</optional></parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Process the xml_data_file by applying the xslt_file stylesheet to
      it. The stylesheet has access to xslt_params and the processor
      is started with xslt_args. The result of the XSLT transformation
      is placed in the named buffer (default is &quot;/_result&quot;).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-set-sax-handler">
   <refnamediv>
    <refname>xslt_set_sax_handler</refname>
    <refpurpose>Set SAX handlers for a XSLT processor</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_set_sax_handler</function></funcdef>
       <paramdef>
        <parameter>resource xh</parameter>
        <parameter>array handlers</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Set SAX handlers on the ressource handle given by xh.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.xslt-transform">
   <refnamediv>
    <refname>xslt_transform</refname>
    <refpurpose>unknown</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>unknown <function>xslt_transform</function></funcdef>
       <paramdef>
        <parameter>unknown</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     This function lacks a prototype definition.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
