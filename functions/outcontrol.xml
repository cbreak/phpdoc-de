 <reference id="ref.outcontrol">
  <title>Output Control Functions</title>
  <titleabbrev>Output Control</titleabbrev>

  <partintro>
   <para>
    The Output Control functions allow you to control when output is
    sent from the script.  This can be useful in several different
    situations, especially if you need to send headers to the browser
    after your script has began outputing data.  The Output Control
    functions do not affect headers sent using
    <function>header</function> or <function>setcookie</function>,
    only functions such as <function>echo</function> and data between
    blocks of PHP code.
   </para>
   <para>
    <example>
     <title>Output Control example</title>
     <programlisting role="php">
&lt;?php

ob_start();
echo "Hello\n";

setcookie ("cookiename", "cookiedata");

ob_end_flush();

?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    In the above example, the output from <function>echo</function>
    would be stored in the output buffer until
    <function>ob_end_flush</function> was called.  In the mean time,
    the call to <function>setcookie</function> successfully stored a
    cookie without causing an error. (You can not normally send
    headers to the browser after data has already been sent.)
   </para>
   <para>
    See also <function>header</function> and
    <function>setcookie</function>.
   </para>
  </partintro>

  <refentry id="function.flush">
   <refnamediv>
    <refname>flush</refname>
    <refpurpose>
     Der Ausgabe-Puffer wird geleert und alle Zeichen ausgegeben
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>flush</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Unabhängig davon, wie PHP läuft (CGI oder WEB-Server), wird der
     gesamte Ausgabe-Puffer geleert. Dabei wird versucht den ganzen
     Inhalt an den Browser des Benutzers zu schicken.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ob-start">
   <refnamediv>
    <refname>ob_start</refname> 
    <refpurpose>
		 Einschalten der Pufferung von Ausgaben
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void<function>ob_start</function></funcdef>
		  <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion schaltet die Pufferung von Ausgaben ein. Solange
     die Ausgabe-Pufferung aktiv ist, erfolgt keine Ausgabe bei der
     Skript-Ausführung. Statt dessen werden alle Ausgaben in einem
     internen Puffer gespeichert.
    </para>
	  <para>
     Der Inhalt diese internen Puffers kann in eine String-Variable
     kopiert werden (per <function>ob_get_contents</function>). Die
     Ausgabe erfolgt erst bei Aufruf von 
     <function>ob_end_flush</function> und sobald der Puffer-Inhalt per
     <function>ob_end_clean</function> verworfen wird.
		</para>
    <para>
     Siehe auch <function>ob_get_contents</function>,
		 <function>ob_end_flush</function>,
		 <function>ob_end_clean</function> und 
     <function>ob_implicit_flush</function>.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.ob-get-contents">
   <refnamediv>
    <refname>ob_get_contents</refname> 
    <refpurpose>
     Gibt den Inhalt des Ausgabe-Puffers zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ob_get_contents</function></funcdef>
		  <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Damit wird der Inhalt des Ausgabe-Puffers zurück gegeben (oder
     False, wenn die Ausgabe-Pufferung nicht aktiv ist).
    </para>
    <para>
     Siehe auch <function>ob_start</function>,
		 <function>ob_end_flush</function> und 
     <function>ob_end_clean</function>.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.ob-end-flush">
   <refnamediv>
    <refname>ob_end_flush</refname> 
    <refpurpose>
     Leert (schickt/sendet) den Ausgabe-Puffer und deaktiviert die 
     Ausgabe-Pufferung
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>ob_end_flush</function></funcdef>
		  <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Der Inhalt des Ausgabe-Puffers (sofern vorhanden) wird abgeschickt
     und die Pufferung der Ausgabe deaktiviert. Falls sie mit dem
     Puffer-Inhalt weiter arbeiten möchten, müssen sie diesen erst per
     <function>ob_get_contents</function> zwischen speichern bevor sie
     <function>ob_end_flush</function> aufrufen, da dadurch der Puffer
     geleert wird.
    </para>
    <para>
     Siehe auch <function>ob_start</function>,
		 <function>ob_get_contents</function> und
		 <function>ob_end_clean</function>.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.ob-end-clean">
   <refnamediv>
	  <refname>ob_end_clean</refname> 
    <refpurpose>
     Bereinigt (löscht) den Ausgabe-Puffer und deaktiviert die
     Ausgabe-Pufferung
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>ob_end_clean</function></funcdef>
		  <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion verwirft den Inhalt des Ausgabe-Puffers und
     deaktiviert die Pufferung.
    </para>
    <para>
     Siehe auch <function>ob_start</function> und
		 <function>ob_end_flush</function>.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.ob-implicit-flush">
   <refnamediv>
    <refname>ob_implicit_flush</refname> 
    <refpurpose>
		 Schaltet die implizite Ausgabe ein bzw. aus
	  </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>ob_implicit_flush</function></funcdef>
  		<paramdef>int <parameter><optional>flag</optional></parameter></paramdef>		  
		 </funcprototype>
    </funcsynopsis>
    <para>
		 <function>Ob_implicit_flush</function> schaltet die implizite
     Ausgabe an oder aus (wenn kein <parameter>flag</parameter>
     angegeben wurde, wird per default "Ein" angenommen). Die implizite
     Puffer-Ausgabe erzeugt eine Ausgabe nach jedem Ausgabe-Befehl, so
     dass keine Extra-Aufrufe von <function>flush</function> mehr 
     erforderlich sind.
    </para>
	  <para>
     Das Einschalten der impliziten Ausgabe beendet die Pufferung der
     Ausgabe. Der aktuelle Puffer-Inhalt wird ausgegeben, so als ob die
     Funktion <function>ob_end_flush</function> aufgerufen wurde.
		</para>
    <para>
     Siehe auch <function>flush</function>,
		 <function>ob_start</function> und
     <function>ob_end_flush</function>.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
