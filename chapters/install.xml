 <chapter id="installation">
  <title>Installation</title>

  <sect1 id="downloading">
   <title>Download der aktuellsten Version</title>
   <simpara>
    Den Quellcode sowie die Binärdistributionen für die verschiedenen
    Plattformen (inklusive Windows) erhalten Sie unter <literal><ulink
    url="http://www.php.net/">http://www.php.net/</ulink></literal>.
   </simpara>
  </sect1>

  <sect1 id="install-unix">
   <title>Installation auf UNIX Systemen</title>

   <para>
    Dieser Abschnitt wird Sie durch die Konfiguration und Installation
    von PHP führen. Erforderliche Kenntnisse und Software:
    <itemizedlist>
     <listitem>
      <simpara>
       Grundlegende UNIX-Kenntnisse (Sie sollten in der Lage sein mit
       der make-Anweisung und einem C-Compiler umzugehen)
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       Einen ANSI C compiler
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Einen Web Server
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   
   <sect2>
    <title>"Quick Installation"- Anleitung (Apache Modul Version)</title>

    <para>
     <informalexample>
      <programlisting>
1.  gunzip apache_1.3.x.tar.gz
2.  tar xvf apache_1.3.x.tar
3.  gunzip php-3.0.x.tar.gz
4.  tar xvf php-3.0.x.tar
5.  cd apache_1.3.x
6.  ./configure --prefix=/www
7.  cd ../php-3.0.x
8.  ./configure --with-mysql --with-apache=../apache_1.3.x --enable-track-vars
9.  make
10. make install
11. cd ../apache_1.3.x
12. ./configure --prefix=/www --activate-module=src/modules/php3/libphp3.a
13. make
14. make install

  Sie können aber auch alternativ zu oben beschriebenen Schritt
  einfach die httpd binary auf Ihre existierende Binary übertragen In
  jedem Fall sollte darauf geachtet werden, den Server vorher
  herunterzufahren.
  
15. cd ../php-3.0.x
16. cp php3.ini-dist /usr/local/lib/php3.ini

  Sie können nun die php.ini unter /usr/local/lib/php3.ini editieren,
  um Ihre gewünschten PHP-Optionen einzustellen. Wenn Sie die php.ini
  lieber in einem anderen Verzeichnis haben möchten, dann sollten Sie
  Sie in Schritt 8 --with-config-file-path=/path angeben.

17. Editieren Sie nun Ihre httpd.conf or srm.conf folgendermassen: 
      
            AddType application/x-httpd-php3 .php3
 
    Es bleibt Ihnen völlig freigestellt, welche File-Extension Sie
    hier benutzen. ".php3" wird von uns lediglich empfohlen.

18. Starten Sie den Apache Web Server. Sie müssen den Server starten
    und beenden, ein einfacher Reload mittels des HUP oder USR1
    Signales ist nicht ausreichend.
      </programlisting>
     </informalexample>
    </para>

   </sect2>
 
   <sect2>
    <title>Konfiguration</title>
    <para>
     Es gibt zwei Möglichkeiten PHP zu konfigurieren.
     
     <itemizedlist>
      <listitem>
       <para>
        Sie können das mitgelieferte "Setup"- Skript von PHP benutzen.
        Dieses Skript wird Ihnen eine handvoll Fragen stellen (ähnlich
        dem "Install"- Skript von PHP/FI 2.0) und am Ende "configure"
        ausführen. Um dieses Skript auszuführen, geben Sie
        <command>./setup</command> ein.
       </para>
       <para>
	Dieses Skript wird zusätzlich eine Datei namens "do-conf"
	erstellen, welches die Konfigurations-Optionen enthält, die
	"configure" übermittelt wurden. Um später noch änderungen in
	der Konfiguration vorzunehmen, können Sie einfach diese Datei
	editieren, ohne ein erneutes Setup ausführen zu müssen. Geben
	Sie hierzu <command>./do-conf</command> ein, um PHP mit den
	neuen Optionen zu konfigurieren.
       </para>
      </listitem>
      <listitem>
       <para>
	Die Alternative ist "configure" manuell auszuführen. Um zu
	sehen, welche Optionen "configure" bietet, geben Sie
	<command>./configure --help</command> ein.
       </para>
      </listitem>
     </itemizedlist></para>
     
    <para>
     Details über einige der verschiedenen Konfiguratrions- Optionen
     sind weiter unten aufgeführt.
    </para>
   </sect2>

   <sect2 id="with-apache">
    <title>Apache Modul</title>

    <para>
     To build PHP as an Apache module, answer "yes" to "Build as an
     Apache module?" (the <option><link linkend="with-apache">
     --with-apache</link>=<replaceable>DIR</replaceable></option>
     option to configure) and specify the Apache distribution base
     directory.  If you have unpacked your Apache distribution in
     <filename
     class="directory">/usr/local/www/apache_1.2.4</filename>, this is
     your Apache distribution base directory.  The default directory
     is <filename
     class="directory">/usr/local/etc/httpd</filename>.
    </para>
   </sect2>

   <sect2 id="with-fhttpd">
    <title>fhttpd module</title>

    <para>
     To build PHP as an fhttpd module, answer "yes" to "Build as an
     fhttpd module?" (the <option><link linkend="with-fhttpd">
     --with-fhttpd</link>=<replaceable>DIR</replaceable></option>
     option to configure) and specify the fhttpd source base
     directory.  The default directory is <filename
     class="directory">/usr/local/src/fhttpd</filename>. If you are
     running fhttpd, building PHP as a module will give better
     performance, more control and remote execution
     capability.
    </para>
   </sect2>
     
   <sect2 id="install-cgi">
    <title>CGI version</title>

    <para>
     The default is to build PHP as a CGI program.  If you are running
     a web server PHP has module support for, you should generally go
     for that solution for performance reasons.  However, the CGI
     version enables Apache users to run different PHP-enabled pages
     under different user-ids.  Please make sure you read through the
     <link linkend="security">Security chapter</link> if you are going
     to run PHP as a CGI.
    </para>
   </sect2>

   <sect2>
    <title>Database Support Options</title>

    <para>
     PHP has native support for a number of databases (as well as
     ODBC):
    </para>

    <sect3 id="with-adabas">
     <title>Adabas D</title>
     <synopsis>
      <option>--with-adabas<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Compiles with Adabas D support.  The parameter is the Adabas D
      install directory and defaults to <filename
      class="directory">/usr/local/adabasd</filename>.
     </simpara>
     <simpara>
      <ulink url="http://www.adabas.com/">Adabas home
      page</ulink>
     </simpara>
    </sect3>
    
    <sect3 id="with-dbase">
     <title>dBase</title>
     <synopsis>
      <option>--with-dbase</option>
     </synopsis>
     <simpara>
      Enables the bundled DBase support.  No external libraries are
      required.
     </simpara>
    </sect3>

    <sect3 id="with-filepro">
     <title>filePro</title>
     <synopsis>
      <option>--with-filepro</option>
     </synopsis>
     <simpara>
      Enables the bundled read-only filePro support.  No external
      libraries are required.</simpara>
    </sect3>

    <sect3 id="with-msql">
     <title>mSQL</title>
     <synopsis>
      <option>--with-msql<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Enables mSQL support.  The parameter to this option is the mSQL
      install directory and defaults to <filename
      class="directory">/usr/local/Hughes</filename>.  This is the
      default directory of the mSQL 2.0 distribution.
      <command>configure</command> automatically detects which mSQL
      version you are running and PHP supports both 1.0 and 2.0, but
      if you compile PHP with mSQL 1.0, you can only access mSQL 1.0
      databases, and vice-versa.
     </simpara>
     <simpara>
      See also <link linkend="ini.sect.msql">mSQL Configuration</link>
      Directives in the <link
      linkend="configuration.file">configuration file</link>.
     </simpara>
     <simpara>
      <ulink url="http://www.hughes.com.au">mSQL home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-mysql">
     <title>MySQL</title>
     <synopsis>
      <option>--with-mysql<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Enables MySQL support.  The parameter to this option is the
      MySQL install directory and defaults to <filename
      class="directory">/usr/local</filename>.  This is the default
      installation directory of the MySQL distribution.
     </simpara>
     <simpara>
      See also <link linkend="ini.sect.mysql">MySQL
      Configuration</link> Directives in the <link
      linkend="configuration.file">configuration
      file</link>.
     </simpara>
     <simpara>
      <ulink url="http://www.tcx.se">MySQL home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-iodbc">
     <title>iODBC</title>
     <synopsis>
      <option>--with-iodbc<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Includes iODBC support.  This feature was first developed for
      iODBC Driver Manager, a freely redistributable ODBC driver
      manager which runs under many flavors of UNIX. The parameter to
      this option is the iODBC installation directory and defaults to
      <filename class="directory">/usr/local</filename>.
     </simpara>
     <simpara>
      <ulink url="http://users.ids.net/~bjepson/freeODBC/">FreeODBC
      home page</ulink> or <ulink url="http://www.iodbc.org">iODBC
      home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-openlink">
     <title>OpenLink ODBC</title>
     <synopsis>
      <option>--with-openlink<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Includes OpenLink ODBC support. The parameter to this option is
      the OpenLink ODBC installation directory and defaults to
      <filename class="directory">/usr/local/openlink</filename>.
     </simpara>
     <simpara>
      <ulink url="http://www.openlinksw.com/">OpenLink Software's home
      page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-oracle">
     <title>Oracle</title>
     <synopsis>
      <option>--with-oracle<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Includes Oracle support.  Has been tested and should be working
      at least with Oracle versions 7.0 through 7.3.  The parameter is
      the <envar>ORACLE_HOME</envar> directory.  You do not have to
      specify this parameter if your Oracle environment has been set
      up.
     </simpara>
     <simpara>
      <ulink url="http://www.oracle.com">Oracle home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-pgsql">
     <title>PostgreSQL</title>
     <synopsis>
      <option>--with-pgsql<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Includes PostgreSQL support.  The parameter is the PostgreSQL
      base install directory and defaults to <filename
      class="directory">/usr/local/pgsql</filename>.
     </simpara>
     <simpara>
      See also <link linkend="ini.sect.pgsql">Postgres
      Configuration</link> Directives in the <link
      linkend="configuration.file">configuration file</link>.
     </simpara>
     <simpara>
      <ulink url="http://www.postgreSQL.org/">PostgreSQL home
      page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-solid">
     <title>Solid</title>
     <synopsis>
      <option>--with-solid<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Includes Solid support.  The parameter is the Solid install
      directory and defaults to <filename
      class="directory">/usr/local/solid</filename>.
     </simpara>
     <simpara>
      <ulink url="http://www.solidtech.com">Solid home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-sybase">
     <title>Sybase</title>
     <synopsis>
      <option>--with-sybase<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Includes Sybase support.  The parameter is the Sybase install
      directory and defaults to <filename
      class="directory">/home/sybase</filename>.
     </simpara>
     <simpara>
      See also <link linkend="ini.sect.sybase">Sybase
      Configuration</link> Directives in the <link
      linkend="configuration.file">configuration file</link>.
     </simpara>
     <simpara>
      <ulink url="http://www.sybase.com">Sybase home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-sybase-ct">
     <title>Sybase-CT</title>
     <synopsis>
      <option>--with-sybase-ct<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Includes Sybase-CT support.  The parameter is the Sybase-CT
      install directory and defaults to <filename
      class="directory">/home/sybase</filename>.
     </simpara>
     <simpara>
      See also <link linkend="ini.sect.sybct">Sybase-CT
      Configuration</link> Directives in the <link
      linkend="configuration.file">configuration file</link>.
     </simpara>
    </sect3>

    <sect3 id="with-velocis">
     <title>Velocis</title>
     <synopsis>
      <option>--with-velocis<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Includes Velocis support.  The parameter is the Velocis install
      directory and defaults to <filename
      class="directory">/usr/local/velocis</filename>.
     </simpara>
     <simpara>
      <ulink url="http://www.raima.com">Velocis home page</ulink></simpara>
    </sect3>

    <sect3 id="with-custom-odbc">
     <title>A custom ODBC library</title>
     <synopsis>
      <option>--with-custom-odbc<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Includes support for an arbitrary custom ODBC library.  The
      parameter is the base directory and defaults to <filename
      class="directory">/usr/local</filename>.
     </simpara>
     <simpara>
      This option implies that you have defined CUSTOM_ODBC_LIBS when
      you run the configure script. You also must have a valid odbc.h
      header somewhere in your include path. If you don't have one,
      create it and include your specific header from there. Your
      header may also require some extra definitions, particularly
      when it is multiplatform. Define them in CFLAGS.
     </simpara>
     <simpara>
      For example, you can use Sybase SQL Anywhere on QNX as
      following:
      <literal>
       CFLAGS=-DODBC_QNX LDFLAGS=-lunix CUSTOM_ODBC_LIBS="-ldblib
       -lodbc" ./configure --with-custom-odbc=/usr/lib/sqlany50
      </literal>
     </simpara>
    </sect3>

    <sect3 id="disable-unified-odbc">
     <title>Unified ODBC</title>
     <synopsis>
      <option>--disable-unified-odbc</option>
     </synopsis>
     <simpara>
      Disables the Unified ODBC module, which is a common interface to
      all the databases with ODBC-based interfaces, such as Solid and
      Adabas D.  It also works for normal ODBC libraries. Has been
      tested with iODBC, Solid, Adabas D and Sybase SQL
      Anywhere. Requires that one (and only one) of these modules or
      the Velocis module is enabled, or a custom ODBC library
      specified. This option is only applicable if one of the
      following options is used: <link
      linkend="with-iodbc">--with-iodbc</link>, <link
      linkend="with-solid">--with-solid</link>, <link
      linkend="with-adabas">--with-adabas</link>, <link
      linkend="with-velocis">--with-velocis</link>, or <link
      linkend="with-adabas">--with-custom-odbc</link>.
     </simpara>
     <simpara>
      See also <link linkend="ini.sect.uodbc">Unified ODBC
      Configuration</link> Directives in the <link
      linkend="configuration.file">configuration
      file</link>.
     </simpara>
    </sect3>

    <sect3 id="with-ldap">
     <title>LDAP</title>
     <synopsis>
      <option>--with-ldap<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Includes <acronym>LDAP</acronym> (Lightweight Directory Access
      Protocol) support.  The parameter is the LDAP base install
      directory, defaults to <filename
      class="directory">/usr/local/ldap</filename>.
     </simpara>
     <simpara>
      More information about LDAP can be found in <ulink
      url="ftp://ftp.isi.edu/in-notes/rfc1777.txt">RFC1777</ulink> and
      <ulink
      url="ftp://ftp.isi.edu/in-notes/rfc1778.txt">RFC1778</ulink>.
     </simpara>
    </sect3>

   </sect2>

   <sect2>
    <title>Other configure options</title>

    <sect3 id="with-mcrypt">
     <title>--with-mcrypt<replaceable>=DIR</replaceable></title>
     <synopsis>
      <option>--with-mcrypt</option>
     </synopsis>
     <simpara>
      Include support for the mcrypt library. See the <link
      linkend="ref.mcrypt">mcrypt documentation</link> for more
      information. If you use the optional
      <replaceable>DIR</replaceable> argument, PHP will look for
      mcrypt.h in <replaceable>DIR</replaceable>/include.
     </simpara>
    </sect3>
     
    <sect3 id="enable-sysvsem">
     <title>--enable-sysvsem</title>
     <synopsis>
      <option>--enable-sysvsem</option>
     </synopsis>
     <simpara>
      Include support for Sys V semaphores (supported by most Unix
      derivates). See the <link linkend="ref.sem">Semaphore and Shared
      Memory documentation</link> for more information.
     </simpara>
    </sect3>

    <sect3 id="enable-sysvshm">
     <title>--enable-sysvshm</title>
     <synopsis>
      <option>--enable-sysvshm</option>
     </synopsis>
     <simpara>
      Include support for Sys V shared memory (supported by most Unix
      derivates). See the <link linkend="ref.sem">Semaphore and Shared
      Memory documentation</link> for more information.
     </simpara>
    </sect3>

    <sect3 id="with-xml">
     <title>--with-xml</title>
     <synopsis>
      <option>--with-xml</option>
     </synopsis>
     <simpara>
      Include support for a non-validating XML parser using James
      Clark's <ulink url="&url.expat;">expat library</ulink>.  See the
      <link linkend="ref.xml">XML function reference</link> for
      details.
     </simpara>
    </sect3>

    <sect3 id="enable-maintainer-mode">
     <title>--enable-maintainer-mode</title>
     <synopsis>
      <option>--enable-maintainer-mode</option>
     </synopsis>
     <simpara>
      Turns on extra dependencies and compiler warnings used by some
      of the PHP developers.
     </simpara>
    </sect3>

    <sect3 id="with-system-regex">
     <title>--with-system-regex</title>
     <synopsis>
      <option>--with-system-regex</option>
     </synopsis>
     <simpara>
      Uses the system's regular expression library rather than the
      bundled one.  If you are building PHP as a server module, you
      must use the same library when building PHP as when linking the
      server.  Enable this if the system's library provides special
      features you need.  It is recommended that you use the bundled
      library if possible.
     </simpara>
    </sect3>

    <sect3 id="with-config-file-path">
     <title>--with-config-file-path</title>
     <synopsis>
      <option>--with-config-file-path=DIR</option>
     </synopsis>
     <simpara>
      The path used to look for <link linkend="configuration.file">the
      configuration file</link> when PHP starts up.
     </simpara>
    </sect3>

    <sect3 id="with-exec-dir">
     <title>--with-exec-dir</title>
     <synopsis>
      <option>--with-exec-dir<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Only allow running of executables in DIR when in safe mode.
      Defaults to <filename
      class="directory">/usr/local/bin</filename>.  This option only
      sets the default, it may be changed with the <link
      linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>
      directive in the <link
      linkend="configuration.file">configuration file</link> later.
     </simpara>
    </sect3>

    <sect3 id="enable-debug">
     <title>--enable-debug</title>
     <synopsis>
      <option>--enable-debug</option>
     </synopsis>
     <simpara>
      Enables extra debug information. This makes it possible to
      gather more detailed information when there are problems with
      PHP.  (Note that this doesn't have anything to do with debugging
      facilities or information available to PHP scripts.)
     </simpara>
    </sect3>

    <sect3 id="enable-safe-mode">
     <title>--enable-safe-mode</title>
     <synopsis>
      <option>--enable-safe-mode</option>
     </synopsis>
     <simpara>
      Enables "safe mode" by default. This imposes several
      restrictions on what PHP can do, such as opening only files
      within the document root.  Read the <link
      linkend="security">Security chapter</link> for more more
      information.  CGI users should always enable secure mode.  This
      option only sets the default, it may be enabled or disabled with
      the <link linkend="ini.safe-mode">safe_mode</link> directive in
      the <link linkend="configuration.file">configuration file</link>
      later.
     </simpara>
    </sect3>

    <sect3 id="enable-track-vars">
     <title>--enable-track-vars</title>
     <synopsis>
      <option>--enable-track-vars</option>
     </synopsis>
     <simpara>
      Makes PHP keep track of where GET/POST/cookie variables come
      from in the arrays HTTP_GET_VARS, HTTP_POST_VARS and
      HTTP_COOKIE_VARS.  This option only sets the default, it may be
      enabled or disabled with the <link
      linkend="ini.track-vars">track_vars</link> directive in the
      <link linkend="configuration.file">configuration file</link>
      later.
     </simpara>
    </sect3>

    <sect3 id="enable-magic-quotes">
     <title>--enable-magic-quotes</title>
     <synopsis>
      <option>--enable-magic-quotes</option>
     </synopsis>
     <simpara>
      Enable magic quotes by default.  This option only sets the
      default, it may be enabled or disabled with the <link
      linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link>
      directive in the <link
      linkend="configuration.file">configuration file</link>
      later. See also the <link linkend="ini.magic-quotes-gpc">
      magic_quotes_gpc</link> and the <link
      linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>
      directives.
     </simpara>
    </sect3>

    <sect3 id="enable-debugger">
     <title>--enable-debugger</title>
     <synopsis>
      <option>--enable-debugger</option>
     </synopsis>
     <simpara>
      Enables the internal PHP debugger support.  This feature is
      still in an experimental state. See also the <link
      linkend="ini.sect.debugger">Debugger Configuration</link>
      directives in the <link
      linkend="configuration.file">configuration
      file</link>.
     </simpara>
    </sect3>

    <sect3 id="enable-discard-path">
     <title>--enable-discard-path</title>
     <synopsis>
      <option>--enable-discard-path</option>
     </synopsis>
     <simpara>
      If this is enabled, the PHP CGI binary can safely be placed
      outside of the web tree and people will not be able to
      circumvent .htaccess security.  Read the <link
      linkend="security.cgi.shell">section in the security
      chapter</link> about this option.
     </simpara>
    </sect3>

    <sect3 id="enable-bcmath">
     <title>--enable-bcmath</title>
     <synopsis>
      <option>--enable-bcmath</option>
     </synopsis>
     <simpara>
      Enables <command>bc</command> style arbitrary precision math
      functions. See also the <link
      linkend="ini.sect.bcmath">bcmath.scale </link> option in the
      <link linkend="configuration.file">configuration
      file</link>.
     </simpara>
    </sect3>

    <sect3 id="enable-force-cgi-redirect">
     <title>--enable-force-cgi-redirect</title>
     <synopsis>
      <option>--enable-force-cgi-redirect</option>
     </synopsis>
     <simpara>
      Enable the security check for internal server redirects.  You
      should use this if you are running the CGI version with Apache.
     </simpara>
     <simpara>
      When using PHP as a CGI binary, PHP by default always first
      checks that it is used by redirection (for example under Apache,
      by using Action directives).  This makes sure that the PHP
      binary cannot be used to bypass standard web server
      authentication procedures by calling it directly, like <filename
      role="url">http://my.host/cgi-bin/php/secret/doc.html</filename>.
      This example accesses <filename
      role="url">http://my.host/secret/doc.html</filename> but does
      not honour any security settings enforced by httpd for directory
      <filename role="dir">/secret</filename>.
     </simpara>
     <simpara>
      Not enabling option disables the check and enables bypassing httpd
      security and authentication settings.  Do this only if your
      server software is unable to indicate that a safe redirection
      was done and all your files under your document root and
      user directories may be accessed by anyone.
     </simpara>
     <simpara>
      Read the <link linkend="security.cgi.force-redirect">section in
      the security chapter</link> about this option.
     </simpara>
    </sect3>

    <sect3 id="disable-short-tags">
     <title>--disable-short-tags</title>
     <synopsis>
      <option>--disable-short-tags</option>
     </synopsis>
     <simpara>
      Disables the short form <literal>&lt;? ?&gt;</literal> PHP tags.
      You must disable the short form if you want to use PHP with
      <acronym>XML</acronym>.  With short tags disabled, the only PHP
      code tag is <literal>&lt;?php ?&gt;</literal>.  This option only
      sets the default, it may be enabled or disabled with the <link
      linkend="ini.short-open-tag">short_open_tag</link> directive in
      the <link linkend="configuration.file">configuration file</link>
      later.
     </simpara>
    </sect3>

    <sect3 id="enable-url-includes">
     <title>--enable-url-includes</title>
     <synopsis>
      <option>--enable-url-includes</option>
     </synopsis>
     <simpara>
      Makes it possible to run code on other HTTP or FTP servers
      directly from PHP with <link
      linkend="function.include">include()</link>.  See also the <link
      linkend="ini.include-path">include_path</link> option in the
      <link linkend="configuration.file">configuration file</link>.
     </simpara>
    </sect3>

    <sect3 id="disable-syntax-hl">
     <title>--disable-syntax-hl</title>
     <synopsis>
      <option>--disable-syntax-hl</option>
     </synopsis>
     <simpara>
      Turns off syntax highlighting.
     </simpara>
    </sect3>

    <sect3>
     <title>CPPFLAGS and LDFLAGS</title>
     <para>
      To make the PHP installation look for header or library files in
      different directories, modify the <envar>CPPFLAGS</envar> and
      <envar>LDFLAGS</envar> environment variables, respectively.  If
      you are using a sensible shell, you should be able to do
      <command>
       LDFLAGS=-L/my/lib/dir CPPFLAGS=-I/my/include/dir ./configure
      </command>
     </para>
    </sect3>

   </sect2>


   <sect2>
    <title>Building</title>
    <simpara>
     When PHP is configured, you are ready to build the CGI executable
     or the PHP library.  The command <command>make</command> should
     take care of this.  If it fails and you can't figure out why, see
     the <link linkend="install-problems">Problems
     section</link>.
    </simpara>

   </sect2>

   <sect2>
    <title>Testing</title>
    <simpara>
     If you have built PHP as a CGI program, you may test your build
     by typing <command>make test</command>.  It is always a good idea
     to test your build.  This way you may catch a problem with PHP on
     your platform early instead of having to struggle with it later.
    </simpara>
   </sect2>

   <sect2>
    <title>Benchmarking</title>
    <simpara>
     If you have built PHP as a CGI program, you may benchmark your
     build by typing <command>make bench</command>. Note that if safe
     mode is on by default, the benchmark may not be able to finish if
     it takes longer then the 30 seconds allowed. This is because the
     <function>set_time_limit</function> can not be used in safe
     mode. Use the <link
     linkend="ini.max-execution-time">max_execution_time</link>
     configuration setting to control this time for your own
     scripts. <command>make bench</command> ignores the <link
     linkend="configuration.file">configuration file</link>.
    </simpara>
   </sect2>

  </sect1>

  <sect1 id="install-windows95-nt">
   <title>Installation auf Windows 95/98/NT Systemen</title>

   <simpara>
    Diese Installationsanleitung soll Ihnen helfen, PHP auf Ihrem
    Windows 9x/NT Webserver zu installieren und zu konfigurieren.
    Dieses Anleitung wurde von &link.bob; erstellt. Um die aktuellste
    Fassung (Englisch) zu erhalten, klicken Sie bitte hier: <ulink
    url="&url.win32install">&url.win32install</ulink>.
   </simpara>

   <para>
    Diese Anleitung umfasst die Installation folgender Komponenten:
    <itemizedlist>
     <listitem>
      <para>
       Personal Web Server (Neueste Version empfohlen)
      </para>
     </listitem>
     <listitem>
      <para>
       Internet Information Server 3 oder 4
      </para>
     </listitem>
     <listitem>
      <para>
       Apache 1.3.x
      </para>
     </listitem> 
     <listitem>
      <para>
       Omni HTTPd 2.0b1
      </para>
     </listitem>
    </itemizedlist>
   </para>
 
   <sect2>
    <title>Grundlegende Installations- Schritte</title>

    <para>
     Die folgenden Schritte sollten in jedem Fall und unabhängig vom
     bevorzugten Webserver ausgeführt werden.
     
     <itemizedlist>
      <listitem>
       <para>
	Entpacken Sie die Dateien, die mit der Distribution
	mitgeliefert werden in ein Verzeichnis Ihrer Wahl. Wir
	empfehlen "C:\PHP3\".
       </para>
      </listitem>
      <listitem>
       <para>
	Kopieren Sie die 'php3.ini-dist'- Datei in Ihr '%WINDOWS%'-
	Verzeichnis un benennen Sie sie um in 'php3.ini'. Ihr
	Windows-Verzeichnis ist im Allgemeinen:
	<simplelist>
	 <member>c:\windows für Windows 95/98</member>
	 <member>c:\winnt oder c:\winnt40 für NT servers</member>
	</simplelist>
       </para>	
      </listitem>
      <listitem>
       <para>
	Editieren Sie nun Ihre 'php3.ini' -Datei mit Ihrem bevorzugtem
	Editor:
	<itemizedlist>
	 <listitem>
	  <simpara>
	   Sie müssen den Schlüssel 'extension_dir' so verändern, dass
	   er auf Ihr PHP-Verzeichnis zeigt, bzw. dorthin, wo Sie die
	   zu ladenden Erweiterungen (Module) abgelegt haben.  Z.B.:
	   c:\php3
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   Wenn Sie den Omni Httpd-Server verwenden, überspringen Sie
	   den nächsten Schritt.  Geben Sie bei dem Schlüssel
	   'doc_root' das Stammverzeichnis an, in dem Ihre PHP-Skripte
	   liegen. Sie sollten diese Angabe aus Sicherheits-gründen
	   auf das Dokumentenverzeichnis des Webservers setzen:
	   Apache: '%apache\htdocs' IIS: '%inetpub\wwwroot' PWS:
	   '%webshare\wwwroot'. 
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   Wählen Sie nun die Erweiterungen (Module) aus, die Sie
	   benutzen möchten, wenn PHP startet. Dieses geschieht, indem
	   Sie die jeweiligen Schlüssel 'extension=php3_*.dll'
	   entkommentieren (Entfernen Sie das ';' vor den
	   Erweiterungen).  Einige Erweiterungen stehen in
	   Abhängigkeiten zu zusätzlichen Bibliotheken (Libraries),
	   welche auf Ihrem System installiert sein müssen, um korrekt
	   zu funktionieren.  Die <ulink
	   url="&url.php.faq">FAQ</ulink> - Sektion von PHP liefert
	   hier weitere Informationen über Bezugsquellen weiterer
	   Bibliotheken.  Bei selten benutzten Modulen empfiehlt es
	   sich diese im Hinblick auf Systemresourcen dynamisch in das
	   einzelne Skript zu laden. Module können Sie dynamisch
	   mittels folgender Anweisung laden:
	   <command>dl("php_*.dll");</command>
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   Wenn Sie den PWS oder IIS benutzen, können Sie die
	   browscap.ini auf folgende Verzeichnisse setzen:
	   'c:\windows\system\inetsrv\browscap.ini' für Windows 95/98
	   und 'c:\winnt\system32\inetsrv\browscap.ini' für NT
	   Server. Zusätzliche Informationen zur Benutzung der
	   browsecap.ini und Ihrer Funktionalität erhalten Sie hier:
	   <ulink url="&url.browscap;">mirror</ulink>, klicken Sie auf
	   den "source" button um ein Anwendungsbeispiel zu erhalten.
	  </simpara>
	 </listitem>
	</itemizedlist>
       </para>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     Den DLLs für PHP Erweiterungen sind allen das Prefix 'php3_'
     vorangestellt.  Dieses soll Unklarheiten zwischen PHP
     Erweiterungen und ihren unterstützenden Bibliotheken vorbeugen.
    </simpara>

   </sect2>

   <sect2>
    <title>Windows 95/98/NT und PWS/IIS 3</title>

    <simpara>
     Die empfohlene Methode, um diese Server zu konfigurieren ist es,
     die 'php_iis_reg.inf'- Datei zu benutzen. Sie können diese Datei
     editieren, um sie Ihren Wünschen anzupassen. Sie können aber die
     Konfiguration auch "von Hand" vornehmen.
    </simpara>
    <simpara>
     (!)WARNUNG: Diese Schritte erfordern einen Eingriff in die
     Registrierungsdatei von Windows. Sie sollten auf jeden Fall zuvor
     eine Sicherheitskopie Ihrer Registrierungsdatei erstellen. Sollte
     Ihnen bei der Bearbeitung der Registrierungsdatei ein Fehler
     unterlaufen, kann dieses ein instabiles oder nicht mehr
     startendes System zur Folge haben.  Wir lehnen jede Verantwortung
     für Schäden und Verluste ab.  Bitte seien Sie also bei der
     folgenden Methode sehr aufmerksam.
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
	Starten Sie regedit.exe
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Gehen Sie zu <literal>HKEY_LOCAL_MACHINE /System
	/CurrentControlSet /Services /W3Svc /Parameters
	/ScriptMap</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wählen Sie aus dem 'Bearbeiten-Menü' folgendes aus:
	<literal>Neu->Zeichenfolge</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Geben Sie hier die Erweiterung Ihrer .php3- Dateien an. Bsp.:
	<literal>.php3</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Klicken Sie nun doppelt auf den Wert der Zeichenkette, und
	geben Sie hier als zugeordnetes Programm Ihre
	<literal>php.exe</literal> an. Bsp.: <literal>c:\php3\php.exe
	%s %s</literal>. Die Folge '%s %s' ist unbedingt einzufügen,
	PHP würde sonst nicht korrekt arbeiten.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wiederholen Sie diese Schritte für jede weitere
	Datei-Erweiterung, die sie mit PHP verbinden wollen.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wechseln Sie zu: <literal>HKEY_CLASSES_ROOT</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wählen Sie aus dem 'Bearbeiten-Menü' folgendes aus:
	<literal>Neu->Schlüssel</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Benennen Sie den Schlüssel wie Ihre Datei-Erweiterung
	(<literal>.php3</literal>)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wählen Sie nun den neu erstellten Schlüssel aus, und weisen
	Sie ihm den Standartwert <literal>phpfile</literal> zu.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wiederholen Sie diese Schritte, wenn Sie weitere
	Datei-Erweiterungen konfigurieren wollen.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Erzeugen Sie nun einen weiteren Schlüssel
	<literal>Neu->schlüssel</literal> im Verzeichnis
	<literal>HKEY_CLASSES_ROOT</literal> und benennen Sie ihn mit
	<literal>phpfile</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wählen Sie den neuen Schlüssel <literal>phpfile</literal> aus,
	und und weisen Sie ihm den Standartwert <literal>PHP
	Script</literal> zu.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Erstellen Sie nun unterhalb von <literal>phpfile</literal>
	mittels Rechtsklick einen neue Schlüssel und nennen Sie ihn
	<literal>Shell</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Unterhalb von <literal>Shell</literal> erzeugen Sie nun einen
	weiteren Schlüssel und nennen ihn <literal>open</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Unterhalb von <literal>open</literal> erzeugen Sie jetzt noch
	einen Schlüssel und nennen ihn <literal>command</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wählen Sie den Schlüssel <literal>command</literal> aus, und
	geben Sie ihm als Standartwert den Pfad zur
	<literal>php.exe</literal> mit folgender Schreibweise an:
	<literal>c:\php3\php.exe -q %1</literal>. (vergessen Sie bitte
	nicht das <literal>%1</literal>).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Beenden Sie Regedit.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     PWS and IIS 3 Benutzer sollten nun ein voll funktionsfähiges
     System haben.  IIS 3 Benutzer können ein kleines <ulink
     url="http://www.genusa.com/iis/iiscfg.html">Tool</ulink> von
     Steven Genusa benutzen, um Ihre Skript-Maps zu editieren.
    </simpara>

   </sect2>

   <sect2>
    <title>Windows NT und IIS 4</title>

    <simpara>
     Um PHP auf Windows NT und dem IIS4 zu installieren, folgen Sie
     dieser Anleitung:
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
	Im Internet Service Manager (MMC) selektieren Sie die Webseite
	oder ein Ausgangsverzeichnis Ihrer Anwendungen.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Öffnen Sie die Eigenschaften Ihres Verzeichnisses
	(Rechtsklick), danach klicken Sie auf die Registerkarte
	Homeverzeichnis, Virtuelles Verzeichnis oder Verzeichnis.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Klicken Sie auf die Schaltfläche Konfiguration und
	anschliessend auf die Registerkarte Anwendungs-Mapping.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Klicken Sie auf Hinzufügen und geben Sie in der Ausführungsbox
	ein: <literal>c:\path-to-php-dir\php.exe %s %s</literal>.Sie
	müssen %s %s unbedingt am Ende eingeben, sonst wird PHP nicht
	korrekt arbeiten.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Inder Ausführungsbox geben Sie die Dateierweiterungen an, mit
	der Ihre PHP-Skripte verbunden werden sollen. (Sie müssen
	Schritt 5 und 6 für jede zusätzlich gewünschte Erweiterung
	wiederholen. <literal>.php3</literal> und
	<literal>.phtml</literal> sind die gebräuchlichsten.)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Stellen Sie im Internet Service Manager die geeigneten
	Sicherheitsmechanismen ein.  Falls Ihr NT- Server das NTFS-
	Dateisystem benutzt, dann fügen Sie bitte Ausführungsrechte
	für I_USR_ dem Verzeichnis hinzu, das das Programm
	<literal>php.exe</literal> enthält.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

   </sect2>

   <sect2>
    <title>Windows 9x/NT and Apache 1.3.x</title>
    
    <simpara>
     Um den Apache zu konfigurieren, müssen Sie die Datei
     <literal>httpd.conf</literal> zum Bearbeiten öffnen (Bei älteren
     Apache-Versionen sind noch weitere Konfigurations-Dateien
     vorhanden; hier muss dann auch die <literal>srm.conf</literal>
     editiert werden).
    </simpara>
    <simpara>
     Obwohl der Apache auf mannigfaltige Weise konfiguriert werden
     kann, sollte die hier vorgestellte Art selbst für einen
     "Newcomer" keine grösseren Hindernisse darstellen. Für
     weitere Konfigurationsmöglichkeiten konsultieren Sie bitte die
     Apache Docs.
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
	<literal>
	 ScriptAlias /php3/ "c:/path-to-php-dir/"
	</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<literal>
	 AddType application/x-httpd-php3 .php3
	</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<literal>
	 AddType application/x-httpd-php3 .phtml
	</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<literal>
	 Action application/x-httpd-php3 "/php3/php.exe"
	</literal>
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     Das Quell-Code-Highlighting Feature nutzen sie mit der Funktion
     showSource().  Erstellen Sie z.B. ein PHP-Skript in welchem Sie
     folgenden Code eingeben: <literal>&lt;?php show_source
     ("original_php_script.php3"); ?></literal>.  Ersetzen Sie
     <literal>original_php_script.php3</literal> durch den Namen des
     Skriptes, dessen Quellcode Sie anzeigen wollen (Dieses ist nur
     ein Weg, das Feature zu nutzen). Die Farben der des
     Syntax-Highlighting können Sie in der php.ini im Abschnitt
     'Languages Options' einstellen.  <emphasis>Bemerkung:</emphasis>
     Auf Win-Apache müssen alle Backslashes in einer
     Verzeichnis-Anweisung in Forward-Slashes (normaler Slash)
     konvertiert werden.
    </simpara>

   </sect2>

   <sect2>
    <title>Omni HTTPd 2.0b1 für Windows</title>
    
    <simpara>
     Dieser ist von allen Server der am einfachsten zu konfigurierende:
    </simpara>

    <para>
     <simplelist>
      <member>
       Schritt 1: Installieren Sie den Omni server
      </member>
      <member>
       Schritt 2: Rechtsklick auf das blaue OmniHTTPd Icon in der System
       Tray und selektieren Sie <literal>Eigenschaften</literal>
      </member>
      <member>
       Schritt 3: Klicken Sie auf <literal>Web Server Global
       Settings</literal>
      </member>
      <member>
       Schritt 4: Bei der Registerkarte 'External' , geben Sie
       folgendes ein: <literal>virtual = .php3 | actual =
       c:\path-to-php-dir\php.exe</literal>
      </member>
      <member>
       Schritt 5: Bei der Registerkarte <literal>Mime</literal> geben
       Sie folgendes ein: <literal>virtual = wwwserver/stdcgi | actual
       = .php3</literal>
      </member>
      <member>
       Schritt 6: Klicken Sie auf <literal>OK</literal>. Fertig :-)
      </member>
     </simplelist>
    </para>

    <simpara>
     Wiederholen Sie Schritt 2-6 für jede Dateierweiterung, die Sie
     mit PHP verbinden wollen.
    </simpara>

   </sect2>

   <sect2>
    <title>PHP Module</title>

    <para>
     <table>
      <title>PHP Module</title>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>php3_calendar.dll</entry>
	 <entry>Kalender - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_crypt.dll</entry>
	 <entry>Verschlüsselungs - Funktionen (MD5)</entry>
	</row>
	<row>
	 <entry>php3_dbase.dll</entry>
	 <entry>dBase - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_dbm.dll</entry>
	 <entry>GDBM Emulation via Berkely DB2 library</entry>
	</row>
	<row>
	 <entry>php3_filepro.dll</entry>
	 <entry>READ ONLY Zugang zur Filepro Datenbank</entry>
	</row>
	<row>
	 <entry>php3_gd.dll</entry> 
	 <entry>GD Library - Funktionen für gif-Manipulation</entry>
	</row>
	<row>
	 <entry>php3_hyperwave.dll</entry>
	 <entry>HyperWave - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_imap4r2.dll</entry>
	 <entry>IMAP 4 - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_ldap.dll</entry>
	 <entry>LDAP - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_msql1.dll</entry>
	 <entry>mSQL 1 client</entry>
	</row>
	<row>
	 <entry>php3_msql2.dll</entry>
	 <entry>mSQL 2 client</entry>
	</row>
	<row>
	 <entry>php3_mssql.dll</entry>
	 <entry>MSSQL client (benötigt MSSQL DB-Bibliotheken</entry>
	</row>
	<row>
	 <entry>php3_mysql.dll</entry>
	 <entry>MySQL - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_nsmail.dll</entry>
	 <entry>Netscape Mail - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_oci73.dll</entry>
	 <entry>Oracle - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_snmp.dll</entry>
	 <entry>SNMP get and walk Funktionen (nur NT !)</entry>
	</row>
	<row>
	 <entry>php3_zlib.dll</entry>
	 <entry>ZLib - Funktionen</entry>
	</row>
       </tbody>
      </tgroup>
     </table>
     </para>

   </sect2>

  </sect1>

  <sect1 id="install-problems">
   <title>Probleme?</title>

   <sect2>
    <title>Lesen Sie die FAQ</title>
    <simpara>
     Einige Problem tauchen öfters auf als andere. Die am häufigsten
     auftretenden Probleme sind in der PHP-FAQ aufgelistet: <ulink
     url="&url.php.faq;">&url.php.faq;</ulink>
    </simpara>
   </sect2>

   <sect2>
    <title>Bug Reports</title>

    <simpara>
     Wenn Sie glauben, einen Bug gefunden zu haben, melden Sie ihn uns
     bitte. Die PHP-Entwickler kennen ihn wahrscheinlich noch nicht,
     und wenn Sie ihn nicht melden, stehen die Chancen schlecht, das
     er ausgemerzt wird. Sie können einen Bug mittels des
     "bug-tracking system" unter <ulink
     url="&url.php.bugs;">&url.php.bugs;</ulink> melden.
    </simpara>

   </sect2>

   <sect2>
    <title>Andere Probleme</title>

    <simpara>
     Wenn Ihnen trotzdem noch nicht geholfen werden konnte, könnte es
     sein, das jemand auf der Mailingliste Ihnen helfen kann. Bevor
     Sie jedoch ein Problem an die Mailingliste weitergeben, sollten
     Sie zuerst das Archiv der Liste durchsuchen. Das Archiv finden
     Sie unter <ulink url="&url.php;">&url.php;</ulink>.  Um sich auf
     der Mailingliste anzumelden, reicht es, eine leere Email an
     <ulink
     url="mailto:&email.php3.subscribe;">&email.php3.subscribe;</ulink>
     zu schicken.  Die Adresse der Mailingliste ist
     <literal>&email.php3;</literal>.
    </simpara>

    <simpara>
     Wenn Sie Hilfe von der Mailingliste haben möchten, dann achten
     Sie bitte auf folgende Verhaltensma&szlig;nahmen:
    </simpara>
    <simpara>
     Beschreiben Sie Ihr Problem so präzise wie möglich, und fügen Sie
     Details Ihrer Entwicklungsumgebung hinzu (Betriebssystem, Server,
     PHP-Version, CGI oder Modul- Version etc). Fügen Sie genug
     Quellcode hinzu, so dass andere Ihr Problem nachvollziehen können
    </simpara>
    <simpara>
     Verschicken Sie keine html-codierte Emails. Solche Emails können
     nicht von allen Email-Programmen gelesen werden, was zur Folge
     hat, das Ihre Email unter Umständen gleich im Papierkorb landet.
    </simpara>
    <simpara>
     Halten Sie die NetiQuette ein.
    </simpara>

   </sect2>

  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
