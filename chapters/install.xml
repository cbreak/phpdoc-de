 <chapter id="installation">
  <title>Installation</title>

  <sect1 id="install.downloading">
   <title>Download der aktuellsten Version</title>
   <simpara>
    Den Quellcode sowie die Binärdistributionen für die verschiedenen
    Plattformen (inklusive Windows) erhalten Sie unter <literal><ulink
    url="&url.php;">&url.php;</ulink></literal>. Wir empfehlen, den 
    Download der Distributionen von dem Ihnen am nächsten liegenden 
    <ulink url="&url.mirrors;">Mirror</ulink> durchzuführen.
   </simpara>
  </sect1>

  <sect1 id="install.unix">
   <title>Installation auf UNIX Systemen</title>
   <para>
    Dieser Abschnitt wird Sie durch die Konfiguration und Installation von
    PHP auf UNIX Systemen führen. Bevor Sie mit dem Prozess beginnen, lesen
    Sie bitte alle für Ihre Plattform oder Webserver relevanten Sektionen.
   </para>
   <para>
    Erforderliche Kenntnisse und Software:
    <itemizedlist>
     <listitem>
      <simpara>
       Grundlegende UNIX-Kenntnisse (Sie sollten in der Lage sein, mit 
       "make" und einem C-Compiler umzugehen, wenn Sie kompilieren)
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       Einen ANSI C Compiler (wenn Sie kompilieren)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       flex (zum kompilieren)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bison (zum kompilieren)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Einen Web Server
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Alle modulspezifischen Komponenten (wie z.B. gd, pdf libs, etc.)
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   
   <para>
    Es gibt verschiedene Wege, PHP auf der Unix Plattform zu installieren.
    Entweder mit einem Kompilier- und Configure- Prozess, oder über verschiedene
    Methoden mittels vorgefertigter Pakete. Diese Dokumentation ist hauptsächlich 
    auf den Prozess des Kompilierens und Konfigurierens von PHP fokussiert.
   </para>
   
   <para>
    Der Anfang des PHP Installations- und Konfigurationsprozesses wird von
    den Eingabeoptionen für das <filename>configure</filename> Skript gesteuert.
    Diese Seite umreißt die Verwendung der meisten allgemeinen Optionen, aber
    es gibt noch viele andere als Spielraum.  Eine umfassende Übersicht finden
    Sie in der <link linkend="install.configure">Kompletten Liste der 
    Konfigurationsoptionen</link>. Es gibt verschiedene Wege, PHP zu installieren:
    <itemizedlist>
     <listitem>
      <simpara>
       Als ein <link linkend="install.apache">Apache Modul</link>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Als ein <link linkend="install.fhttpd">fhttpd Modul</link>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Zur Verwendung mit <link
       linkend="install.otherhttpd">AOLServer, NSAPI,
       phttpd, Pi3Web, Roxen, thttpd, oder Zeus.</link>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Als ein <link linkend="install.commandline">CGI Programm</link>
      </simpara>
     </listitem>
    </itemizedlist>
   </para>

   
   <sect2 id="install.unix.apache-module">
    <title>Apache Modul - Kurzanleitung</title>
    
    <para>
     PHP kann auf einigen verschiedenen Wegen Kompiliert werden, aber eine 
     der populärsten ist die als Apache Modul. Es folgt ein kurzer Überblick
     über die Installation.
    </para>
    
    <example id="install.unix.apache-module.quick">
     <title>
      Kurzanleitung zur Installation von PHP 4 (Apache Modul Version)
     </title>
     <programlisting>
1.  gunzip apache_1.3.x.tar.gz
2.  tar xvf apache_1.3.x.tar
3.  gunzip php-x.x.x.tar.gz
4.  tar xvf php-x.x.x.tar
5.  cd apache_1.3.x
6.  ./configure --prefix=/www
7.  cd ../php-x.x.x
8.  ./configure --with-mysql --with-apache=../apache_1.3.x --enable-track-vars
9.  make
10. make install
11. cd ../apache_1.3.x
12. ./configure --activate-module=src/modules/php4/libphp4.a
13. make
14. make install
15. cd ../php-x.x.x
16. cp php.ini-dist /usr/local/lib/php.ini
17. Editieren Sie nun Ihre httpd.conf oder srm.conf, und fügen Sie hinzu: 
      AddType application/x-httpd-php .php

18. Starten Sie den Apache Web Server neu. (Sie müssen den Server beenden
    und neu starten, ein einfacher Reload mittels HUP oder USR1 Signal
    reicht nicht aus.)
     </programlisting>
    </example>
   </sect2>

   <sect2 id="install.building">
    <title>Building</title>
    <simpara>
     Wenn PHP konfiguriert ist, können Sie die ausführbare CGI Datei
     oder PHP-Bibliothek erstellen. Das Kommando <command>make</command>
     sollte das für Sie erledigen. Sollte dies scheitern und Sie nicht 
     erkennen können warum, lesen Sie in der <link linkend="install-problems">
     Problem- Sektion</link> weiter.
    </simpara>
   </sect2>
  </sect1>

  <sect1 id="install.linux">
   <title>Unix/Linux Installation</title>
   <para>
    Dieser Teil enthält Anmerkungen und Hinweise zur Installation von PHP
    auf Linux Distributionen 
   </para>
   <sect2 id="install.linux.packages">
    <title>Pakete verwenden</title>
    <simpara>
     Viele Linux Distributionen haben eine Art Paketinstallation, wie z.B.
     RPM. Das kann beim Setup einer Standardkonfiguration helfen, aber wenn 
     Sie andere Features (wie einen Secure Server, oder einen anderen 
     Datenbanktreiber) benötigen könnte es sein, dass ein Build von PHP
     und/oder Ihres Webservers nötig ist. Wenn Sie mit dem Bilden und
     Kompilieren Ihrer Software nicht vertraut sind, sollten Sie sich 
     nach einer von jemand anders bereits erstellten Paketversion von
     PHP mit den von Ihnen benötigten Features umsehen.
    </simpara>
   </sect2>
  </sect1>

  <sect1 id="install.hpux">
   <title>Unix/HP-UX Installationen</title>
   <para>
    Diese Sektion enthält Anmerkungen und Hinweise zur Installation von
    PHP auf HP-UX Systemen.
   </para>
   <example id="install.hpux.example">
    <title>
     Installationsanleitung für HP-UX 10
    </title>
    <programlisting>
Von: paul_mckay@clearwater-it.co.uk
04-Jan-2001 09:49
(Diese Tipps sind für PHP 4.0.4 und Apache v1.3.9)

Sie wollen also PHP und Apache auf einer HP-UX 10.20 installieren? 

1. Sie brauchen gzip, holen Sie sich eine Binärdistribution von
http://hpux.connect.org.uk/ftp/hpux/Gnu/gzip-1.2.4a/gzip-1.2.4a-sd-10.20.depot.Z
dekomprimieren Sie die Datei, und installieren Sie sie mit swinstall

2. Sie brauchen gcc, holen Sie sich eine Binärdistribution von
http://gatekeep.cs.utah.edu/ftp/hpux/Gnu/gcc-2.95.2/gcc-2.95.2-sd-10.20.depot.gz 
gunzip, und installieren Sie sie mit swinstall.

3. Sie brauchen die GNU binutils, holen Sie sich eine Binärdistribution von
http://hpux.connect.org.uk/ftp/hpux/Gnu/binutils-2.9.1/binutils-2.9.1-sd-10.20.depot.gz 
gunzip, und installieren Sie sie mit swinstall.

4. Nun benötigen Sie bison, holen Sie sich eine Binärdistribution von
http://hpux.connect.org.uk/ftp/hpux/Gnu/bison-1.28/bison-1.28-sd-10.20.depot.gz 
installieren Sie sie wie oben

4. Nun benötigen Sie flex, holen Sie sich den Source von einem der 
http://www.gnu.org mirrors. Es ist in dem <filename>non-gnu</filename> 
Verzeichnis der FTP-Site.
Downloaden Sie die Datei, gunzip, dann tar -xvf 'en Sie sie. Gehen Sie in das erstellte 
Verzeichnis flex, und führen ein ./configure aus, dann make, und dann make install.

Sollten dabei Fehler auftreten liegt es vielleicht daran, dass gcc etc. 
nicht im PATH sind. Ist das der Fall, fügen Sie diese bitte dem PATH hinzu.

OK, nun zum schwierigen Teil:

6. Laden Sie die Sources von PHP und Apache herunter.

7. Führen Sie gunzip und tar -xvf an ihnen aus. 

Wir müssen einige Dateien ändern, dass sie richtig kompiliert werden können.

8. Erst muss die Konfigurationsdatei geändert werden, denn es scheint als 
würde sie aus den Augen verlieren, dass sie auf einer hpux Maschine ist. Es 
gibt sicher einen besseren Weg dies zu tun, aber einfacher Weg ist es, 
    lt_target=hpux10.20 
in die Zeile 47286 des configure Skriptes zu schreiben.

9. Als nächstes müssen wir die Apache GuessOS Datei ändern. Unter
apache_1.3.9/src/helpers ändern Sie die Zeile 89 von 
    "echo "hp${HPUXMACH}-hpux${HPUXVER}"; exit 0" 
auf: 
    "echo "hp${HPUXMACH}-hp-hpux${HPUXVER}"; exit 0" 
    
10. Sie können PHP nicht als Shared Object unter HP-UX installieren, weshalb Sie es 
statisch kompilieren müssen; folgen Sie einfach den Anweisungen auf der Apache Seite.

11. Das Kompilieren PHP und Apache sollte OK gehen, aber Apache wird nicht starten. 
Sie müssen einen neuen User für Apache einrichten, z.B. www oder apache. Dann ändern 
Sie die Zeilen 252 und 253 der conf/httpd.conf in Apache so, dass statt
    User nobody 
    Group nogroup 
etwas ähnliches steht wie:
    User www 
    Group sys 

Das hat den Grund, dass Sie Apache unter HP-UX nicht als nobody laufen 
lassen können. Jetzt sollten Apache und PHP laufen.

Ich hoffe das hilft jemandem,
Paul Mckay.
  </programlisting>
 </example>

</sect1>

<sect1 id="install.solaris">
 <title>Unix/Solaris Installation</title>
 <para>
  Diese Sektion enthält Anmerkungen und Hinweise zur Installation von
  PHP auf Solaris Systemen.
 </para>
 <sect2 id="install.solaris.required">
  <title>Benötigte Software</title>
  <para>
   Solaris Installationen mangelt es oft an C Compilern und deren 
   zugehörigen Tools. Sie benötigen folgende Software:
   <itemizedlist>
    <listitem>
     <simpara>
      gcc (empfohlen, andere C Compiler können ebenfalls funktionieren)
     </simpara>
    </listitem> 
    <listitem>
     <simpara>
      make
     </simpara>
    </listitem> 
    <listitem>
     <simpara>
      flex
     </simpara>
    </listitem> 
    <listitem>
     <simpara>
      bison
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      m4
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      autoconf
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      automake
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      perl
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      gzip
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      tar
     </simpara>
    </listitem>
   </itemizedlist>
    Zusätzlich werden Sie für die Installation (und vielleicht auch zum
    Kompilieren) eine andere, für Ihre Konfiguration spezifische Software
    benötigen (wie z.B. Oracle oder MySQL). 
  </para>     
 </sect2>
 <sect2 id="install.solaris.packages">
  <title>Pakete verwenden</title>
  <simpara>
   Sie können den Installationsprozess auf Solaris vereinfachen, indem Sie
   zur Installation der meisten benötigten Komponenten pkgadd verwenden.
  </simpara>
 </sect2>
</sect1>

<sect1 id="install.openbsd">
 <title>Unix/OpenBSD Installation</title>
 <para>
  Diese Sektion enthält Anmerkungen und Hinweise zur Installation von
  PHP auf <ulink url="&url.openbsd;">OpenBSD</ulink>.
 </para>
 <sect2 id="install.openbsd.ports">
  <title>Ports verwenden</title>
   <simpara>
    Dies ist die empfohlene Methode PHP auf OpenBSD zu installieren, da sie die
    aktuellen Patches und Security Fixes enthält. Um diese Methode zu verwenden,
    benötigen Sie einen <ulink url="&url.openbsd.ports;">recent ports tree</ulink>. 
    Dann bestimmen Sie einfach die zu installierenden Optionen, und führen das
    Kommando <command>make install</command> aus. Das folgende Beispiel zeigt 
    wie es gemacht wird.
   </simpara>
   <example id="install.openbsd.ports.example">
    <title>OpenBSD Ports Installationsbeispiel</title>
    <programlisting>
$ cd /usr/ports/www/php4
$ make show VARNAME=FLAVORS
 (wählen Sie gewünschten Installationsoptionen aus der liste)
$ FLAVOR="imap gettext ldap mysql gd" make install
$ php4-enable
    </programlisting>
   </example>
 </sect2>
 <sect2 id="install.openbsd.packages">
  <title>Pakete verwenden</title>
  <simpara>
   Für Ihre Version von <ulink url="&url.openbsd;">OpenBSD</ulink> sind 
   vorkompilierte Pakete verfügbar. Diese integrieren sich automatisch 
   in die mit dem OS installierten Apache Version. Da es jedoch eine 
   große Anzahl Optionen (genannt <emphasis>flavors</emphasis>) für 
   dieses Port gibt, ziehen Sie es vielleicht vor, den Source unter 
   Verwendung des Ports Tree zu kompilieren. Weitere Informationen über 
   die verfügbaren Pakete finden Sie in der Manual Page 
   <ulink url="&url.openbsd.packages;">packages(7)</ulink>
  </simpara>
 </sect2>
</sect1>
  
<sect1 id="install.macosx">
 <title>Unix/Mac OS X Installationen</title>
 <para>
  Diese Sektion enthält Anmerkungen und Hinweise zur Installation von
  PHP auf Mac OS X Server.
 </para>
 <sect2 id="install.macosx.packages">
  <title>Pakete verwenden</title>
  <simpara>
   Es gibt ein paar vorgefertigte und kompilierte Pakete von PHP für 
   Mac OS X. Das ist hilfreich, um eine Standardkonfiguration aufzusetzen,
   doch sollten Sie eine davon abweichende Konfiguration benötigen (wie z.B.
   einen Secure Server oder einen anderen Datenbanktreiber), müssen Sie evtl. 
   PHP und/oder Ihren Webserver selbst bauen. Wenn Sie mit dem Bilden und
   Kompilieren Ihrer Software nicht vertraut sind, sollten Sie sich nach 
   einer von jemand anders bereits erstellten Paketversion von PHP mit den 
   von Ihnen benötigten Features umsehen.
   <ulink url="&url.lightyear;">Lightyear Design</ulink> und 
   <ulink url="&url.tenon;">Tenon Intersystems</ulink> bieten 
   vorgefertigte Versionen von PHP für OS X. 
  </simpara>
 </sect2>
 <sect2 id="install.macosx.compile">
  <title>Kompilieren für OS X Server</title>
  <simpara>
   Es gibt zwei leicht unterschiedliche Versionen von Mac OS X, nämlich 
   einen Client und einen Server. Die folgende Beschreibung ist für OS X Server.
  </simpara>
   <example id="install.macosx.compile.example">
   <title>Mac OS X Server Installation</title>
   <programlisting>
1. Beschaffen Sie sich die aktuellen Distributionen von Apache und PHP
2. Untar'en Sie sie, und starten configure an Apache wie folgt
    ./configure --exec-prefix=/usr \ 
    --localstatedir=/var \ 
    --mandir=/usr/share/man \ 
    --libexecdir=/System/Library/Apache/Modules \ 
    --iconsdir=/System/Library/Apache/Icons \ 
    --includedir=/System/Library/Frameworks/Apache.framework/Versions/1.3/Headers \ 
    --enable-shared=max \ 
    --enable-module=most \ 
    --target=apache 

4. Sie können auch folgende Zeile hinzufügen:
    setenv OPTIM=-O2 
    Wenn Sie wollen, dass der Compiler Optimierungen durchführt.
    
5. Wechseln Sie in das Verzeichnis mit dem PHP Source und führen configure aus
    ./configure --prefix=/usr \ 
    --sysconfdir=/etc \ 
    --localstatedir=/var \ 
    --mandir=/usr/share/man \ 
    --with-xml \ 
    --with-apache=/src/apache_1.3.12 

    Wenn Sie andere Ergänzungen haben (MySQL, GD, etc.), fügen Sie diese bitte 
    hier hinzu. Geben Sie bei der Option --with-apache den Pfad zu dem 
    Verzeichnis mit Ihrem Apache Source an, z.B. "/src/apache_1.3.12".
6. make
7. make install    
    Dies fügt Ihrem Apache Source Verzeichnis das Verzeichnis 
    src/modules/php4 hinzu.
    
8. Nun konfigurieren Sie Apache neu, incl. PHP 4 Modul.
    ./configure --exec-prefix=/usr \ 
    --localstatedir=/var \ 
    --mandir=/usr/share/man \ 
    --libexecdir=/System/Library/Apache/Modules \ 
    --iconsdir=/System/Library/Apache/Icons \ 
    --includedir=/System/Library/Frameworks/Apache.framework/Versions/1.3/Headers \ 
    --enable-shared=max \ 
    --enable-module=most \ 
    --target=apache \ 
    --activate-module=src/modules/php4/libphp4.a 

    Sollten Sie eine Meldung erhalten, dass libmodphp4.a nicht mehr gültig ist,
    wechseln Sie in Ihrem Apache Source Verzeichnis zu src/modules/php4, und
    führen folgenden Befehl aus:

    ranlib libmodphp4.a 

    Dann gehen Sie zurück in das Hauptverzeichnis des Apache Source, und
    führen obigen configure Befehl erneut aus. Das aktualisiert die Linktabelle.

9. make

10. make install

11. Kopieren Sie die Datei php.ini-dist von Ihrem Verzeichnis mit dem PHP 4 
    Source in Ihr "bin" Verzeichnis, und benennen Sie sie um:
    cp php.ini-dist /usr/local/bin/php.ini 

    oder (wenn Sie kein lokales Verzeichnis haben) 

    cp php.ini-dist /usr/bin/php.ini 
   </programlisting>
  </example>
  <simpara>
   Andere Beispiele für
   <ulink url="&url.stepwise.macosx-client;">Mac OS X Client</ulink>
   und
   <ulink url="&url.stepwise.macosx-client;">Mac OS X Server</ulink>
   finden Sie bei <ulink url="&url.stepwise;">Stepwise</ulink>.
  </simpara>
 </sect2>
 <sect2 id="install.macosx.client">
  <title>Kompilieren für MacOS X Client</title>
  <simpara>
   Diese Tipps wurden freundlicherweise von 
   <ulink url="&url.macosx;">Marc Liyanage</ulink> zur Verfügung gestellt.
  </simpara>
  <simpara>
   Das PHP Modul für den Apache Webserver ist in Mac OS X inkludiert.
   Diese Version unterstützt die MySQL und PostgreSQL Datenbanken.
  </simpara>
  <simpara>
   Anmerkung: Vorsicht wenn Sie dies tun, Sie könnten Ihren Apache Webserver vermurksen!
  </simpara>
  <para>
   Installationsschritte:
   <itemizedlist>
    <listitem>
     <simpara>
      1.    Öffnen Sie ein Terminalfenster
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      2.    Geben Sie "wget http://www.diax.ch/users/liyanage/software/macosx/libphp4.so.gz"
      ein, und warten Sie bis der Download beendet ist
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      3.    Geben Sie "gunzip libphp4.so.gz" ein
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      4.    Geben Sie  "sudo apxs -i -a -n php4 libphp4.so" ein
     </simpara>
    </listitem>
   </itemizedlist>
   Nun geben Sie "<literal>sudo open -a TextEdit /etc/httpd/httpd.conf</literal>"
   ein. TextEdit öffnet daraufhin die Konfigurationsdatei des Webservers. Suchen
   Sie diese beiden Zeilen in Richtung Dateiende: (Benutzen Sie den Befehl Find)
   <programlisting>
   *    #AddType application/x-httpd-php .php 
   *    #AddType application/x-httpd-php-source .phps
   </programlisting>
   Entfernen Sie die beiden Rautezeichen (<literal>#</literal>), speichern die Datei, 
   und beenden TextEdit.
  </para>
  <para>
   Starten Sie mit "<literal>sudo apachectl graceful</literal>" den Webserver neu.
  </para>
  <para>
   PHP sollte nun laufen. Sie können dies testen, indem Sie eine Datei in Ihrem
   Verzeichnis "Sites" erstellen, z.B. "test.php", folgende Zeile hineinschreiben:
   "<literal>&lt;?php phpinfo() ?&gt;</literal>".
  </para>
  <para>
   Nun öffnen Sie <literal>127.0.0.1/~your_username/test.php</literal> in 
   Ihrem Webbrowser. Sie sollten nun eine Tabelle mit Informationen über 
   das PHP Modul sehen.
  </para>
 </sect2>
</sect1>

<sect1 id="install.configure">
 <title>Komplette Liste der Konfigurationsoptionen</title>
 <note>
  <para>
   Diese Optionen werden nur zur Kompilierzeit genutzt. Wenn Sie die 
   Laufzeitkonfiguration von PHP ändern möchten, lesen Sie bitte unter
   <link linkend="configuration">Configuration</link> nach.
  </para>
 </note>
 <para>
  Nachstehend finden Sie die komplette Liste von Optionen, welche von den 
  PHP 3 und PHP 4 <filename>configure</filename> Skripten unterstützt, und 
  zum Kompilieren in einer Unix-ähnlichen Umgebung verwendet werden. Die 
  Anmerkungen zeigen, ob eine Option in PHP 3, PHP 4, oder in beiden 
  Versionen verfügbar ist. Es gibt auch einige Optionen, deren Namen in 
  PHP 3 und PHP 4 differieren, aber den gleichen Effekt haben. Diese 
  Einträge haben Querverweise zueinander, sodass Sie bei Problemen mit 
  Optionen von PHP 3 schnell erkennen können, ob sich deren Namen geändert 
  haben.
 </para>

 <itemizedlist>
  <listitem>
   <para>
    <link linkend="install.configure.databases">Datenbank</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.ecommerce">Ecommerce</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.graphics">Grafik</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.misc">Verschiedenes</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.networking">Networking</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.php">PHP Eigenschaften</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.servers">Server</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.text">Text und Sprache</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.xml">XML</link>
   </para>
  </listitem>
 </itemizedlist>

 <sect2 id="install.configure.databases">
  <title>Datenbank</title>
   <variablelist>

    <varlistentry id="install.configure.with-adabas">
     <term>
      <parameter>--with-adabas[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert Adabas D Unterstützung. DIR ist das Adabas 
       Installationsverzeichnis. Default ist /usr/local.
      </para>
      <para>
       <ulink url="&url.adabas;">Adabas Homepage</ulink>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-dba">
     <term>
      <parameter>--enable-dba=shared</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: DBA als shared module erstellen
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-dbx">
     <term>
      <parameter>--enable-dbx</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Inkludiert DBX Unterstützung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-dbase">
     <term>
      <parameter>--enable-dbase</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar; verwenden Sie stattdessen 
       <link linkend="install.configure.with-dbase">--with-dbase</link>
      </para>
      <para>
       PHP 4: Inkludieren der bundled dbase Bibliothek. Es sind keine 
       externen Bibliotheken erforderlich.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-dbase">
     <term>
      <parameter>--with-dbase</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Inkludieren der bundled dbase Bibliothek. Es sind keine 
       externen Bibliotheken erforderlich.
      </para>
      <para>
       PHP 4: Ist nicht verfügbar; verwenden Sie stattdessen <link
       linkend="install.configure.enable-dbase">--enable-dbase</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-db2">
     <term>
      <parameter>--with-db2[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert Berkeley DB2 Unterstützung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-db3">
     <term>
      <parameter>--with-db3[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Inkludiert Berkeley DB3 Unterstützung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-dbm">
     <term>
      <parameter>--with-dbm[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert DBM Unterstützung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-dbmaker">
     <term>
      <parameter>--with-dbmaker[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Inkludiert DBMaker Unterstützung. DIR ist das DBMaker base 
       install directory, Default ist das Verzeichnis, in dem die letzte 
       Version von DBMaker installiert ist (wie z.B. /home/dbmaker/3.6).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-empress">
     <term>
      <parameter>--with-empress[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert Empress Unterstützung. DIR ist das Empress
       base install directory, Default ist $EMPRESSPATH
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-filepro">
     <term>
      <parameter>--enable-filepro</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist nicht verfügbar; verwenden Sie stattdessen <link
       linkend="install.configure.with-filepro">--with-filepro</link>.
      </para>
      <para>
       PHP 4: Aktiviert die bundled read-only filePro Unterstützung. 
       Es sind keine externen Bibliotheken erforderlich.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-filepro">
     <term>
      <parameter>--with-filepro</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Aktiviert die bundled read-only filePro Unterstützung. 
       Es sind keine externen Bibliotheken erforderlich.
      </para>
      <para>
       PHP 4: Ist nicht verfügbar; verwenden Sie stattdessen <link
       linkend="install.configure.enable-filepro">--enable-filepro</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-fbsql">
     <term>
      <parameter>--with-fbsql[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist nicht verfügbar.
      </para>
      <para>
       PHP 4: Inkludiert FrontBase SQL Unterstützung. DIR ist das FrontBase base
       install directory, Default ist das übliche Frontbase Installationsverzeichnis.
       Das übliche Installationsverzeichnis ist von Ihrem OS abhängig:
       Solaris: <literal>/opt/FrontBase</literal>, 
       WinNT: <literal>\usr\FrontBase</literal>,
       Linux: <literal>/usr/frontbase</literal>,
       Mac OSX: <literal>/Library/FrontBase</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-gdbm">
     <term>
      <parameter>--with-gdbm[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert GDBM Unterstützung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-hyperwave">
     <term>
      <parameter>--with-hyperwave</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert Hyperwave Unterstützung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-ibm-db2">
     <term>
      <parameter>--with-ibm-db2[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert IBM DB2 Unterstützung. DIR ist das DB2 base
       install directory, default ist
       <filename>/home/db2inst1/sqllib</filename>.
      </para>
      <para>
       <ulink url="&url.ibmdb2;">IBM DB2 home page</ulink>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-informix">
     <term>
      <parameter>--with-informix[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert Informix Unterstützung. DIR ist das Informix base install
       directory, Hat keinen Defaultwert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-ingres">
     <term>
      <parameter>--with-ingres[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Inkludiert Ingres II Unterstützung. DIR ist das Ingres base directory
       (default ist /II/ingres)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-interbase">
     <term>
      <parameter>--with-interbase[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert InterBase Unterstützung. DIR ist das InterBase base
       install directory, default ist <filename>/usr/interbase</filename>.
      </para>
      <simpara>
       <link linkend="ref.ibase">Interbase Funktionen</link>
      </simpara>
      <simpara>
       <ulink url="&url.ibase;">Interbase Homepage</ulink>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-ldap">
     <term>
      <parameter>--with-ldap[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Inkludiert LDAP Unterstützung. DIR ist das LDAP base install
       directory.  Default ist <filename>/usr</filename> und
      <filename>/usr/local</filename>
     </para>
     <para>
      PHP 4: Inkludiert LDAP Unterstützung. DIR ist das LDAP base install directory.
     </para>
      <simpara>
       Dies bietet <acronym>LDAP</acronym> (Lightweight Directory Access Protocol 
       Unterstützung). Der Parameter ist das LDAP base install directory, 
       default ist <filename class="directory">/usr/local/ldap</filename>.
      </simpara>
      <simpara>
       Mehr Informationen über LDAP finden Sie in <ulink
       url="&url.rfc;rfc1777.html">RFC1777</ulink> und
       <ulink url="&url.rfc;rfc1778.html">RFC1778</ulink>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-msql">
     <term>
      <parameter>--with-msql[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert mSQL Unterstützung. Der Parameter zu dieser 
       Option ist das mSQL install directory, default ist <filename
       class="directory">/usr/local/Hughes</filename>. Das ist das Default
       Verzeichnis der mSQL 2.0 Distribution.
       <command>configure</command> erkennt automatisch welche Version von
       mSQL Sie benutzen. PHP unterstützt sowohl 1.0 als auch 2.0, wenn Sie 
       jedoch PHP mit mSQL 1.0 kompilieren, können Sie nur mSQL 1.0 Datenbanken 
       benutzen, und umgekehrt.
      </para>
      <simpara>
       Siehe auch <link linkend="ini.sect.msql">mSQL
       Konfiguration</link> Direktiven in der <link
       linkend="configuration.file">Konfigurationsdatei</link>.
      </simpara>
      <simpara>
       <ulink url="&url.msql;">mSQL Homepage</ulink>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-mysql">
     <term>
      <parameter>--with-mysql[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Inkludiert MySQL Unterstützung. DIR ist das MySQL base install 
       directory, als default werden einige für MySQL Dateien übliche Stellen 
       durchsucht.
      </para>
      <para>
       PHP 4: Inkludiert MySQL Unterstützung. DIR ist das MySQL base directory.
       Wenn nicht spezifiziert, wird die bundled MySQL Bibliothek verwendet. 
       Diese Option ist standardmäßig aktiviert.
      </para>
      <para>
       Siehe auch <link linkend="ini.sect.mysql">MySQL
       Konfiguration</link> Direktiven in der <link
       linkend="configuration.file">Konfigurationsdatei</link>.
      </para>
      <para>
       <ulink url="&url.mysql;">MySQL Homepage</ulink>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-ndbm">
     <term>
      <parameter>--with-ndbm[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert NDBM Unterstützung.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-ovrimos">
     <term>
      <parameter>--with-ovrimos</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Inkludiert Ovrimos Unterstützung.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-oci8">
     <term>
      <parameter>--with-oci8[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Inkludiert Oracle-oci8 Unterstützung. Default DIR ist ORACLE_HOME.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-oracle">
     <term>
      <parameter>--with-oracle[=DIR]</parameter>
     </term>
     <listitem>
     <para>
      PHP 3: Inkludiert Oracle Datenbankunterstützung. DIR ist Oracle's Home directory,
      default ist $ORACLE_HOME.
     </para>
     <para>
      PHP 4: Inkludiert Oracle-oci7 Unterstützung. Default DIR ist ORACLE_HOME.
     </para>
     <simpara>
      Inkludiert Oracle Unterstützung, wurde getestet und sollte zumindest mit
      den Oracle Versionen 7.0 bis 7.3 funktionieren. Der Parameter ist das 
      <envar>ORACLE_HOME</envar> Verzeichnis. Sie müssen diesen Parameter nicht 
      angeben, wenn Ihre Oracle Umgebung aufgesetzt ist.
     </simpara>
     <simpara>
      <ulink url="&url.oracle;">Oracle home page</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-pgsql">
    <term>
     <parameter>--with-pgsql[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Inkludiert PostgresSQL Unterstützung. DIR ist das PostgresSQL 
      base install directory, default ist 
      <filename>/usr/local/pgsql</filename>.
     </para>
     <para>
      PHP 4: Inkludiert PostgreSQL Unterstützung. DIR ist das PostgreSQL 
      base install directory, default ist
      <filename>/usr/local/pgsql</filename>. Setzen Sie DIR auf shared um
      als ein dl zu builden, oder shared,DIR um als ein dl zu builden, und 
      DIR zu spezifizieren.
     </para>
     <simpara>
      Siehe auch <link linkend="ini.sect.pgsql">Postgres
      Konfiguration</link> Direktiven in der <link
      linkend="configuration.file">Konfigurationsdatei</link>.
     </simpara>
     <simpara>
      <ulink url="&url.pgsql;">PostgreSQL home page</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-solid">
    <term>
     <parameter>--with-solid[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Inkludiert Solid Unterstützung. DIR ist das Solid base 
      install directory, default ist /usr/local/solid
     </para>
     <simpara>
      <ulink url="&url.solid;">Solid Homepage</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-sybase-ct">
    <term>
     <parameter>--with-sybase-ct[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Inkludiert Sybase-CT Unterstützung. DIR ist das Sybase 
      home directory, default ist /home/sybase.
     </para>
     <simpara>
      Siehe auch <link linkend="ini.sect.sybct">Sybase-CT
      Konfigurations</link> Direktiven in der <link
      linkend="configuration.file">Konfigurationsdatei</link>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-sybase">
    <term>
     <parameter>--with-sybase[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Inkludiert Sybase-DB Unterstützung. DIR ist das Sybase 
      home directory, default ist <filename>/home/sybase</filename>.
     </para>
     <simpara>
      Siehe auch <link linkend="ini.sect.sybase">Sybase
       Konfigurations</link> Direktiven in der <link
       linkend="configuration.file">Konfigurationsdatei</link>.
     </simpara>
     <simpara>
      <ulink url="&url.sybase;">Sybase Homepage</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-openlink">
    <term>
     <parameter>--with-openlink[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Inkludiert OpenLink ODBC Unterstützung. DIR ist das 
      OpenLink base install directory, default ist /usr/local/openlink.
      Seit PHP 4.0.6 ist diese Option nicht mehr gültig.
      Verwenden Sie die Option <parameter>--with-iodbc</parameter>, wenn
      Sie das ODBC System von OpenLink Software benutzen wollen.
     </para>
     <simpara>
      <ulink url="&url.openlink;">OpenLink Software's Homepage</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-iodbc">
    <term>
     <parameter>--with-iodbc[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Inkludiert iODBC Unterstützung. DIR ist das iODBC base 
      install directory, default ist <filename>/usr/local</filename>.
     </para>
     <para>
      Dieses Feature wurde erst für iODBC Driver Manager entwickelt, einem
      frei verfügbaren ODBC Treibermanager, welcher unter vielen 
      UNIX-Derivaten läuft.
     </para>
     <simpara>
      <ulink url="&url.freeodbc;">FreeODBC Homepage</ulink> 
      or <ulink url="&url.iodbc;">iODBC Homepage</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-custom-odbc">
    <term>
     <parameter>--with-custom-odbc[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Inkludiert Unterstützung für eine spezielle ODBC 
      Bibliothek. Der Parameter ist das Basisverzeichnis, default ist
      <filename class="directory">/usr/local</filename>.
     </para>
     <simpara>
      Diese Option setzt voraus, dass Sie CUSTOM_ODBC_LIBS definiert haben, 
      wenn Sie das configure Skript starten. Sie brauchen auch einen gültigen 
      odbc.h header in Ihrem Include Pfad. Wenn Sie keinen haben, erstellen 
      Sie ihn und inkludieren Sie Ihren spezifischen Header von dort.
      Ihr Header könnte auch ein paar zusätzliche Definitionen benötigen, 
      speziell wenn es sich um eine Multiplattform handelt. Definieren Sie 
      diese in CFLAGS.
     </simpara>
     <simpara>
      Zum Beispiel können Sie Sybase SQL Anywhere auf QNX wie folgt 
      verwenden:
      <literal>
       CFLAGS=-DODBC_QNX LDFLAGS=-lunix CUSTOM_ODBC_LIBS="-ldblib
       -lodbc" ./configure --with-custom-odbc=/usr/lib/sqlany50
      </literal>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.disable-unified-odbc">
    <term>
     <parameter>--disable-unified-odbc</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Unified ODBC Unterstützung verhindern. Ist nur angebracht, 
      wenn iODBC, Adabas, Solid, Velocis oder eine spezielle ODBC 
      Schnittstelle aktiviert ist.
     </para>
     <para>
      PHP 4: Ist unter PHP 4 nicht verfügbar.
     </para>
     <simpara>
      Das Unified ODBC Modul ist eine einheitliche Schnittstelle zu
      allen Datenbanken mit ODBC-basierten Schnittellen, wie z.B. Solid, 
      IBM DB2 und Adabas D. Es arbeitet auch mit normalen ODBC Bibliotheken.
      Es wurde getestet mit iODBC, Solid, Adabas D, IBM DB2 und Sybase SQL 
      Anywhere getestet. Es benötigt eine (und nur eine) dieser Erweiterungen
      oder die Velocis Erweiterung aktiviert, oder eine spezielle ODBC 
      Bibliothek spezifiziert. Diese Option nur angebracht, wenn eine der
      folgenden Optionen verwendet wird: 
      <link
      linkend="install.configure.with-iodbc">--with-iodbc</link>,
      <link
      linkend="install.configure.with-solid">--with-solid</link>,
      <link
      linkend="install.configure.with-ibm-db2">--with-ibm-db2</link>,
      <link
      linkend="install.configure.with-adabas">--with-adabas</link>,
      <link
      linkend="install.configure.with-velocis">--with-velocis</link>,
      or <link
      linkend="install.configure.with-custom-odbc">--with-custom-odbc</link>.
     </simpara>
     <simpara>
      Siehe auch <link linkend="ini.sect.uodbc">Unified ODBC
      Konfiguration</link> Direktiven in der <link
      linkend="configuration.file">Konfigurationsdatei</link>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-unixODBC">
    <term>
     <parameter>--with-unixODBC[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Ist in PHP 3 nicht verfügbar
     </para>
     <para>
      PHP 4: Inkludiert unixODBC Unterstützung. DIR ist das unixODBC base 
      install directory, default ist /usr/local.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-velocis">
    <term>
     <parameter>--with-velocis[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Inkludiert Velocis Unterstützung. DIR ist das Velocis 
      base install directory, default ist /usr/local/velocis.
     </para>
     <simpara>
      <ulink url="&url.velocis;">Velocis Homepage</ulink>
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>
   
 <sect2 id="install.configure.ecommerce">
  <title>Ecommerce</title>
   <variablelist>
    <varlistentry id="install.configure.with-ccvs">
     <term>
      <parameter>--with-ccvs[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Kompiliert CCVS Unterstützung in PHP 4. Bitte geben Sie Ihr CCVS base
       install directory als DIR an.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-mck">
     <term>
      <parameter>--with-mck[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Inkludiert Cybercash MCK Unterstützung. DIR ist das cybercash mck
       build directory, default ist
       <filename>/usr/src/mck-3.2.0.3-linux</filename>. Hilfe finden Sie
       in <filename>extra/cyberlib</filename>.
      </para>
      <para>
       PHP 4: Ist nicht verfügbar; verwenden Sie stattdessen <link
       linkend="install.configure.with-cybercash">--with-cybercash</link>
       .
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-cybercash">
     <term>
      <parameter>--with-cybercash[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist nicht verfügbar; verwenden Sie stattdessen <link
       linkend="install.configure.with-mck">--with-mck</link>
       .
      </para>
      <para>
       PHP 4: Inkludiert CyberCash Unterstützung. DIR ist das CyberCash MCK 
       install directory.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-pfpro">
      <term>
      <parameter>--with-pfpro[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Inkludiert Verisign Payflow Pro Unterstützung
      </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>
  
 <sect2 id="install.configure.graphics">
  <title>Graphics</title>
  <variablelist>
   <varlistentry id="install.configure.enable-freetype-4bit-antialias-hack">
    <term>
     <parameter>--enable-freetype-4bit-antialias-hack</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Ist in PHP 3 nicht verfügbar
     </para>
     <para>
      PHP 4: Inkludiert Unterstützung für FreeType2 (experimentell).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-gd">
    <term>
     <parameter>--with-gd[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Inkludiert GD Unterstützung (DIR ist das GD install dir).
     </para>
     <para>
      PHP 4: Inkludiert GD Unterstützung (DIR ist das GD install dir). Setzen Sie
      DIR auf shared um als ein dl zu builden, oder shared,DIR um als ein dl zu 
      builden und DIR trotzdem zu spezifizieren.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.without-gd">
    <term>
     <parameter>--without-gd</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Deaktiviert GD Unterstützung.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="install.configure.with-imagick">
    <term>
     <parameter>--with-imagick[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Inkludiert ImageMagick Unterstützung. DIR ist das 
      Installationsverzeichnis, und wenn Sie es nicht angeben, 
      versucht es PHP selbst zu finden. [experimentell]
     </para>
     <para>
      PHP 4: Ist in PHP 4 nicht verfügbar
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-jpeg-dir">
    <term>
     <parameter>--with-jpeg-dir[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: jpeg dir für pdflib 2.0
     </para>
     <para>
      PHP 4: jpeg dir für pdflib 3.x and 4.x
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-png-dir">
    <term>
     <parameter>--with-png-dir[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: OIst in PHP 3 nicht verfügbar
     </para>
     <para>
      PHP 4: png dir für pdflib 3.x und 4.x
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.enable-t1lib">
    <term>
     <parameter>--enable-t1lib</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Inkludiert t1lib Unterstützung.
     </para>
     <para>
      PHP 4: Ist nicht verfügbar; verwenden Sie stattdessen <link
      linkend="install.configure.with-t1lib">--with-t1lib</link>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-t1lib">
    <term>
     <parameter>--with-t1lib[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Ist nicht verfügbar; verwenden Sie stattdessen <link
      linkend="install.configure.enable-t1lib">--enable-t1lib</link>.
     </para>
     <para>
      PHP 4: Inkludiert T1lib Unterstützung.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-tiff-dir">
    <term>
     <parameter>--with-tiff-dir[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: tiff dir für pdflib 2.0
     </para>
     <para>
      PHP 4: tiff dir für pdflib 3.x und 4.x
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-ttf">
    <term>
     <parameter>--with-ttf[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Inkludiert FreeType Unterstützung
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-xpm-dir">
    <term>
     <parameter>--with-xpm-dir[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Ist in PHP 3 nicht verfügbar
     </para>
     <para>
      PHP 4: xpm dir für gd-1.8+
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2 id="install.configure.misc">
  <title>Verschiedenes</title>
   <para>
    Diese Optionen werden mit der Zeit - wo angebracht - klassifiziert.
   </para>

   <variablelist>

    <varlistentry id="install.configure.gmp">
     <term>
      <parameter>--with-gmp</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4 : Inkludiert GMP Unterstützung.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry id="install.configure.disable-bcmath">
     <term>
      <parameter>--disable-bcmath</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Kompiliert ohne BC arbitrary precision math
       Funktionen. Diese Funktionen erlauben Ihnen mit Zahlen außerhalb
       des bei regulären Integern und Floats erlaubten Bereiches zu 
       arbeiten. Siehe auch <link linkend="ref.bc">BCMath Arbitrary 
       Precision Mathematics Functions</link> für weitere Informationen.
      </para>
      <para>
       PHP 4: Ist nicht verfügbar; bcmath ist nicht standardmäßig einkompiliert.
       Verwenden Sie <link
        linkend="install.configure.enable-bcmath">--enable-bcmath</link>,
       um es zu integrieren.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry id="install.configure.disable-display-source">
     <term>
      <parameter>--disable-display-source</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Kompiliert ohne Unterstützung für Source-Anzeige
      </para>
      <para>
       PHP 4: Ist in PHP 4 nicht verfügbar
      </para>
     </listitem>
    </varlistentry>
     <varlistentry id="install.configure.disable-libtool-lock">
     <term>
      <parameter>--disable-libtool-lock</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Vermeiden Sie locking (könnte parallele Builds zerstören)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.disable-pear">
     <term>
      <parameter>--disable-pear</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Installiert kein PEAR
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.disable-pic">
     <term>
      <parameter>--disable-pic</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Verhindert PIC für shared objects
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.disable-posix">
     <term>
      <parameter>--disable-posix</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist nicht verfügbar; verwenden Sie stattdessen <link
       linkend="install.configure.without-posix">--without-posix</link>.
      </para>
      <para>
       PHP 4: Verhindert POSIX-ähnliche Funktionen
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.disable-rpath">
     <term>
      <parameter>--disable-rpath</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Verhindert die Übergabe weiterer runtime library search paths
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.disable-session">
     <term>
      <parameter>--disable-session</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Verhindert Session Unterstützung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-bcmath">
     <term>
      <parameter>--enable-bcmath</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar; bcmath ist standardmäßig einkompiliert. 
       Verwenden Sie <link
       linkend="install.configure.disable-bcmath">--disable-bcmath</link>,
       um dies zu verhindern.
      </para>
      <para>
       PHP 4: Kompiliert mit bc style precision math Funktionen. Siehe
       README-BCMATH für Instruktionen, wie dieses installiert wird.
       Diese Funktionen erlauben Ihnen, mit Zahlen außerhalb des bei 
       regulären Integern und Floats erlaubten Bereiches zu arbeiten.
       Weitere Informationen finden Sie in <link linkend="ref.bc">BCMath 
       Arbitrary Precision Mathematics Functions</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-c9x-inline">
     <term>
      <parameter>--enable-c9x-inline</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Aktiviert C9x-inline semantics
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-calendar">
     <term>
      <parameter>--enable-calendar</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Inkludiert Unterstützung für Kalenderumrechnung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-debug">
     <term>
      <parameter>--enable-debug</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Kompiliere mit debugging symbols.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-debugger">
     <term>
      <parameter>--enable-debugger</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Kompiliere mit remote debugging functions
      </para>
      <para>
       PHP 4: Ist in PHP 4 nicht verfügbar
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-discard-path">
     <term>
      <parameter>--enable-discard-path</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Ist diese Option aktiviert, kann das CGI Binary sicher 
       außerhalb des Web Verzeichnisbaumes platziert werden, und die Leute 
       können die .htaccess Security nicht umgehen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-dmalloc">
     <term>
      <parameter>--enable-dmalloc</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Aktiviert dmalloc
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-exif">
     <term>
      <parameter>--enable-exif</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Aktiviert exif Unterstützung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-experimental-zts">
     <term>
      <parameter>--enable-experimental-zts</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Diese Option wird wahrscheinlich Ihren Build zerstören
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-fast-install">
     <term>
      <parameter>--enable-fast-install[=PKGS]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Optimiert für schnelle Installation [default=yes]
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-force-cgi-redirect">
     <term>
      <parameter>--enable-force-cgi-redirect</parameter>
     </term>
     <listitem>
      <para> 
       PHP 3, PHP 4: Aktiviert die Sicherheitsprüfung für interne Server 
       Redirects. Sie sollten dies verwenden, wenn Sie die CGI Version
       mit Apache einsetzen.
      </para>
     </listitem>
    </varlistentry>
     <varlistentry id="install.configure.enable-inline-optimization">
     <term>
      <parameter>--enable-inline-optimization</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Wenn Sie viel Speicher haben und gcc verwenden, können Sie dies 
       probieren.
      </para>
     </listitem>
    </varlistentry>
     <varlistentry id="install.configure.enable-libgcc">
     <term>
      <parameter>--enable-libgcc</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Linkt explizit gegen libgcc
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-maintainer-mode">
     <term>
      <parameter>--enable-maintainer-mode</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Aktiviert make Regeln und Abhängigkeiten, welche 
       für den unbeschwerten Installierer nicht hilfreich (und manchmal 
       verwirrend) sind.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-mbstr-enc-trans">
     <term>
      <parameter>--enable-mbstr-enc-trans</parameter>
     </term>
     <listitem>
      <para>
       PHP 4: Aktiviert http input character automatic detection and
       translation für multi-byte character encodings.
      </para>
      <warning>
        <para>
         Diese Option ist nur für PHP 4.0.6 oder höher verfügbar.
        </para>
       </warning>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-mbstring">
     <term>
      <parameter>--enable-mbstring</parameter>
     </term>
     <listitem>
      <para>
       PHP 4: Aktiviert mit multi-byte character encoding verwandte Funktionen.
      </para>
      <warning>
        <para>
         Diese Option ist nur für PHP 4.0.6 oder höher verfügbar.
        </para>
       </warning>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-memory-limit">
     <term>
      <parameter>--enable-memory-limit</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Kompiliert mit Memory Limit Unterstützung. [default=no] 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-safe-mode">
     <term>
      <parameter>--enable-safe-mode</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Aktiviert Safe Mode standardmäßig.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-satellite">
     <term>
      <parameter>--enable-satellite</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Aktiviert CORBA Unterstützung über Satellite (Benötigt ORBit)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-shared">
     <term>
      <parameter>--enable-shared[=PKGS]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Build mit shared libraries [default=yes]
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-sigchild">
     <term>
      <parameter>--enable-sigchild</parameter>
     </term>
     <listitem>
      <para>
        PHP 3, PHP 4: Aktiviert PHP's eigenen SIGCHLD Handler.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-static">
     <term>
      <parameter>--enable-static[=PKGS]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Build mit static libraries [default=yes]
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-sysvsem">
     <term>
      <parameter>--enable-sysvsem</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Aktiviert die Unterstützung für System V semaphore Unterstützung.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-sysvshm">
     <term>
      <parameter>--enable-sysvshm</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Aktiviert die Unterstützung für System V shared memory support
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-trans-sid">
     <term>
      <parameter>--enable-trans-sid</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Ist in PHP 3 nicht verfügbar
      </para>
      <para>
       PHP 4: Aktiviert Transparent Session ID Propagation
      </para>
     </listitem>
    </varlistentry>

     <varlistentry id="install.configure.with-cdb">
      <term>
       <parameter>--with-cdb[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert CDB Unterstützung
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-config-file-path">
      <term>
       <parameter>--with-config-file-path=PATH</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Setzt den Pfad, in welchem nach der php3.ini gesucht werden soll. 
        Default ist <filename>/usr/local/lib</filename>.
       </para>
       <para>
        PHP 4: Setzt den Pfad, in welchem nach der <filename>php.ini</filename>
         gesucht werden soll. Default ist <filename>/usr/local/lib</filename>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-cpdflib">
      <term>
       <parameter>--with-cpdflib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Inkludiert ClibPDF Unterstützung. DIR ist das ClibPDF install 
        directory, default ist /usr/local.
       </para>
       <para>
        PHP 4: Inkludiert cpdflib Unterstützung (benötigt cpdflib &gt;= 2). 
        DIR ist das cpdfllib Installatiionsverzeichnis, default ist /usr.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-esoob">
      <term>
       <parameter>--with-esoob[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert Easysoft OOB Unterstützung. DIR ist das OOB base 
        install directory, default ist /usr/local/easysoft/oob/client.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-exec-dir">
      <term>
       <parameter>--with-exec-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Erlaube Executables in DIR nur, wenn im Safe Mode. 
        Default ist /usr/local/php/bin
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-fdftk">
      <term>
       <parameter>--with-fdftk[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert fdftk Unterstützung. DIR ist das fdftk 
        install directory, default ist /usr/local.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gnu-ld">
      <term>
       <parameter>--with-gnu-ld</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Nimmt an, dass der C Compiler GNU ld verwendet [default=no]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-icap">
      <term>
       <parameter>--with-icap[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert ICAP Unterstützung
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-imap">
      <term>
       <parameter>--with-imap[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert IMAP Unterstützung. DIR ist das IMAP include, 
        und das c-client.a directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-imsp">
      <term>
       <parameter>--with-imsp[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Inkludiert IMSP Unterstützung (DIR ist das IMSP include dir und 
        libimsp.a dir).
       </para>
       <para>
        PHP 4: Ist in PHP 4 nicht verfügbar
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-java">
      <term>
       <parameter>--with-java[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert Java Unterstützung. DIR ist das base install directory 
        für das JDK. Diese Extension kann nur als eine shared dl erstellt werden.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-kerberos">
      <term>
       <parameter>--with-kerberos[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert Kerberos Unterstützung in IMAP.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mcal">
      <term>
       <parameter>--with-mcal[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert MCAL Unterstützung.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mcrypt">
      <term>
       <parameter>--with-mcrypt[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert mcrypt Unterstützung. DIR ist das mcrypt install
        directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mhash">
      <term>
       <parameter>--with-mhash[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert mhash Unterstützung. DIR ist das mhash install 
        directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mm">
      <term>
       <parameter>--with-mm[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert mm Unterstützung für Session Storage
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mod_charset">
      <term>
       <parameter>--with-mod_charset</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Aktiviert Transfer Tables für mod_charset (Rus Apache).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pdflib">
      <term>
       <parameter>--with-pdflib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Inkludiert pdflib Unterstützung (getestet mit 0.6 und 2.0). DIR 
        ist das pdflib install directory, default ist
        <filename>/usr/local</filename>.
       </para>
       <para>
        PHP 4: Inkludiert pdflib 3.x/4.x Unterstützung. DIR ist die pdflib install
        location, default ist <filename>/usr/local</filename>.
       </para>
       <para>
        PHP 4 and PDFlib 3.x/4.x benötigen verfügbare JPEG und TIFF Bibliotheken.
        Wenn Sie PDFlib Unterstützung kompilieren, verwenden Sie die
        <link linkend="install.configure.with-jpeg-dir">--with-jpeg-dir</link>
        und 
        <link linkend="install.configure.with-tiff-dir">--with-tiff-dir</link>
        Konfigurationsoptionen. Sie können zusätzlich auch die Optionen
        <link linkend="install.configure.with-png-dir">--with-png-dir</link>
        und 
        <link linkend="install.configure.with-zlib-dir">--with-zlib-dir</link>
        verwenden, um PNG und Zlib Unterstützung in die PDFlib Extension zu 
        kompilieren.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-shared-pdflib">
      <term>
       <parameter>--enable-shared-pdflib</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Aktiviert pdflib als shared library.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-readline">
      <term>
       <parameter>--with-readline[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert readline Unterstützung. DIR ist das readline install directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-regex">
      <term>
       <parameter>--with-regex=TYPE</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: regex Bibliothekstypen: system, apache, php
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-servlet">
      <term>
       <parameter>--with-servlet[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert servlet Unterstützung. DIR ist das base install
        directory für das JSDK. Dieses SAPI verlangt, dass die Java
        Extension als ein shared dl erstellt wird.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ming">
      <term>
       <parameter>--with-ming</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert Flash 4 Unterstützung, mit Ming
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-swf">
      <term>
       <parameter>--with-swf[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert swf Unterstützung
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-system-regex">
      <term>
       <parameter>--with-system-regex</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Benutzt die bundled regex Bibliothek nicht
       </para>
       <para>
        PHP 4: (nicht empfohlen) Verwenden der system regex Bibliothek
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-tsrm-pth">
      <term>
       <parameter>--with-tsrm-pth[=pth-config]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Verwendet GNU Pth.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-tsrm-pthreads">
      <term>
       <parameter>--with-tsrm-pthreads</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Verwendet POSIX threads (default)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-x">
      <term>
       <parameter>--with-x</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Verwendet das X Window System
       </para>
       <para>
        PHP 4: Ist in PHP 4 nicht verfügbar
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-bzip2">
      <term>
       <parameter>--with-bz2[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 4: Inkludiert Unterstützung von bzip2. DIR
        ist das bzip2 Installationsverzeichnis.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zlib-dir">
      <term>
       <parameter>--with-zlib-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: zlib dir für pdflib 2.0 oder inkludiere zlib Unterstützung
       </para>
       <para>
        PHP 4: zlib dir für pdflib 3.x/4.x oder inkludiere zlib Unterstützung
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zlib">
      <term>
       <parameter>--with-zlib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert zlib Unterstützung (benötigt zlib &gt;= 1.0.9). 
        DIR ist das zlib Installationsverzeichnis, default ist /usr.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zip">
      <term>
       <parameter>--with-zip[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 4: Inkludiert zip Unterstützung (benötigt zziplib &gt;= 0.10.6). 
        DIR ist das zziplib Installationsverzeichnis, default ist /usr/local.
       </para>
       <para>
        Die letzte Version von zziplib finden Sie auf <ulink
        url="&url.zziplib;">&url.zziplib;</ulink>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.without-pcre-regex">
      <term>
       <parameter>--without-pcre-regex</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ohne Perl Compatible Regular Expressions Unterstützung
       </para>
       <para>
        PHP 4: Ohne Perl Compatible Regular Expressions Unterstützung. 
        Verwenden Sie --with-pcre-regex=DIR, um mit DIR anzugeben, wo sich die 
        Include- und Bibliothekendateien von PCRE befinden, wenn Sie die
        bundled Bibliothek nicht verwenden.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.without-posix">
      <term>
       <parameter>--without-posix</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ohne POSIX Funktionen
       </para>
       <para>
        PHP 4: Ist in PHP 4 nicht verfügbar; verwenden Sie stattdessen 
        <link
         linkend="install.configure.disable-posix">--disable-posix</link>.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="install.configure.networking">
    <title>Networking</title>

    <variablelist>
     <varlistentry id="install.configure.with-curl">
      <term>
       <parameter>--with-curl[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert CURL Unterstützung
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-ftp">
      <term>
       <parameter>--enable-ftp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist nicht verfügbar; verwenden Sie stattdessen <link
         linkend="install.configure.with-ftp">--with-ftp</link>
        instead.
       </para>
       <para>
        PHP 4: Inkludiert FTP Unterstützung
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ftp">
      <term>
       <parameter>--with-ftp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Inkludiert FTP Unterstützung.
       </para>
       <para>
        PHP 4: Ist nicht verfügbar; verwenden Sie stattdessen  <link
         linkend="install.configure.enable-ftp">--enable-ftp</link>
        instead
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-url-fopen-wrapper">
      <term>
       <parameter>--disable-url-fopen-wrapper</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Verhindere den URL-aware fopen wrapper, welcher den 
        Zugriff auf Dateien über http oder ftp ermöglicht.
       </para>
       <warning>
        <para>
         Diese Option ist nur für PHP Versionen bis 4.0.3 verfügbar, aktuellere
         Versionen bieten den INI Parameter 
         <parameter>allow_url_fopen</parameter>, damit Sie sich in diesem Punkt 
         nicht schon bei der Kompilation festlegen müssen.
        </para>
       </warning>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mod-dav">
      <term>
       <parameter>--with-mod-dav=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert DAV Unterstützung über Apache's mod_dav, DIR ist
        mod_dav's Installationsverzeichnis (Nur Apache Modulversion!)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-openssl">
      <term>
       <parameter>--with-openssl[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert OpenSSL Unterstützung in SNMP.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-snmp">
      <term>
       <parameter>--with-snmp[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert SNMP Unterstützung. DIR ist das SNMP base 
        install directory, default ist die Suche in einigen für die snmp 
        Installation üblichen Verzeichnissen. Setzen Sie DIR auf shared um
        als ein dl zu builden, oder shared,DIR um als ein dl zu builden und
        DIR anzugeben.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-ucd-snmp-hack">
      <term>
       <parameter>--enable-ucd-snmp-hack</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Aktiviert UCD SNMP hack
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sockets">
      <term>
       <parameter>--enable-sockets</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Aktiviert sockets Unterstützung
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-yaz">
      <term>
       <parameter>--with-yaz[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert YAZ Unterstützung (ANSI/NISO Z39.50). DIR ist das 
        YAZ bin install directory
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-yp">
      <term>
       <parameter>--enable-yp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist nicht verfügbar, verwenden Sie stattdessen <link
         linkend="install.configure.with-yp">--with-yp</link>.
       </para>
       <para>
        PHP 4: Inkludiert YP Unterstützung
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-yp">
      <term>
       <parameter>--with-yp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Inkludiert YP Unterstützung
       </para>
       <para>
        PHP 4: Ist nicht verfügbar, verwenden Sie stattdessen <link
         linkend="install.configure.enable-yp">--enable-yp</link>.
       </para>
      </listitem>
     </varlistentry>
     
     
     <varlistentry id="install.configure.with-mnogosearch">
      <term>
       <parameter>--with-mnogosearch</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert mnoGoSearch Unterstützung.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>

   <sect2 id="install.configure.php">
    <title>PHP Verhalten</title>

    <variablelist>
     <varlistentry id="install.configure.enable-magic-quotes">
      <term>
       <parameter>--enable-magic-quotes</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Aktiviert magic quotes standardmäßig.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-short-tags">
      <term>
       <parameter>--disable-short-tags</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Verhindert den short-form &lt;? start tag standardmäßig.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-track-vars">
      <term>
       <parameter>--enable-track-vars</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Aktiviert GET/POST/Cookie track variables standardmäßig.
       </para>
       <para>
        PHP 4: Ist in PHP 4 nicht verfügbar; seit PHP 4.0.2 ist
        track_vars immer on.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>

   <sect2 id="install.configure.servers">
    <title>Server</title>
    
    <variablelist>
     <varlistentry id="install.configure.with-aolserver-src">
      <term>
       <parameter>--with-aolserver-src=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Geben Sie den Pfad zur AOLserver source distribution an
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-aolserver">
      <term>
       <parameter>--with-aolserver=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Geben Sie Pfad zu dem installierten AOLserver an
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-apache">
      <term>
       <parameter>--with-apache[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Erstelle ein Apache Modul. DIR ist das top-level 
        Apache build directory, default ist /usr/local/etc/httpd.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-apxs">
      <term>
       <parameter>--with-apxs[=FILE]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Erstellt shared Apache Modul. FILE ist der optionale 
        Pfadname zu dem Apache apxs tool; default ist apxs.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="install.configure.enable-versioning">
      <term>
       <parameter>--enable-versioning</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Nutzt die Vorteile des Versionings und Scopings von Solaris 2.x
        und Linux
       </para>
       <para>
        PHP 4: Exportiere nur die benötigten Symbole. Siehe INSTALL für mehr 
        Informationen
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-caudium">
      <term>
       <parameter>--with-caudium[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Erstellt PHP als ein Pike Modul zur Verwendung mit dem Caudium
        Webserver. DIR ist das Caudium base directory. Ist kein Directory 
        angegeben, wird $prefix/caudium/server angenommen. Das Präfix wird von 
        der Option --prefix bestimmt, default ist /usr/local.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-fhttpd">
      <term>
       <parameter>--with-fhttpd[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Erstellt das fhttpd Modul. DIR ist das fhttpd sources 
        Directory, default ist /usr/local/src/fhttpd.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-nsapi">
      <term>
       <parameter>--with-nsapi=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Geben Sie den Pfad zu dem installierten Netscape an.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-phttpd">
      <term>
       <parameter>--with-phttpd=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: 
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pi3web">
      <term>
       <parameter>--with-pi3web=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Ertellt PHP als ein Modul für Pi3Web.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-roxen">
      <term>
       <parameter>--with-roxen=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Erstellt PHP als ein Pike Modul. DIR ist das base 
        Roxen directory, normalerweise /usr/local/roxen/server.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-roxen-zts">
      <term>
       <parameter>--enable-roxen-zts</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Erstellt das Roxen Modul unter Verwendung der Zend Thread 
        Safety.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-thttpd">
      <term>
       <parameter>--with-thttpd=SRCDIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: 
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zeus">
      <term>
       <parameter>--with-zeus=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Erstellt PHP als ISAPI Modul für Zeus.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    
   </sect2>

   <sect2 id="install.configure.text">
    <title>Text and Sprache</title>
 
    <variablelist>
     <varlistentry id="install.configure.with-aspell">
      <term>
       <parameter>--with-aspell[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert ASPELL Unterstützung.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gettext">
      <term>
       <parameter>--with-gettext[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Inkludiert GNU gettext Unterstützung. DIR ist das 
        gettext Installationsverzeichnis, default ist /usr/local
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-iconv">
      <term>
       <parameter>--with-iconv[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar.
       </para>
       <para>
        PHP 4: Inkludiert iconv Unterstützung.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pspell">
      <term>
       <parameter>--with-pspell[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar.
       </para>
       <para>
        PHP 4: Inkludiert PSPELL Unterstützung.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-recode">
      <term>
       <parameter>--with-recode[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Inkludiert GNU recode Unterstützung.
       </para>
       <para>
        PHP 4: Inkludiert recode Unterstützung. DIR ist das recode 
        Installationsverzeichnis.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-shmop">
      <term>
       <parameter>--enable-shmop</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4 : Aktiviert shmop Unterstützung.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>

   </sect2>
   
   <sect2 id="install.configure.xml">
    <title>XML</title>

    <variablelist>   
     <varlistentry id="install.configure.with-dom">
      <term>
       <parameter>--with-dom[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert DOM Unterstützung (benötigt libxml &gt;= 2.0). DIR ist
        das libxml Installationsverzeichnis, default ist <filename>/usr</filename>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sablot-errors-descriptive">
      <term>
       <parameter>--enable-sablot-errors-descriptive</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Aktiviert Descriptive errors
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-sablot">
      <term>
       <parameter>--with-sablot[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Inkludiert Sablotron Unterstützung
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-wddx">
      <term>
       <parameter>--enable-wddx</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar
       </para>
       <para>
        PHP 4: Aktiviert WDDX Unterstützung
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-xml">
      <term>
       <parameter>--disable-xml</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Ist in PHP 3 nicht verfügbar; XML Funktionalität ist 
        nicht standardmäßig inkludiert. Verwenden Sie <link
         linkend="install.configure.with-xml">--with-xml</link>,
        um sie zu aktivieren.
       </para>
       <para>
        PHP 4: Verhindert XML Unterstützung mittels der bundled expat 
        Bibliothek
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-xml">
      <term>
       <parameter>--with-xml</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Inkludiert XML Unterstützung
       </para>
       <para>
        PHP 4: Ist nicht verfügbar; XML Unterstützung ist standardmäßig 
        integriert. Verwenden Sie <link
         linkend="install.configure.disable-xml">--disable-xml</link>, um
        sie zu deaktivieren.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>

  <sect1 id="install-windows">
   <title>Installation auf Windows 9x/Me/NT/2000 Systemen</title>
   <para>
    Es gibt zwei Wege PHP für Windows zu installieren: entweder
    <link linkend="install.windows.manual">manuell</link>, oder mittels
    dem <link linkend="install.windows.installer">InstallShield</link>
    Installer.
   </para>
   <para>
    Wenn Sie Microsoft Visual Studio besitzen, können Sie auch den 
    Source Code von PHP selbst
    <link linkend="install.windows.build">kompilieren</link>.
   </para>
   <para>
    Haben Sie PHP erst einmal auf Ihrem Windows System installiert,
    können Sie als Erweiterung der Funktionalität auch verschiedene
    <link linkend="install.windows.extensions">Erweiterungen laden</link>.
   </para>
   
   <sect2 id="install.windows.installer">
    <title>Windows InstallShield</title>
    
    <para>
     Der von der Downloadseite auf <ulink url="&url.php;">&url.php;</ulink>
     erhältliche Windows PHP Installer installiert die CGI Version von PHP,
     und konfiguriert auch die Webserver IIS, PWS, und Xitami.
    </para>
    
    <simpara>
     Installieren Sie Ihren gewünschten <acronym>HTTP</acronym> Server auf
     Ihrem System und stellen Sie sicher, dass er läuft.
    </simpara>
    
    <simpara>
     Starten Sie nun das Installationsprogramm, und folgen Sie den 
     Instruktionen des Installation Wizards. Es werden zwei 
     Installationsarten unterstützt: Standard bietet zweckmäßige 
     Standardeinstellungen wo dies möglich ist, und Advanced (erweitert),
     welche die gewünschten Einstellungen während der Installation abfragt.
    </simpara>
    
    <simpara>
     Der Installation Wizard sammelt genug Informationen, um die
     <filename>php.ini</filename> zu erstellen, und den Webserver für den 
     Einsatz von PHP zu konfigurieren. Für IIS und auch PWS auf Windows NT
     Workstation wird eine Liste mit den Knoten auf dem Server, sowie eine
     Liste mit den Script Mappings angezeigt aus welcher Sie die gewünschten
     Knoten auswählen können, auf denen PHP in die Script Mappings eingetragen
     werden soll. 
    </simpara>

    <simpara>
     Wenn die Installation fertig ist informiert Sie der Installer, ob Sie
     Ihr System oder den Server neu starten sollen, oder ob Sie einfach mit
     der Nutzung von PHP beginnen können.
    </simpara>
   
   </sect2>
   
   <sect2 id="install.windows.manual">
    <title>Generelle Installationsschritte</title>
    <simpara>
     Diese Installationsanleitung hilft Ihnen, PHP auf Ihren 
     Windows 9x/Me/NT/2000 Webservern zu installieren und zu konfigurieren.
     Diese Anleitung wurde von &link.bob; verfasst, Die Originalversion
     finden Sie auf <ulink url="&url.win32install;">&url.win32install;</ulink>.
    </simpara>
    <para>
     Diese Anleitung unterstützt Sie bei der manuellen Installation für:
     <itemizedlist>
      <listitem>
       <para>
        Personal Web Server 3 und 4 oder neuer
       </para>
      </listitem>
      <listitem>
       <para>
        Internet Information Server 3 und 4 oder neuer
       </para>
      </listitem>
      <listitem>
       <para>
        Apache 1.3.x
       </para>
      </listitem> 
      <listitem>
       <para>
        OmniHTTPd 2.0b1 und höher
       </para>
      </listitem>
      <listitem>
       <para>
        Oreilly Website Pro
       </para>
      </listitem>
      <listitem>
       <para>
        Xitami
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     PHP 4 für Windows gibt es in zwei Varianten - ein CGI Modul (php.exe), 
     und verschiedene SAPI Module (z.B. php4isapi.dll). Letztere ist neu
     in PHP 4, und bietet eine signifikant höhere Performance, sowie neue
     Funktionalitäten. Beachten Sie jedoch, dass die Qualität der SAPI 
     Module für den Einsatz auf Produktionsservern dzt. als noch 
     <emphasis>NICHT</emphasis> hoch genug eingestuft wird. Der Grund dafür 
     ist, dass die PHP SAPI Module die Thread-safe Version des PHP Codes 
     benutzen. Diese ist neu in PHP 4, und wurde noch nicht eingehend genug 
     getestet und belastet, um als komplett stabil angesehen werden zu 
     können, und es sind dzt. auch ein paar Fehler bekannt. Andererseits 
     haben einige Leute über sehr gute Resultate mit den SAPI Modulen 
     berichtet, auch wenn wir über niemanden informiert sind, der sie auf
     Produktionsservern einsetzt. Kurz gesagt - Ihr Nutzen kann variieren;
     Wenn Sie absolute Stabilität benötigen, tauschen Sie die Performance 
     der SAPI Module gegen die Stabilität des CGI Moduls.
   </para>
   <para>
    Wenn Sie eines der SAPI Module unter Windows 95 einsetzen möchten, holen
    Sie sich das DCOM Update von den <ulink
    url="http://download.microsoft.com/msdownload/dcom/95/x86/en/dcom95.exe">Microsoft
    DCOM Seiten</ulink>. Für das ISAPI Modul wird ein ISAPI 4.0 kompatibler 
    Webserver benötigt (getestet wurden IIS 4.0, PWS 4.0 und IIS 5.0). 
    IIS 3.0 wird <emphasis>NICHT</emphasis> unterstützt; Wenn Sie gediegene 
    PHP Unterstützung wünschen, sollten Sie In diesem Fall den Windows NT 4.0 
    Option Pack mit IIS 4.0 downloaden.
   </para>
    <para>
     Die folgenden Schritte sollten vor den serverspezifischen Instruktionen
     an allen Installationen durchgeführt werden.
     <itemizedlist>
      <listitem>
       <para>
        Entpacken Sie die in der Distribution enthaltenen Dateien, in 
        ein Verzeichnis Ihrer Wahl. Wir empfehlen &quot;C:\PHP\&quot;. 
       </para>
      </listitem>
      <listitem>
       <para>
        Kopieren Sie die Datei &apos;php.ini-dist&apos; in Ihr 
        &apos;%WINDOWS%&apos; Verzeichnis auf Windows 95/98, oder in Ihr
        &apos;%SYSTEMROOT%&apos Verzeichnis unter Windows NT oder Windows 
        2000, und bennen Sie sie in &apos;php.ini&apos; um. Ihr 
        &apos;%WINDOWS%&apos; oder &apos;%SYSTEMROOT%&apos; Verzeichnis ist
        normalerweise:
        <simplelist>
         <member>c:\windows für Windows 95/98</member>
         <member>c:\winnt oder c:\winnt40 für NT/2000 Server</member>
        </simplelist>
       </para>  
      </listitem>
      <listitem>
       <para>
        Editieren Sie nun Ihre Datei &apos;php.ini&apos;:
        <itemizedlist>
         <listitem>
          <simpara>
           Tragen Sie bei 'extension_dir' Ihr PHP Installationsverzeichnis 
           oder den Pfad zu Ihren 'php_*.dll' Dateien ein. Z.B.: c:\php
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Wenn Sie OmniHTTPd benutzen, überspringen Sie diesen Schritt.
           Geben Sie bei 'doc_root' Dokumentenverzeichnis des Webservers 
           an. z.B.: c:\apache\htdocs oder c:\webroot
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Wählen Sie nun die Erweiterungen (Module) aus, die Sie benutzen 
           möchten, wenn PHP startet. Entfernen Sie in der 
           <filename>php.ini</filename> die Kommentarzeichen (';') in den 
           entsprechenden 'extension=php_*.dll' Zeilen, um die gewünschten 
           Erweiterungen zu laden. Manche Erweiterungen benötigen zusätzliche
           Bibliotheken. Weitere Informationen über Bezugsquellen dieser 
           Bibliotheken finden Sie in der PHP <ulink 
           url="&url.php.faq;">FAQ</ulink>. Sie können Module mittels 
           <function>dl</function> auch dynamisch laden, siehe auch
           <link linkend="install.windows.extensions">Windows
           Erweiterungen</link>.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Auf PWS und IIS können Sie auch die <filename>browscap.ini</filename>
           auf 'c:\windows\system\inetsrv\browscap.ini' unter Windows 9x/Me,
           und 'c:\winnt\system32\inetsrv\browscap.ini' unter NT/2000 Server
           setzen. Weitere Informationen über die Verwendung der browscap 
           Funktionalität in PHP finden Sie auf diesem <ulink
           url="&url.browscap;">Mirror</ulink>. Klicken Sie den "source"
           Button, um es in Aktion zu sehen.
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </listitem>
     </itemizedlist>
    </para>
   </sect2>

   <sect2 id="install.windows.build">
    <title>Den Source kompilieren</title>
    <para>
     Bevor wir beginnen lohnt es sich, folgende Frage zu beantworten:
     "Warum ist das Kompilieren unter Windows so schwer?" Zwei Gründe
     drängen sich auf:
    </para>
    <orderedlist>
     <listitem><simpara>
      Windows genießt (noch) keine große Gemeinschaft von Entwicklern
      welche auch bereit sind, deren Sourcecode frei zur Verfügung zu 
      stellen. Als Ergebnis wurden die nötigen Investitionen in die
      für solche Entwicklungen nötige Infrastruktur nicht getätigt.
      Das meiste was verfügbar ist, wurde durch die Portierung der
      nötigen Werkzeuge von Unix möglich gemacht. Seien Sie deshalb 
      nicht überrascht, wenn manches aus diesem Erbe von Zeit zu Zeit
      durchscheint.
     </simpara></listitem>
     <listitem><simpara>
      Fast alle der folgenden Instruktionen sind von der Art "Einstellen 
      und vergessen". Deshalb lehnen Sie sich zurück, und folgen den 
      nachstehenden Instruktionen so gewissenhaft Sie können.
     </simpara></listitem>
    </orderedlist>

    <sect3 id="install.windows.build.prepare">
     <title>Vorbereitungen</title>
     <para>
      Bevor Sie beginnen können, müssen Sie einiges downloaden...
     </para>
     <itemizedlist>
      <listitem><simpara>
       Erst einmal benötigen Sie den Cygwin Toolkit von einem <ulink
       url="http://sources.redhat.com/cygwin/download.html">Cygwin</ulink>
       Mirror in Ihrer Nähe. Cygwin bietet die meisten der populären GNU
       Utilities, welche während der Kompilation benötigt werden. 
      </simpara></listitem>
      <listitem><simpara>
       Laden Sie den Rest der benötigten Tools von der PHP Seite 
       <ulink url="http://www.php.net/extra/win32build.zip"
       >http://www.php.net/extra/win32build.zip</ulink> herunter.
      </simpara></listitem>
      <listitem><simpara>
       Laden Sie sich auch den Sourcecode für die von PHP verwendete
       DNS Namensauflösung von 
       <ulink url="http://www.php.net/extra/bindlib_w32.zip"
       >http://www.php.net/extra/bindlib_w32.zip</ulink> herunter.
       Dieser ersetzt die in <filename>win32build.zip</filename>
       enthaltene Bibliothek <filename>resolv.lib</filename>.
      </simpara></listitem>
      <listitem><simpara>
       Sollten Sie noch kein Tool zur dekomprimierung besitzen, so
       bekommen Sie eine freie Version von <ulink
       url="http://www.cdrom.com/pub/infozip/UnZip.html">InfoZip</ulink>.
      </simpara></listitem>
     </itemizedlist>
     <simpara>
      Als letztes benötigen Sie natürlich den Sourcecode von PHP 4 selbst.
      Sie bekommen die aktuellste Entwicklerversion unter Verwendung des
      <ulink url="http://www.php.net/anoncvs.php">anonymen CVS</ulink>.
      Wenn Sie einen <ulink url="http://snaps.php.net/">Snapshot</ulink> 
      oder einen <ulink url="http://www.php.net/downloads.php">Source</ulink>
      Tarball downloaden, müssen Sie ihn nicht nur erst dekomprimieren,
      sondern auch in den <filename>*.dsp</filename> und
      <filename>*.dsw</filename> Dateien die einfachen Linefeeds in crlf
      konvertieren, bevor diese von Microsoft Visual C++ geladen werden.
     </simpara>
     <note>
      <simpara>
       Stellen Sie die Verzeichnisse <filename>Zend</filename> und
       <filename>TSRM</filename> in das <filename>php4</filename> 
       Verzeichnis, damit die Projekte während des Kompilierens 
       gefunden werden.
      </simpara>
     </note>
    </sect3>
    <sect3 id="install.windows.build.install">
     <title>Alles zusammenfügen</title>
     <itemizedlist>
      <listitem><simpara>
       Folgen Sie den Anweisungen zur Installation des von Ihnen
       gewählten Dekomprimierungstools.
      </simpara></listitem>
      <listitem>
       <simpara>
        Führen Sie <filename>setup.exe</filename> aus, und folgen Sie den
        Installationsanweisungen. Wenn Sie einen anderen Pfad als 
        <filename>c:\cygnus</filename> wählen, setzen Sie bitte die Cygwin
        Environmentvariable. Unter Windows 95/98 kann dies mittels einer 
        Zeile in der autoexec.bat erfolgen. Unter Windows NT gehen Sie auf
        Systemsteuerung =&gt; System und wählen den Tab Umgebungsvariablen
        aus.
       </simpara>
       <warning>
        <simpara>
         Erstellen Sie ein temporäres Verzeichnis für Cygwin, sonst werden 
         einige Kommandos (speziell bison) nicht korrekt ausgeführt. Unter 
         Windows 95/98, <userinput>mkdir C:\TMP</userinput>. Für Windows NT,
         <userinput>mkdir %SystemDrive%\tmp</userinput>.
        </simpara>
       </warning>
      </listitem>
      <listitem><simpara>
       Erstellen Sie ein Verzeichnis, und dekomprimieren Sie darin 
       <filename>win32build.zip</filename>.
      </simpara></listitem>
      <listitem>
       <simpara>
        Starten Sie Microsoft Visual C++, und wählen im Menü Extras =&gt; 
        Optionen =&gt; Verzeichnisse. Wechseln Sie nacheinander zu 
        "Ausführbare Dateien", "Include Dateien" und "Bibliothek Dateien",
        und vergewissern Sie sich, dass <filename>cygwin\bin</filename>,
        <filename>win32build\include</filename>, und
        <filename>win32build\lib</filename> in der jeweiligen Liste 
        eingetragen sind (Um einen Eintrag hinzuzufügen, wählen Sie eine 
        leere Zeile am Ende der Liste aus, und beginnen einzutippen). 
        Typische Einträge sehen wie folgt aus:
       </simpara>
       <itemizedlist>
        <listitem><simpara>
         <filename>c:\cygnus\bin</filename>
        </simpara></listitem>
        <listitem><simpara>
         <filename>c:\php-win32build\include</filename>
        </simpara></listitem>
        <listitem><simpara>
         <filename>c:\php-win32build\lib</filename>
        </simpara></listitem>
       </itemizedlist>
       <simpara>
        Drücken Sie OK, und verlassen Sie Visual C++.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Erstellen Sie ein anderes Verzeichnis, und dekomprimieren Sie darin
        <filename>bindlib_w32.zip</filename>. Entscheiden Sie sich, ob Sie
        die Debug-Symbole verfügbar haben wollen (bindlib - Win32 Debug) 
        oder nicht (bindlib - Win32 Release).
        Erstellen die geeignete Konfiguration:
       </simpara>
       <itemizedlist>
        <listitem><simpara>
         Wenn Sie das GUI benutzen: Starten Sie VC++, selektieren Sie 
         Datei =&gt; Arbeitsbereich öffnen, und wählen Sie bindlib aus.
         Dann selektieren Sie Build =&gt; Aktive Konfiguration, und wählen 
         die gewünschte Konfiguration aus. Letztendlich wählen Sie 
         Erstellen =&gt; Rebuild All.
        </simpara></listitem>
        <listitem>
         <simpara>
          Wenn Sie die Kommandozeile benutzen stellen Sie sicher, dass
          die C++ Environmentvariablen registriert sind, oder starten Sie
          <command>vcvars.bat</command>, und führen eines der folgenden 
          Kommandos aus:
         </simpara>
         <itemizedlist>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</userinput>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</userinput>
           </simpara>
          </listitem>
         </itemizedlist>
        </listitem>
        <listitem><simpara>
         Nun sollten Sie entweder in Ihrem <filename>Debug</filename> 
         oder <filename>Release</filename> Verzeichnis eine verwendbare 
         <filename>resolv.lib</filename> haben. Kopieren Sie diese Datei
         in Ihr <filename>win32build\lib</filename> Verzeichnis, und 
         überschreiben damit die dort bereits vorhandene Datei mit dem 
         gleichen Namen.
        </simpara></listitem>
       </itemizedlist>
      </listitem>
     </itemizedlist>
    </sect3>

    <sect3 id="install.windows.build.compile">
     <title>Kompilieren</title>
     <simpara>
      Der einfachste Weg zu beginnen, ist die standalone/CGI Version zu 
      erstellen.
     </simpara>
     <itemizedlist>
      <listitem><simpara>
       Wenn Sie das GUI benutzen: Starten Sie VC++, selektieren Sie 
       Datei =&gt; Arbeitsbereich öffnen, und wählen Sie php4ts aus.
       Dann selektieren Sie Erstellen =&gt; Setze aktuelle Konfiguration,
       und wählen die gewünschte Konfiguration aus. Letztendlich wählen 
       Sie Erstellen =&gt; Rebuild All.
      </simpara></listitem>
      <listitem>
       <simpara>
        Wenn Sie die Kommandozeile benutzen stellen Sie sicher, dass
        die C++ Environmentvariablen registriert sind, oder starten Sie
        <command>vcvars.bat</command>, und führen eines der folgenden 
        Kommandos aus:
       </simpara>
       <itemizedlist>
        <listitem><simpara>
         <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</userinput>
        </simpara></listitem>
        <listitem><simpara>
         <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</userinput>
        </simpara></listitem>
        <listitem><simpara>
         Nun sollten Sie entweder in Ihrem <filename>Debug_TS</filename> 
         oder <filename>Release_TS</filename> Verzeichnis eine verwendbare
         <filename>php.exe</filename> haben.
        </simpara></listitem>
       </itemizedlist>
      </listitem>
     </itemizedlist>
     <simpara>
      Wiederholen Sie die obigen Schritte mit <filename>php4isapi.dsp</filename>
      (welches sich in <filename>sapi\isapi</filename> befindet),
      um das für eine Integration mit Microsoft IIS nötige ISAPI-Modul 
      zu erstellen.
     </simpara>
    </sect3>
   </sect2>
   
   <sect2 id="install.windows.extensions">
    <title>Installation von Windows Erweiterungen</title>
    <para>
     Sind PHP und ein Webserver auf Windows einmal installiert, möchten
     Sie vielleicht einige Erweiterungen für zusätzliche Funktionalität 
     installieren. Wie bereits im Kapitel Generelle Installationsschritte
     beschrieben, können Sie Erweiterungen auswählen, welche beim Start 
     von PHP geladen werden, indem Sie das Kommentarzeichen (';') in den 
     entsprechenden 'extension=php_*.dll' Zeilen in der 
     <filename>php.ini</filename> entfernen. Manche Erweiterungen 
     benötigen zusätzlich installierte Bibliotheken, um korrekt arbeiten 
     zu können. Weitere Informationen über Bezugsquellen dieser 
     Bibliotheken finden Sie in der PHP <ulink 
     url="&url.php.faq;">FAQ</ulink>. Sie können Module mittels 
     <function>dl</function> auch dynamisch laden.
    </para>
    <para>
     Die DLLs für PHP Erweiterungen enthalten als Präfix 'php_', um 
     Verwechslungen zwischen PHP Erweiterungen und deren unterstützenden
     Bibliotheken zu vermeiden.
    </para>
    <note>
     <para>
       In PHP 4.0.4pl1 ist die Unterstützung für MySQL, ODBC, FTP, Calendar, 
       BCMath, COM, PCRE, Session, WDDX und XML <emphasis>inkludiert</emphasis>.
       Um diese Funktionen zu benutzen, brauchen Sie keine zusätzlichen 
       Erweiterungen zu laden. Eine Liste mit den bereits inkludierten
       Modulen befindet sich in der <filename>README.txt</filename> oder 
       <filename>install.txt</filename> Ihrer Distribution.
     </para>
    </note>

    <para>
     <table>
      <title>PHP Erweiterungen</title>
      <tgroup cols="2">
       <tbody>
  <row>
   <entry>php_calendar.dll</entry>
   <entry>Kalender Umwandlungsfunktionen</entry>
  </row>
  <row>
   <entry>php_crypt.dll</entry>
   <entry>Verschlüsselungsfunktionen</entry>
  </row>
  <row>
   <entry>php_dbase.dll</entry>
   <entry>dBase Funktionen</entry>
  </row>
  <row>
   <entry>php_dbm.dll</entry>
   <entry>Berkeley DB2 Bibliothek</entry>
  </row>
  <row>
   <entry>php_filepro.dll</entry>
   <entry>Read-only Zugriff auf Filepro Datenbanken</entry>
  </row>
  <row>
   <entry>php_gd.dll</entry>
   <entry>GD Bibliotheksfunktionen zur Bildmanipulation</entry>
  </row>
  <row>
   <entry>php_hyperwave.dll</entry>
   <entry>HyperWave Funktionen</entry>
  </row>
  <row>
   <entry>php_imap4r2.dll</entry>
   <entry>IMAP 4 Funktionen</entry>
  </row>
  <row>
   <entry>php_ldap.dll</entry>
   <entry>LDAP Funktionen</entry>
  </row>
  <row>
   <entry>php_msql1.dll</entry>
   <entry>mSQL 1 Client</entry>
  </row>
  <row>
   <entry>php_msql2.dll</entry>
   <entry>mSQL 2 Client</entry>
  </row>
  <row>
   <entry>php_mssql.dll</entry>
   <entry>MSSQL Client (benötigt MSSQL DB-Bibliotheken)</entry>
  </row>
  <row>
   <entry>php3_mysql.dll (in PHP 4 bereits integriert)</entry>
   <entry>MySQL Funktionen</entry>
  </row>
  <row>
   <entry>php_nsmail.dll</entry>
   <entry>Netscape Mail Funktionen</entry>
  </row>
  <row>
   <entry>php_oci73.dll</entry>
   <entry>Oracle Funktionen</entry>
  </row>
  <row>
   <entry>php_snmp.dll</entry>
   <entry>SNMP get and walk Funktionen (nur NT!)</entry>
  </row>
  <row>
   <entry>php_zlib.dll</entry>
   <entry>ZLib Komprimierungsfunktionen</entry>
  </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </sect2>
  </sect1>

  <sect1 id="install.apache">
   <title>Servers-Apache</title>
   <para>
    This section contains notes and hints specific to Apache installs
    of PHP, both for <link linkend="install.apache.unix">Unix</link> and
    <link linkend="install.apache.windows">Windows</link> versions.
   </para>   
   <sect2 id="install.apache.unix">
    <title>Details of installing PHP with Apache on Unix.</title>
    <para>
     You can select arguments to add to the
     <command>configure</command> on line 8 below from the <link
     linkend="install.configure">Complete list of configure
     options</link>.
    </para>

    <example id="install.apache.unix.longer">
     <title>
      Installation Instructions (Apache Module Version)
     </title>
     <programlisting>
1.  gunzip apache_1.3.x.tar.gz
2.  tar xvf apache_1.3.x.tar
3.  gunzip php-x.x.x.tar.gz
4.  tar xvf php-x.x.x.tar
5.  cd apache_1.3.x
6.  ./configure --prefix=/www
7.  cd ../php-x.x.x
8.  ./configure --with-mysql --with-apache=../apache_1.3.x --enable-track-vars
9.  make
10. make install
11. cd ../apache_1.3.x
12. for PHP 3: ./configure --activate-module=src/modules/php3/libphp3.a
    for PHP 4: ./configure --activate-module=src/modules/php4/libphp4.a
13. make
14. make install

  Instead of this step you may prefer to simply copy the httpd binary
  overtop of your existing binary.  Make sure you shut down your
  server first though.

15. cd ../php-x.x.x
16. for PHP 3: cp php3.ini-dist /usr/local/lib/php3.ini
    for PHP 4: cp php.ini-dist /usr/local/lib/php.ini

  You can edit your .ini file to set PHP options.  If
  you prefer this file in another location, use
  --with-config-file-path=/path in step 8.

17. Edit your httpd.conf or srm.conf file and add: 
      
     For PHP 3:   AddType application/x-httpd-php3 .php3
     For PHP 4:   AddType application/x-httpd-php .php
 
  You can choose any extension you wish here.  .php is simply the one
  we suggest. You can even include .html .

18. Use your normal procedure for starting the Apache server. (You must
    stop and restart the server, not just cause the server to reload by
    use a HUP or USR1 signal.)
      </programlisting>
     </example>

     <para>
      Depending on your Apache install and Unix variant, there are many
      possible ways to stop and restart the server. Below are some typical
      lines used in restarting the server, for different apache/unix
      installations. You should replace <literal>/path/to/</literal> with
      the path to these applications on your systems.
      <informalexample>
       <programlisting>
1. Several Linux and SysV variants:
/etc/rc.d/init.d/httpd restart

2. Using apachectl scripts:
/path/to/apachectl stop
/path/to/apachectl start

3. httpdctl and httpsdctl (Using OpenSSL), similar to apachectl:
/path/to/httpsdctl stop
/path/to/httpsdctl start

4. Using mod_ssl, or another SSL server, you may want to manually
stop and start:
/path/to/apachectl stop
/path/to/apachectl startssl
       </programlisting>
      </informalexample>
      The locations of the apachectl and http(s)dctl binaries often
      vary. If your system has <literal>locate</literal> or
      <literal>whereis</literal> or <literal>which</literal> commands,
      these can assist you in finding your server contrl programs.
     </para>

     <para>
      Different examples of compiling PHP for apache are as follows:
      <informalexample>
       <programlisting>
./configure --with-apxs --with-pgsql
       </programlisting>
      </informalexample>
     </para>
     <para>
      This will create a <filename>libphp4.so</filename> shared
      library that is loaded into Apache using a LoadModule line in
      Apache's <filename>httpd.conf</filename> file. The PostgreSQL
      support is embedded into this <filename>libphp4.so</filename>
      library.
     </para>
     <para>
      <informalexample>
       <programlisting>
./configure --with-apxs --with-pgsql=shared
       </programlisting>
      </informalexample>
     </para>
     <para>
      This will again create a <filename>libphp4.so</filename> shared
      library for Apache, but it will also create a
      <filename>pgsql.so</filename> shared library that is loaded into
      PHP either by using the extension directive in
      <filename>php.ini</filename> file or by loading it explicitly in
      a script using the <function>dl</function> function.
     </para>
     <para>
      <informalexample>
       <programlisting>
./configure --with-apache=/path/to/apache_source --with-pgsql
       </programlisting>
      </informalexample>
     </para>
     <para>
      This will create a <filename>libmodphp4.a</filename> library, a
      <filename>mod_php4.c</filename> and some accompanying files and
      copy this into the <literal>src/modules/php4</literal> directory
      in the Apache source tree. Then you compile Apache using
      <literal>--activate-module=src/modules/php4/libphp4.a</literal>
      and the Apache build system will create
      <filename>libphp4.a</filename> and link it statically into the
      <filename>httpd</filename> binary. The PostgreSQL support is
      included directly into this <filename>httpd</filename> binary,
      so the final result here is a single <filename>httpd</filename>
      binary that includes all of Apache and all of PHP.
     </para>
     <para>
      <informalexample>
       <programlisting>
./configure --with-apache=/path/to/apache_source --with-pgsql=shared
       </programlisting>
      </informalexample>
     </para>
     <para>
      Same as before, except instead of including PostgreSQL support
      directly into the final <filename>httpd</filename> you will get
      a <filename>pgsql.so</filename> shared library that you can load
      into PHP from either the <filename>php.ini</filename> file or
      directly using <function>dl</function>.
     </para>
     <para>
      When choosing to build PHP in different ways, you should consider
      the advantages and drawbacks of each method. Building as a shared
      object will mean that you can compile apache separately, and don't
      have to recompile everything as you add to, or change, PHP.
      Building PHP into apache (static method) means that PHP will
      load and run faster. For more information, see the Apache
      <ulink url="&url.apachedso;">webpage on DSO support</ulink>.
     </para>
   </sect2>


   <sect2 id="install.apache.windows">
    <title>Details of installing PHP on Windows with Apache 1.3.x</title>
    
    <simpara>
     There are two ways to set up PHP to work with Apache 1.3.x
     on Windows. One is to use the CGI binary (php.exe),
     the other is to use the Apache module dll. In either case
     you need to stop the Apache server, and edit your
     <literal>srm.conf</literal> or <literal>httpd.conf</literal>
     to configure Apache to work with PHP.
    </simpara>
    <simpara>
     Although there can be a few variations of configuring PHP
     under Apache, these are simple enough to be used by the
     newcomer. Please consult the Apache Docs for further
     configuration directives.
    </simpara>
  
    <para>
     If you unziped the PHP package to C:\PHP\ as desribed
     in the <link linkend="install.windows.manual">General
     Installation Steps</link> section, you need to insert
     these lines to your Apache conf file to set up the
     CGI binary:
     <itemizedlist>
      <listitem>
       <simpara>
        <literal>
         ScriptAlias /php/ "c:/php/"
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         AddType application/x-httpd-php .php .phtml
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         Action application/x-httpd-php "/php/php.exe"
        </literal>
       </simpara>
      </listitem>
     </itemizedlist>
     Remerber to restart the server, for example,
     <literal>NET STOP APACHE</literal> followed by
     <literal>NET START APACHE</literal>.
    </para>

    <para>
     If you would like to use PHP as a module in Apache,
     you should move <filename>php4ts.dll</filename> to
     the windows/system (for Windows 9x/Me) or winnt/system32
     (for Windows NT/2000) directory, overwriting any older file.
     Then you should add the following two lines to you Apache
     conf file:
     <itemizedlist>
      <listitem>
       <simpara>
        <literal>
         LoadModule php4_module c:/php/sapi/php4apache.dll
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
          AddType application/x-httpd-php .php .phtml
        </literal>
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     To use the source code highlighting feature, simply create a PHP
     script file and stick this code in: <literal>&lt;?php show_source
     ("original_php_script.php"); ?></literal>. Substitute
     <literal>original_php_script.php</literal> with the name of the
     file you wish to show the source of. (This is the only way of
     doing so). 
    </simpara>
    <note>
     <simpara>
      On Win-Apache all backslashes in a path statement such
      as: "c:\directory\file.ext", must be converted to
      forward slashes.
     </simpara>
    </note>
   </sect2>
  </sect1>

  <sect1 id="install.commandline">
   <title>Servers-CGI/Commandline</title>
   <para>
    The default is to build PHP as a CGI program.  This creates a
    commandline interpreter, which can be used for CGI processing, or
    for non-web-related PHP scripting.  If you are running a web
    server PHP has module support for, you should generally go for
    that solution for performance reasons.  However, the CGI version
    enables Apache users to run different PHP-enabled pages under
    different user-ids.  Please make sure you read through the <link
    linkend="security">Security chapter</link> if you are going to
    run PHP as a CGI.
   </para>
   
   <sect2 id="install.commandline.testing">
    <title>Testing</title>
    <simpara>
     If you have built PHP as a CGI program, you may test your build
     by typing <command>make test</command>.  It is always a good idea
     to test your build.  This way you may catch a problem with PHP on
     your platform early instead of having to struggle with it later.
    </simpara>
   </sect2>

   <sect2 id="install.commandline.benchmarking">
    <title>Benchmarking</title>
    <simpara>
     If you have built PHP 3 as a CGI program, you may benchmark your
     build by typing <command>make bench</command>. Note that if safe
     mode is on by default, the benchmark may not be able to finish if
     it takes longer then the 30 seconds allowed. This is because the
     <function>set_time_limit</function> can not be used in safe
     mode. Use the <link
      linkend="ini.max-execution-time">max_execution_time</link>
     configuration setting to control this time for your own
     scripts. <command>make bench</command> ignores the <link
      linkend="configuration.file">configuration file</link>.
    </simpara>
    <note>
     <simpara>
        <command>make bench</command> is only available for PHP 3.
     </simpara>
    </note>
   </sect2>
  </sect1>

  <sect1 id="install.fhttpd">
   <title>Servers-fhttpd</title>
   <para>
    To build PHP as an fhttpd module, answer "yes" to "Build as an
    fhttpd module?" (the <option><link
    linkend="install.configure.with-fhttpd">
    --with-fhttpd</link>=<replaceable>DIR</replaceable></option>
    option to configure) and specify the fhttpd source base
    directory.  The default directory is <filename
    class="directory">/usr/local/src/fhttpd</filename>. If you are
    running fhttpd, building PHP as a module will give better
    performance, more control and remote execution capability.
   </para>
  </sect1>

  <sect1 id="install.caudium">
   <title>Servers-Caudium</title>
   <para>
    PHP 4 can be build as a Pike module for the Caudium webserver. Note
    that this is not supported with PHP 3. Follow the simple
    instructions below to install PHP 4 for Caudium.
   </para>
   <example id="install.caudium.instructions">
    <title>Caudium Installation Instructions</title>
    <programlisting>
1.  Make sure you have Caudium installed prior to attempting to
    install PHP 4. For PHP 4 to work correctly, you will need Pike
    7.0.268 or newer. For the sake of this example we assume that
    Caudium is installed in /opt/caudium/server/.
2.  Change directory to php-x.y.z (where x.y.z is the version number).
3.  ./configure --with-caudium=/opt/caudium/server
4.  make
5.  make install
6.  Restart Caudium if it's currently running.
7.  Log into the graphical configuration interface and go to the
    virtual server where you want to add PHP 4 support.
8.  Click Add Module and locate and then add the PHP 4 Script Support module.
9.  If the documentation says that the 'PHP 4 interpreter isn't
    available', make sure that you restarted the server. If you did
    check /opt/caudium/logs/debug/default.1 for any errors related to
    <filename>PHP4.so</filename>. Also make sure that 
    <filename>caudium/server/lib/[pike-version]/PHP4.so</filename>
    is present.
10. Configure the PHP Script Support module if needed.
    </programlisting>
   </example>
   <para>
    You can of course compile your Caudium module with support for the
    various extensions available in PHP 4. See the 
    <link linkend="install.configure">complete list of configure
    options</link> for an exhaustive rundown. 
   </para>
   <note>
    <para>
     When compiling PHP 4 with MySQL support you must make sure that
     the normal MySQL client code is used. Otherwise there might be
     conflicts if your Pike already has MySQL support. You do this by
     specifying a MySQL install directory <link
     linkend="install.configure.with-mysql">the --with-mysql
     option</link>.
    </para>
   </note>
  </sect1>

  <sect1 id="install.iis">
   <title>Servers-IIS/PWS</title>
   <para>
    This section contains notes and hints specific to IIS (Microsoft
    Internet Information Server) installing PHP for
    <link linkend="install.iis.iis3">PWS/IIS 3</link>,
    <link linkend="install.iis.pws4">PWS 4 or newer</link> and
    <link linkend="install.iis.iis4">IIS 4 or newer</link> versions.
   </para>
   <sect2 id="install.iis.iis3">
    <title>Windows and PWS/IIS 3</title>
    
    <simpara>
     The recommended method for configuring these servers is to use
     the INF file included with the distribution
     (php_iis_reg.inf). You may want to edit this file and make sure
     the extensions and PHP install directories match your
     configuration. Or you can follow the steps below to do it
     manually.
    </simpara>
    <warning>
     <para>
      These steps involve working directly with the Windows
      registry. One error here can leave your system in an unstable
      state. We highly recommend that you back up your registry
      first. The PHP Development team will not be held responsible if
      you damage your registry.
     </para>
    </warning>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        Run Regedit.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Navigate to: <literal>HKEY_LOCAL_MACHINE /System
         /CurrentControlSet /Services /W3Svc /Parameters
         /ScriptMap</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        On the edit menu select: <literal>New->String Value</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Type in the extension you wish to use for your php
        scripts. ex: <literal>.php</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Double click on the new string value and enter the path to
        <literal>php.exe</literal> in the value data field. ex:
        <literal>c:\php\php.exe %s %s</literal>. The '%s %s' is VERY
        important, PHP will not work properly without it.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Repeat these steps for each extension you wish to associate
        with PHP scripts.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Now navigate to: <literal>HKEY_CLASSES_ROOT</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        On the edit menu select: <literal>New->Key</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Name the key to the extension you setup in the previous
        section. ex: <literal>.php</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Highlight the new key and in the right side pane, double click 
        the "default value" and enter <literal>phpfile</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Repeat the last step for each extension you set up in the
        previous section.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Now create another <literal>New->Key</literal> under
        <literal>HKEY_CLASSES_ROOT</literal> and name it
        <literal>phpfile</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Highlight the new key <literal>phpfile</literal> and in the
        right side pane, double click the "default value" and enter
        <literal>PHP Script</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Right click on the <literal>phpfile</literal> key and select
        <literal>New->Key</literal>, name it <literal>Shell</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Right click on the <literal>Shell</literal> key and select
        <literal>New->Key</literal>, name it <literal>open</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Right click on the <literal>open</literal> key and select
        <literal>New->Key</literal>, name it
        <literal>command</literal>. 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Highlight the new key <literal>command</literal> and in the
        right side pane, double click the "default value" and enter
        the path to <literal>php.exe</literal>. ex:
        <literal>c:\php\php.exe -q %1</literal>. (don't forget the
        <literal>%1</literal>). 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Exit Regedit.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        If using PWS on Windows, reboot to reload the registry.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <simpara>
     PWS and IIS 3 users now have a fully operational system. IIS 3
     users can use a nifty <ulink url="&url.iiscfg;">tool</ulink>
     from Steven Genusa to configure their script maps.
    </simpara>
    
   </sect2>

   <sect2 id="install.iis.pws4">
    <title>Windows and PWS 4 or newer</title>

    <simpara>
     When installing PHP on Windows with PWS 4 or newer version,
     you have two options. One to set up the PHP CGI binary,
     the other is to use the ISAPI module dll.
    </simpara>
     
    <para>
     If you choose the CGI binary, do the following:
     <itemizedlist>
      <listitem>
       <simpara>
        Edit the enclosed <filename>pws-php4cgi.reg</filename>
        file (look into the sapi dir) to reflect the location of
        your php.exe. Forward slashes should be escaped, for example:
        <literal>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\w3svc\parameters\Script Map] ".php"="C:\\PHP\\php.exe"</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        In the PWS Manager, right click on a given directory you want
        to add PHP support to, and select Properties. Check the 'Execute'
        checkbox, and confirm.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <para>
     If you choose the ISAPI module, do the following:
     <itemizedlist>
      <listitem>
       <simpara>
        Edit the enclosed <filename>pws-php4isapi.reg</filename>
        file (look into the sapi dir) to reflect the location of
        your php4isapi.dll. Forward slashes should be escaped, for example:
        <literal>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\w3svc\parameters\Script Map] ".php"="C:\\PHP\\sapi\\php4isapi.dll"</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        In the PWS Manager, right click on a given directory you want to
        add PHP support to, and select Properties. Check the 'Execute'
        checkbox, and confirm. 
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

   </sect2>

   <sect2 id="install.iis.iis4">
    <title>Windows NT/2000 and IIS 4 or newer</title>

    <simpara>
     To install PHP on an NT/2000 Server running IIS 4 or newer,
     follow these instructions. You have two options to set up
     PHP, using the CGI binary (php.exe) or with the ISAPI module.
    </simpara>
    
    <simpara>
     In either case, you need to start the Microsoft Management
     Console (may appear as 'Internet Services Manager', either
     in your Windows NT 4.0 Option Pack branch or the Control
     Panel=&gt;Administrative Tools under Windows 2000). Then 
     right click on your Web server node (this will most probably
     appear as 'Default Web Server'), and select 'Properties'.
    </simpara>

    <para>
     If you want to use the CGI binary, do the following:
     <itemizedlist>
      <listitem>
       <simpara>
        Under 'Home Directory', 'Virtual Directory', or
        'Directory', click on the 'Configuration' button,
        and then enter the App Mappings tab.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Click Add, and in the Executable box, type:
        <literal>c:\php\php.exe %s %s</literal> (assuming
        that you have unziped PHP in c:\php\). You MUST
        have the %s %s on the end, PHP will not function
        properly if you fail to do this.
        </simpara>
      </listitem>
      <listitem>
       <simpara>
        In the Extension box, type the file name extension you want
        associated with PHP scripts. Leave 'Method exclusions'
        blank, and check the Script engine checkbox.
        You must repeat step 3 and 4 for each extension you
        want associated with PHP scripts.
        (<literal>.php</literal> and <literal>.phtml</literal>
        are common.)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Set up the appropriate security. (This is done in Internet
        Service Manager), and if your NT Server uses NTFS file system,
        add execute rights for I_USR_ to the directory that contains
        <literal>php.exe</literal>.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    
    <para>
     To use the ISAPI module, do the following:
     <itemizedlist>
      <listitem>
       <simpara>
        If you don't want to perform HTTP Authentication using PHP,
        you can (and should) skip this step. Under ISAPI Filters,
        add a new ISAPI filter. Use PHP as the filter name, and
        supply a path to the php4isapi.dll.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Under 'Home Directory', click on the 'Configuration' button.
        Add a new entry to the Application Mappings. Use the path
        to the php4isapi.dll as the Executable, supply .php as the
        extension, leave Method exclusions blank, and check the
        Script engine checkbox.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Stop IIS completely
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Start IIS again
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </sect2>
  </sect1>
  
  <sect1 id="install.netscape-enterprise">
   <title>Servers-Netscape and iPlanet</title>
   <para>
    To build PHP with NES or iPlanet web servers, enter the proper
    install directory for the 
    <option><link linkend="install.configure.with-nsapi">--with-nsapi</link> = <replaceable>DIR</replaceable></option> 
    option. The default directory is usually 
    <filename class="directory">/opt/netscape/suitespot/</filename>. 
    Please also read <filename>/php-xxx-version/sapi/nsapi/nsapi-readme.txt</filename>. 
   </para>
   <para>
    <example id="install.netscape-enterprise.solaris">
     <title>
      Installation Example for Netscape Enterprise on Solaris
     </title>
     <programlisting>
Instructions for Sun Solaris 2.6 with Netscape Enterprise Server 3.6
From: bhager@invacare.com

1. Install the following packages from www.sunfreeware.com or another
download site: 

    flex-2_5_4a-sol26-sparc-local 
    gcc-2_95_2-sol26-sparc-local 
    gzip-1.2.4-sol26-sparc-local 
    perl-5_005_03-sol26-sparc-local 
    bison-1_25-sol26-sparc-local 
    make-3_76_1-sol26-sparc-local 
    m4-1_4-sol26-sparc-local 
    autoconf-2.13 
    automake-1.4 
    mysql-3.23.24-beta (if you want mysql support) 
    tar-1.13 (GNU tar) 

2. Make sure your path includes the proper directories
    PATH=.:/usr/local/bin:/usr/sbin:/usr/bin:/usr/ccs/bin 
    export PATH 

3. gunzip php-x.x.x.tar.gz (if you have a .gz dist, otherwise go to 4) 
4. tar xvf php-x.x.x.tar 
5. cd ../php-x.x.x 

6. For the following step, make sure /opt/netscape/suitespot/ is where
   your netscape server is installed. Otherwise, change to correct path:
    /configure --with-mysql=/usr/local/mysql --with-nsapi=/opt/netscape/suitespot/ --enable-track-vars --enable-libgcc 
7. make 
8. make install
      </programlisting>
     </example>
     After performing the base install and reading the appropriate
     readme file, you may need to performs some additional
     configuration steps.
    </para>
    <para>
     Firstly you may need to add some paths to the LD_LIBRARY_PATH 
     environment for Netscape to find all the shared libs. This can 
     best done in the start script for your Netscape server. 
     Windows users can probably skip this step. The start 
     script is often located in:
     <filename
     class="directory">/path/to/server/https-servername/start</filename> 
    </para>
    <para>
     You may also need to edit the configuration files that are
     located in:<filename
     class="directory">/path/to/server/https-servername/config/</filename>.
    </para>
   
   <example id="install.netscape-enterprise.configure">
      <title>
       Configuration Example for Netscape Enterprise
      </title>
      <programlisting>
Configuration Instructions for Netscape Enterprise Server
From: bhager@invacare.com

1. Add the following line to mime.types:
    type=magnus-internal/x-httpd-php exts=php

2. Add the following to obj.conf, shlib will vary depending on
    your OS, for unix it will be something like
    /opt/netscape/suitespot/bin/libphp4.so.

    You should place the following lines after mime types init.
    Init fn="load-modules" funcs="php4_init,php4_close,php4_execute,php4_auth_trans" shlib="/php4/nsapiPHP4.dll"
    Init fn=php4_init errorString="Failed to initialize PHP!"

    &lt;object name="default"&gt;
    . 
    . 
    . 
    .#NOTE this next line should happen after all 'ObjectType' and before all 'AddLog' lines 
    Service fn="php4_execute" type="magnus-internal/x-httpd-php" 
    . 
    . 
    &lt;/Object&gt;


    &lt;Object name="x-httpd-php"&gt; 
    ObjectType fn="force-type" type="magnus-internal/x-httpd-php" 
    Service fn=php4_execute 
    &lt;/Object&gt; 


    Authentication configuration 

    PHP authentication cannot be used with any other authentication. ALL AUTHENTICATION IS 
    PASSED TO YOUR PHP SCRIPT. To configure PHP Authentication for the entire server, add 
    the following line: 

    &lt;Object name="default"&gt; 
    AuthTrans fn=php4_auth_trans 
    . 
    . 
    . 
    . 
    &lt;/Object&gt; 

    To use PHP Authentication on a single directory, add the following: 

    &lt;Object ppath="d:\path\to\authenticated\dir\*"&gt; 
    AuthTrans fn=php4_auth_trans 
    &lt;/Object&gt;
     </programlisting>
    </example>
    <para>If you are running Netscape Enterprise 4.x, then you should use the following:</para>
    <example>
     <title>Configuration Example for Netscape Enterprise 4.x</title>
     <programlisting>
Place these lines after the mime types init, and everything else is similar
to the example configuration above.
From: Graeme Hoose (GraemeHoose@BrightStation.com)

Init fn="load-modules" shlib="/path/to/server4/bin/libphp4.so" funcs="php4_init,php4_close,php4_execute,php4_auth_trans"
Init fn="php4_init" LateInit="yes"
     </programlisting>
    </example>
  </sect1>

  <sect1 id="install.omnihttpd">
   <title>Servers-OmniHTTPd Server</title>
   <para>
    This section contains notes and hints specific to OmniHTTPd.
   </para>
   <sect2 id="install.omnihttpd.windows">
    <title>OmniHTTPd 2.0b1 and up for Windows</title>
    
    <simpara>
     This has got to be the easiest config there is:
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <para>
        Step 1: Install OmniHTTPd server.
       </para>
      </listitem>
      <listitem>
       <para>
        Step 2: Right click on the blue OmniHTTPd icon in the system
        tray and select <literal>Properties</literal>
       </para>
      </listitem>
      <listitem>
       <para>
        Step 3: Click on <literal>Web Server Global Settings</literal>
       </para>
      </listitem>
      <listitem>
       <para>
        Step 4: On the 'External' tab, enter: <literal>virtual = .php
         | actual = c:\path-to-php-dir\php.exe</literal>, and use the Add
         button.
       </para>
      </listitem>
      <listitem>
       <para>
        Step 5: On the <literal>Mime</literal> tab, enter:
        <literal>virtual = wwwserver/stdcgi | actual = .php</literal>,
        and use the Add button.
       </para>
      </listitem>
      <listitem>
       <para>
        Step 6: Click <literal>OK</literal>
       </para>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     Repeat steps 2 - 6 for each extension you want to associate with PHP.
    </simpara>
    <note>
     <para>
      Some OmniHTTPd packages come with built in PHP support.
      You can choose at setup time to do a custom setup, and
      uncheck the PHP component. We recommend you to use the latest
      PHP binaries. Some OmniHTTPd servers come with PHP 4 beta
      distributions, so you should choose not to set up
      the built in support, but install your own. If the server
      is already on your machine, use the Replace button in Step
      4 and 5 to set the new, correct information.
     </para>
    </note>
   </sect2>
  </sect1>

  <sect1 id="install.oreilly">
   <title>Servers-Oreilly Website Pro</title>
   <para>
    This section contains notes and hints specific to Oreilly
    Website Pro.
   </para>
   <sect2 id="install.oreilly.windows">
    <title>Oreilly Website Pro 2.5 and up for Windows</title>
    
    <simpara>
     This list describes how to set up the PHP CGI binary
     or the ISAPI module to work with Oreilly Website Pro
     on Windows.
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <para>
        Edit the Server Properties and select the tab "Mapping".
       </para>
      </listitem>
      <listitem>
       <para>
        From the List select "Associations" and enter the desired
        extension (".php") and the path to the CGI exe
        (ex. c:\php\php.exe) or the ISAPI dll file
        (ex. c:\php\sapi\php4isapi.dll).
       </para>
      </listitem>
      <listitem>
       <para>
        Select "Content Types" add the same extension ".php"
        and enter the content type. If you choose the CGI exe
        file, enter 'wwwserver/shellcgi', if you chosse the
        ISAPI module, enter 'wwwserver/isapi' (both without
        quotes).
       </para>
      </listitem>
     </itemizedlist>
    </para>
   </sect2>
  </sect1>

  <sect1 id="install.xitami">
   <title>Servers-Xitami</title>
   <para>
    This section contains notes and hints specific to Xitami.
   </para>
   <sect2 id="install.xitami.windows">
    <title>Xitami for Windows</title>
    
    <simpara>
     This list describes how to set up the PHP CGI binary
     to work with Xitami on Windows.
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <para>
        Make sure the webserver is running, and point
        your browser to xitamis admin console
        (usually http://127.0.0.1/admin), and click on
        Configuration.
       </para>
      </listitem>
      <listitem>
       <para>
        Navigate to the Filters, and put the
        extension which php should parse (i.e. .php)
        into the field File extensions (.xxx).
       </para>
      </listitem>
      <listitem>
       <para>
        In Filter command or script put the path and name
        of your php executable i.e. c:\php\php.exe.
       </para>
      </listitem>
      <listitem>
       <para>
        Press the 'Save' icon.
       </para>
      </listitem>
     </itemizedlist>
    </para>
   </sect2>
  </sect1>
  
  <sect1 id="install.otherhttpd">
   <title>Servers-Other web servers</title>
   <para>
    PHP can be built to support a large number of web servers. Please
    see <link linkend="install.configure.servers">Server-related
    options</link> for a full list of server-related configure
    options. The PHP CGI binaries are compatible with almost all
    webservers supporting the CGI interface.
   </para>
  </sect1>

  <sect1 id="install-problems">
   <title>Problems?</title>

   <sect2>
    <title>Read the FAQ</title>
    <simpara>
     Some problems are more common than others.  The most common ones
     are listed in the PHP FAQ, found at <ulink
      url="&url.php.faq;">&url.php.faq;</ulink>
    </simpara>
   </sect2>

   <sect2 id="install.otherproblems">
    <title>Other problems</title>

    <simpara>
     If you are still stuck, someone on the PHP installation mailing list may be
     able to help you. You should check out the archive first, in case
     someone already answered someone else who had the same problem as
     you. The archives are available from the support page on <ulink
      url="&url.php;">&url.php;</ulink>.  To subscribe to the PHP installation
     mailing list, send an empty mail to <ulink
      url="mailto:&email.php.install.subscribe;">&email.php.install.subscribe;</ulink>.
     The mailing list address is
     <literal>&email.php.install;</literal>.
    </simpara>
    <simpara>
     If you want to get help on the mailing list, please try to be
     precise and give the necessary details about your environment
     (which operating system, what PHP version, what web server, if
     you are running PHP as CGI or a server module, etc.), and
     preferably enough code to make others able to reproduce and test
     your problem.
    </simpara>
   </sect2>

   <sect2 id="install.bugreports">
    <title>Bug reports</title>
    <simpara>
     If you think you have found a bug in PHP, please report it.  The
     PHP developers probably don't know about it, and unless you
     report it, chances are it won't be fixed. You can report bugs
     using the bug-tracking system at <ulink
      url="&url.php.bugs;">&url.php.bugs;</ulink>.
    </simpara>
    <simpara>
     Read the <ulink 
      url="&url.php.bugdosdonts;">Bugs-Dos-And-Donts</ulink> 
     before submitting any bug reports!
    </simpara>
   </sect2>

  </sect1>

 </chapter>

 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->
