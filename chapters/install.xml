 <chapter id="installation">
  <title>Installation</title>

  <sect1 id="install.downloading">
   <title>Download der aktuellsten Version</title>
   <simpara>
    Den Quellcode sowie die Binärdistributionen für die verschiedenen
    Plattformen (inklusive Windows) erhalten Sie unter <literal><ulink
    url="&url.php;">&url.php;</ulink></literal>.
   </simpara>
  </sect1>

  <sect1 id="install.unix">
   <title>Installation auf UNIX Systemen</title>

   <para>
    Dieser Abschnitt wird Sie durch die Konfiguration und Installation
    von PHP führen. Erforderliche Kenntnisse und Software:
    <itemizedlist>
     <listitem>
      <simpara>
       Grundlegende UNIX-Kenntnisse (Sie sollten in der Lage sein mit
       der make-Anweisung und einem C-Compiler umzugehen)
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       Einen ANSI C compiler
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Einen Web Server
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   
   <sect2>
    <title>"Quick Installation"- Anleitung (Apache Modul Version)</title>

    <para>
     <informalexample>
      <programlisting>
1.  gunzip apache_1.3.x.tar.gz
2.  tar xvf apache_1.3.x.tar
3.  gunzip php-3.0.x.tar.gz
4.  tar xvf php-3.0.x.tar
5.  cd apache_1.3.x
6.  ./configure --prefix=/www
7.  cd ../php-3.0.x
8.  ./configure --with-mysql --with-apache=../apache_1.3.x --enable-track-vars
9.  make
10. make install
11. cd ../apache_1.3.x
12. ./configure --prefix=/www --activate-module=src/modules/php3/libphp3.a
13. make
14. make install

  Sie können aber auch alternativ zu oben beschriebenen Schritt
  einfach die httpd binary auf Ihre existierende Binary übertragen In
  jedem Fall sollte darauf geachtet werden, den Server vorher
  herunterzufahren.
  
15. cd ../php-3.0.x
16. cp php3.ini-dist /usr/local/lib/php3.ini

  Sie können nun die php.ini unter /usr/local/lib/php3.ini editieren,
  um Ihre gewünschten PHP-Optionen einzustellen. Wenn Sie die php.ini
  lieber in einem anderen Verzeichnis haben möchten, dann sollten Sie
  Sie in Schritt 8 --with-config-file-path=/path angeben.

17. Editieren Sie nun Ihre httpd.conf or srm.conf folgendermassen: 
      
            AddType application/x-httpd-php3 .php3
 
    Es bleibt Ihnen völlig freigestellt, welche File-Extension Sie
    hier benutzen. ".php3" wird von uns lediglich empfohlen.

18. Starten Sie den Apache Web Server. Sie müssen den Server starten
    und beenden, ein einfacher Reload mittels des HUP oder USR1
    Signales ist nicht ausreichend.
      </programlisting>
     </informalexample>
    </para>

   </sect2>
 
   <sect2>
    <title>Konfiguration</title>
    <para>
     Es gibt zwei Möglichkeiten PHP zu konfigurieren.
     
     <itemizedlist>
      <listitem>
       <para>
        Sie können das mitgelieferte "Setup"- Skript von PHP benutzen.
        Dieses Skript wird Ihnen eine handvoll Fragen stellen (ähnlich
        dem "Install"- Skript von PHP/FI 2.0) und am Ende "configure"
        ausführen. Um dieses Skript auszuführen, geben Sie
        <command>./setup</command> ein.
       </para>
       <para>
	Dieses Skript wird zusätzlich eine Datei namens "do-conf"
	erstellen, welches die Konfigurations-Optionen enthält, die
	"configure" übermittelt wurden. Um später noch änderungen in
	der Konfiguration vorzunehmen, können Sie einfach diese Datei
	editieren, ohne ein erneutes Setup ausführen zu müssen. Geben
	Sie hierzu <command>./do-conf</command> ein, um PHP mit den
	neuen Optionen zu konfigurieren.
       </para>
      </listitem>
      <listitem>
       <para>
	Die Alternative ist "configure" manuell auszuführen. Um zu
	sehen, welche Optionen "configure" bietet, geben Sie
	<command>./configure --help</command> ein.
       </para>
      </listitem>
     </itemizedlist></para>
     
    <para>
     Details über einige der verschiedenen Konfiguratrions- Optionen
     sind weiter unten aufgeführt.
    </para>
   </sect2>

   <sect2 id="with-apache">
    <title>Apache Modul</title>

    <para>
     Um PHP als Modul in den Apache einzukompilieren, antworten Sie
     bitte "yes" auf die Frage  "Build as an Apache module?" (die
     <option><link linkend="with-apache">
     --with-apache</link>=<replaceable>DIR</replaceable></option>
     option zu konfigurieren) und geben Sie das Stammverzeichnis der
     Apache Distribution an. Wenn Sie also die Apache Distribution in
     <filename
     class="directory">/usr/local/www/apache_1.2.4</filename>, entpackt
     haben, dann ist dieses Ihr Stammverzeichnis.
     Das Standart-Stammverzeichnis ist <filename
     class="directory">/usr/local/etc/httpd</filename>.
    </para>
   </sect2>

   <sect2 id="with-fhttpd">
    <title>fhttpd Module</title>

    <para>
     Um PHP als fhttpd Modul in den Apache einzukompilieren, antworten
     Sie "yes" auf die Frage "Build as an fhttpd module?" (die <option>
     <link linkend="with-fhttpd"> --with-fhttpd</link>=<replaceable>DIR
     </replaceable></option> Option zu konfigurieren) und geben Sie das
     fhttpd source Stammverzeichnis an.
     Das Standartverzeichnis ist
     <filename class="directory">/usr/local/src/fhttpd</filename>.
     Wenn Sie fhttpd benutzen, wird PHP als Modul performanter und
     besser kontrollierbar und besitzt mehr Fähigkeiten zur 
     Remote-Ausführung.
    </para>
   </sect2>
     
   <sect2 id="install-cgi">
    <title>CGI version</title>

    <para>
     Standartmäßig wird PHP als CGI-Programm installiert. Wenn Sie einen
     Webserver betreiben, auf dem PHP Module unterstützt werden, dann
     sollten Sie diese Variante aus Performancegründen den Vorzug geben.
     Wie auch immer, die CGI-Variante erlaubt es dem Apache Benutzer,
     verschiedene PHP-unterstützte Seiten unter verschiedenen Benutzer
     ID's zu ermöglichen. Sie sollten jedoch daran denken, sich mit
     den Sicherheitseinstellungen im <link linkend="security">Security
     chapter</link> vertraut zu machen, wenn Sie PHP in der CGI -
     Variante einsetzen wollen.
    </para>
   </sect2>

   <sect2>
    <title>Database Support Options</title>

    <para>
     PHP unterstützt von Haus aus eine große Anzahl an Datenbanken
     (wie auch ODBC):
    </para>

    <sect3 id="with-adabas">
     <title>Adabas D</title>
     <synopsis>
      <option>--with-adabas<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Kompiliert mit Adabas D Unterstützung. Parameter sind das
      Adabas D Installations-Verzeichnis. Standartmäßig ist
      dieses auf <filename class="directory">/usr/local/adabasd</filename>
      gesetzt.
     </simpara>
     <simpara>
      <ulink url="&url.adabas;">Adabas home page</ulink>
     </simpara>
    </sect3>
    
    <sect3 id="with-dbase">
     <title>dBase</title>
     <synopsis>
      <option>--with-dbase</option>
     </synopsis>
     <simpara>
      Schaltet die Unterstützung für DBase ein. Externe Bibliotheken
      werden nicht benötigt.
     </simpara>
    </sect3>

    <sect3 id="with-filepro">
     <title>filePro</title>
     <synopsis>
      <option>--with-filepro</option>
     </synopsis>
     <simpara>
      Schaltet die Unterstützung für FilePro ein. Nur Lese- Unterstützung.
      Externe Bibliotheken werden nicht benötigt.
     </simpara>
    </sect3>

    <sect3 id="with-msql">
     <title>mSQL</title>
     <synopsis>
      <option>--with-msql<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Schaltet die Unterstützung für mSQL-Datenbanken ein. Das Parameter
      für diese Option ist das mSQL-Installations-Verzeichnis, 
      standartmäßig unter <filename class="directory">/usr/local/Hughes
      </filename>.
      Dieses ist das Standartverzeichnis der mSQL2.0 Distribution.
      <command>configure</command> erkennt automatisch die Version von
      Ihrem mSQL, PHP unterstützt sowohl Version 1.0 wie auch 2.0 .
      Wenn Sie PHP mit mSQL 1.0 kompilieren, können Sie aber auch nur
      auf mSQL 1.0 zugreifen und vica versa.
     </simpara>
     <simpara>
      See also <link linkend="ini.sect.msql">mSQL Configuration</link>
      Directives in the <link
      linkend="configuration.file">configuration file</link>.
     </simpara>
     <simpara>
      <ulink url="&url.msql;">mSQL home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-mysql">
     <title>MySQL</title>
     <synopsis>
      <option>--with-mysql<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert die die MySQL-Unterstützung. Als Parameter kann bei
      dieser Option das MySQL-Installationsverzeichnis angegeben 
      werden. Standartmäßig ist dieses auf <filename class="directory">
      /usr/local</filename> gesetzt.
     </simpara>
     <simpara>
      Siehe auch: <link linkend="ini.sect.mysql">MySQL
      Konfiguration</link> Direktiven in der <link
      linkend="configuration.file">Konfigurations-
      Datei</link>.
     </simpara>
     <simpara>
      <ulink url="&url.mysql;">MySQL home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-iodbc">
     <title>iODBC</title>
     <synopsis>
      <option>--with-iodbc<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert die iODBC-Unterstützung. Dieses Merkmal wurde erstmals
      für den iODBC-Treiber-Manager entwickelt, ein frei verteilbarer
      ODBC-Treiber-Manager, der unter vielen UNIX-Derivaten läuft. Als
      Parameter zu dieser Option kann das iODBC-Installations-Verzeichnis
      angegeben werden. Standartmäßig ist dieses auf <filename class="directory">
      /usr/local</filename> gesetzt.
     </simpara>
     <simpara>
      <ulink url="&url.freeodbc;">FreeODBChome page</ulink> 
      or <ulink url="&url.iodbc;">iODBC home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-openlink">
     <title>OpenLink ODBC</title>
     <synopsis>
      <option>--with-openlink<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert die OpenLink ODBC-Unterstützung. Als Parameter
      kann bei dieser Option das OpenLink ODBC Installations-Verzeichnis
      angegeben werden. Standartmäßig ist dieses auf <filename class="directory">
      /usr/local/openlink</filename> gesetzt.
     </simpara>
     <simpara>
      <ulink url="&url.openlink;">OpenLink Software's home
      page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-oracle">
     <title>Oracle</title>
     <synopsis>
      <option>--with-oracle<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert die Oracle-Unterstützung. Diese Option wurde getestet,
      und sollte zumindest mit den Orcale-Versionen 7.0 bis 7.3 laufen.
      Als Parameter kann das <envar>ORACLE_HOME</envar> Verzeichnis angegeben
      werden. Sie müssen diesen Parameter aber nicht angeben, wenn die
      Oracle-Umgebung gesetzt wurde.
     </simpara>
     <simpara>
      <ulink url="&url.oracle;">Oracle home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-pgsql">
     <title>PostgreSQL</title>
     <synopsis>
      <option>--with-pgsql<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert die PostgresSQL-Unterstützung. Als Parameter
      kann bei dieser Option das PostgresSQL- Basisinstallationsverzeichnis
      angegeben werden. Standartmäßig ist dieses auf <filename class="directory">
      /usr/local/pgsql</filename> gesetzt.
     </simpara>
     <simpara>
      Siehe auch: <link linkend="ini.sect.pgsql">Postgres
      Konfiguration</link> Direkiven in der <link
      linkend="configuration.file">Konfigurations- Datei</link>.
     </simpara>
     <simpara>
      <ulink url="&url.pgsql;">PostgreSQL home
      page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-solid">
     <title>Solid</title>
     <synopsis>
      <option>--with-solid<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert Solid-Unterstützung. Als Parameter kann das Solid
      Installationsverzeichnis angegeben werden. Standartmäßig ist
      dieses auf <filename class="directory">/usr/local/solid</filename>
      gesetzt.
     </simpara>
     <simpara>
      <ulink url="&url.solid;">Solid home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-sybase">
     <title>Sybase</title>
     <synopsis>
      <option>--with-sybase<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert Sybase-Unterstützung. Als Parameter kann das Sybase
      Installationsverzeichnis angegeben werden. Standartmäßig ist 
      dieses auf <filename class="directory">/home/sybase</filename>
      gesetzt.
     </simpara>
     <simpara>
      Siehe auch: <link linkend="ini.sect.sybase">Sybase
      Konfiguration</link> Direktives in der <link
      linkend="configuration.file">Konfigurations- Datei</link>.
     </simpara>
     <simpara>
      <ulink url="&url.sybase;">Sybase home page</ulink>
     </simpara>
    </sect3>

    <sect3 id="with-sybase-ct">
     <title>Sybase-CT</title>
     <synopsis>
      <option>--with-sybase-ct<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert Sybase-CT Unterstützung. Als Parameter kann das
      Sybase-CT Installationsverzeichnis angegeben werden. 
      Standartmäßig ist dieses auf <filename class="directory">/home/sybase</filename>
      gesetzt.
     </simpara>
     <simpara>
      See also <link linkend="ini.sect.sybct">Sybase-CT
      Configuration</link> Directives in the <link
      linkend="configuration.file">configuration file</link>.
     </simpara>
    </sect3>

    <sect3 id="with-velocis">
     <title>Velocis</title>
     <synopsis>
      <option>--with-velocis<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert Velocis Unterstützung. Als Parameter kann das
      Velocis Installationsverzeichnis angegeben werden. Standartmäßig
      ist dieses auf <filename class="directory">/usr/local/velocis</filename>
      gesetzt.
     </simpara>
     <simpara>
      <ulink url="&url.velocis;">Velocis home page</ulink></simpara>
    </sect3>

    <sect3 id="with-custom-odbc">
     <title>Eine benutzerdefinierte ODBC Bilbliothek</title>
     <synopsis>
      <option>--with-custom-odbc<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert Unterstützung für eine benutzerdefinierte ODBC-Bibliothek.
      Als Parameter kann das Basisverzeichnis angegeben werden.
      Standartmäßig ist dieses auf <filename class="directory">/usr/local</filename>
      gesetzt.
     </simpara>
     <simpara>
      Diese option verlangt, dass Sie zuvor eigene CUSTOM_ODBC_LIBS
      definiert haben, bevor Sie das Konfigurationsskript starten.
      Ebenfalls müssen Sie einen gültiger odbc.h Header irgendwo
      in in Ihrem Include-Pfad haben. Wenn Sie keinen haben, erstellen
      Sie ihn  und schließen Sie diesen spezifischen Header mit ein.
      Ihr Header mag auch einige extra- Definitionen verlangen, besonders
      wenn es sich um eine Mehrbenutzer-Plattform handelt. Definieren Sie
      diese in CFLAGS.
      
     </simpara>
     <simpara>
      Zum Beipspiel können Sie Sybase SQL überall auf QNX wie folgt
      benutzen:
     
      <literal>
       CFLAGS=-DODBC_QNX LDFLAGS=-lunix CUSTOM_ODBC_LIBS="-ldblib
       -lodbc" ./configure --with-custom-odbc=/usr/lib/sqlany50
      </literal>
     </simpara>
    </sect3>

    <sect3 id="disable-unified-odbc">
     <title>Unified ODBC</title>
     <synopsis>
      <option>--disable-unified-odbc</option>
     </synopsis>
     <simpara>
      Deaktiviert das "Unfified ODBC Modul", bei welchem es sich um
      ein  allgemeines Interface für Datenbanken mit ODBC-Interfaces
      handelt (z.B. für Solid und Adabas D). Es arbeitet auch mit
      normalen ODBC-Bibliotheken zusammen. Es wurde getestet mit
      iODBC, Solid, Adabas D und Sybase SQL. Hierbei ist es erforderlich,
      dass eines (nur eines) dieser Module oder das Velocis Modul
      aktiviert sind, oder eine benutzerdefinierte ODBC-Bibliothek
      spzifiziert ist. 
      Diese Option steht nur zur Verfügung, wenn eine der folgenden
	  Parameter verwendet wurden:
	  <link linkend="with-iodbc">--with-iodbc</link>,
	  <link linkend="with-solid">--with-solid</link>,
	  <link linkend="with-adabas">--with-adabas</link>, 
	  <link linkend="with-velocis">--with-velocis</link>,
	  or <link linkend="with-adabas">--with-custom-odbc</link>.
     </simpara>
     <simpara>
      Siehe auch: <link linkend="ini.sect.uodbc">Unified ODBC
      Konfiguration</link> Direktiven in der <link
      linkend="configuration.file">Konfigurations
      Datei</link>.
     </simpara>
    </sect3>

    <sect3 id="with-ldap">
     <title>LDAP</title>
     <synopsis>
      <option>--with-ldap<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Aktiviert die <acronym>LDAP</acronym> (Lightweight Directory Access
      Protocol)Unterstützung. Als Parameter kann das LDAP Standart
      Installationsverzeichnis angegeben werden, welches standartmäßig
      auf <filename class="directory">/usr/local/ldap</filename> gesetzt
      ist.
     </simpara>
     <simpara>
      Zusätzliche Informationen zu LDAP sind unter <ulink
      url="&url.rfc;rfc1777.html">RFC1777</ulink> und
      <ulink
      url="&url.rfc;rfc1778.html">RFC1778</ulink>
      verfügbar.
     </simpara>
    </sect3>

   </sect2>

   <sect2>
    <title>Weitere Konfigurations-Optionen</title>

    <sect3 id="with-mcrypt">
     <title>--with-mcrypt<replaceable>=DIR</replaceable></title>
     <synopsis>
      <option>--with-mcrypt</option>
     </synopsis>
     <simpara>
      Aktiviert die Unterstützung für die mycrypt Bibliothek.
      Siehe auch <link linkend="ref.mcrypt">mcrypt Dokumentation</link>
      für weitere Informationen. Wenn Sie das optionale <replaceable>DIR</replaceable>
      Argument benutzen, wird PHP in <replaceable>DIR</replaceable>/include
      nach mycrypt.h suchen.
     </simpara>
    </sect3>
     
    <sect3 id="enable-sysvsem">
     <title>--enable-sysvsem</title>
     <synopsis>
      <option>--enable-sysvsem</option>
     </synopsis>
     <simpara>
      Aktiviert die Unterstützung für Sys V Semaphores (wird von den
      meisten UNIX-Derivaten unterstüzt). Siehe auch <link linkend="ref.sem">
      Semaphore und Shared Memory Dokumentation</link> für weitere Informationen.
     </simpara>
    </sect3>

    <sect3 id="enable-sysvshm">
     <title>--enable-sysvshm</title>
     <synopsis>
      <option>--enable-sysvshm</option>
     </synopsis>
     <simpara>
      Aktiviert die Unterstützung für Sys V Shared Memory (wird von den meisten
      UNIX-Derivaten unterstützt). Siehe auch <link linkend="ref.sem">
      Semaphore und Shared Memory Dokumentation</link> für weitere Informationen.
     </simpara>
    </sect3>

    <sect3 id="with-xml">
     <title>--with-xml</title>
     <synopsis>
      <option>--with-xml</option>
     </synopsis>
     <simpara>
      Aktiviert die Unterstützung für einen "nicht-validierenden" XML-Parser
      auf Basis von James Clarks's <ulink url="&url.expat;">expat library</ulink>.
      Siehe auch <link linkend="ref.xml">XML Funktions-Referenz</link> für mehr
      Details.
     </simpara>
    </sect3>

    <sect3 id="enable-maintainer-mode">
     <title>--enable-maintainer-mode</title>
     <synopsis>
      <option>--enable-maintainer-mode</option>
     </synopsis>
     <simpara>
      Aktiviert Extra- Dependenzen und Compiler Warnungen, welche
      von einigen PHP Entwicklern benutzt werden.
     </simpara>
    </sect3>

    <sect3 id="with-system-regex">
     <title>--with-system-regex</title>
     <synopsis>
      <option>--with-system-regex</option>
     </synopsis>
     <simpara>
      Benutzt mehr die System Bibliothek für Regular Expression als
      als die gebündelte. Wenn Sie PHP als Servermodul benutzten,
      müssen Sie die gleiche Bibliothek bei der Installtion von
      PHP wie beim Linking des Servers verwenden. Aktivieren Sie diese
      Option, wenn die System-Bibliothek Features beinhaltet, die Sie
      unbedingt benötigen. Es wird jedoch empfohlen, die beiliegende
      Bibliothek wenn möglich zu benutzen.  
     </simpara>
    </sect3>

    <sect3 id="with-config-file-path">
     <title>--with-config-file-path</title>
     <synopsis>
      <option>--with-config-file-path=DIR</option>
     </synopsis>
     <simpara>
      Mit dieser Option kann das Verzeichnis angegeben werden, in dem
      PHP nach der PHP.INI (<link linkend="configuration.file">Die
      Konfigurations Datei</link>) sucht, wenn PHP gestartet wird.
     </simpara>
    </sect3>

    <sect3 id="with-exec-dir">
     <title>--with-exec-dir</title>
     <synopsis>
      <option>--with-exec-dir<replaceable>=DIR</replaceable></option>
     </synopsis>
     <simpara>
      Erlaubt die Ausführung von ausführbaren Dateien in einem Verzeichnis
      nur, wenn PHP im safe mode betrieben wird. Standartmäßig ist
      dieses Verzeichnis <filename class="directory">/usr/local/bin</filename>.
      Diese Option setzt den Pfad nur auf den Standartwert. Wenn dieser
      geändert werden soll, kann dieses mit der <link linkend="ini.safe-mode-exec-dir">
      safe_mode_exec_dir</link> Direktive in der <link linkend="configuration.file">
      Konfigurations Datei</link> später geändert werden.
     </simpara>
    </sect3>

    <sect3 id="enable-debug">
     <title>--enable-debug</title>
     <synopsis>
      <option>--enable-debug</option>
     </synopsis>
     <simpara>
      Aktiviert extra debug Informationen. Dieses ermöglicht es, genauere
      Informationen zu erhalten, wenn Probleme mit PHP auftreten.
      (Bedenken Sie, dass diese Option nichts mit Debugger-Fähigkeiten
      oder Informationen, die zu PHP-Skripten erhätlich sind, zu tun hat).
      
     </simpara>
    </sect3>

    <sect3 id="enable-safe-mode">
     <title>--enable-safe-mode</title>
     <synopsis>
      <option>--enable-safe-mode</option>
     </synopsis>
     <simpara>
      Aktiviert "safe mode" standartmäßig. Diese Option zieht einige
      Restriktionen betreffend den Möglichkeiten von PHP nach sich, so z.B.
      das Öffnen von Dateien nur im DocumentRoot zu erlauben. Lesen Sie auch <link
      linkend="security">Security chapter</link> für weitergehende
      Informationen. CGI-Benutzer sollten "safe mode" immer aktivieren.
      Diese Option setzt nur die standartmäßige Behandlung von PHP. Sie
      kann später per <link linkend="ini.safe-mode">safe_mode</link>
      Direktive in der <link linkend="configuration.file">Konfigurations Datei
      </link> geändert werden.
     </simpara>
    </sect3>

    <sect3 id="enable-track-vars">
     <title>--enable-track-vars</title>
     <synopsis>
      <option>--enable-track-vars</option>
     </synopsis>
     <simpara>
      Aktiviert PHP_TRACK_VARS. Ermöglicht PHP zu verfolgen, von wo
      GET/POST/COOKIES Variablen in den Arrays HTTP_GET_VARS, HTTP_POST_VARS
      und HTTP_COOKIE_VARS kommen. Diese Option setzt lediglich den 
      Standartwert, welcher später mit der <link linkend="ini.track-vars">
      track_vars</link> Direktive in der <link linkend="configuration.file">
      Konfigurations Datei</link> aktiviert bzw. deaktiviert werden kann.
     </simpara>
    </sect3>

    <sect3 id="enable-magic-quotes">
     <title>--enable-magic-quotes</title>
     <synopsis>
      <option>--enable-magic-quotes</option>
     </synopsis>
     <simpara>
      Aktiviert magic quotes. Diese Option setzt nur einen Standartwert.
      Die Option kann später mit der <link linkend="ini.magic-quotes-runtime">
      magic_quotes_runtime</link>  Direktive in der <link
      linkend="configuration.file">Konfigurations Datei</link>
      aktiviert bzw. deaktiviert werden. Siehe auch die <link linkend="ini.magic-quotes-gpc">
      magic_quotes_gpc</link> und die <link
      linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>
      Direktiven.
     </simpara>
    </sect3>

    <sect3 id="enable-debugger">
     <title>--enable-debugger</title>
     <synopsis>
      <option>--enable-debugger</option>
     </synopsis>
     <simpara>
      Aktiviert die interne PHP Debugger Unterstützung. Dieses Merkmal
      ist immer noch im Experimentier- Stadium. Siehe auch  <link
      linkend="ini.sect.debugger">Debugger Konfiguration</link>
      Direktiven in der <link
      linkend="configuration.file">Konfigurationsdatei</link>.
     </simpara>
    </sect3>

    <sect3 id="enable-discard-path">
     <title>--enable-discard-path</title>
     <synopsis>
      <option>--enable-discard-path</option>
     </synopsis>
     <simpara>
      Wenn diese Option aktiviert ist, kann die PHP CGI-Binär-Datei
      sicher ausserhalb des Web-Verzeichnisses plaziert werden,
      und niemand wird .htaccess-Sicherheit umgehen können. Lesen
      Sie die <link linkend="security.cgi.shell"> Sektion im 
      Sicherheitskapitel</link> über diese Option.
     </simpara>
    </sect3>

    <sect3 id="enable-bcmath">
     <title>--enable-bcmath</title>
     <synopsis>
      <option>--enable-bcmath</option>
     </synopsis>
     <simpara>
      Aktiviert <command>bc</command> mathematische Funktionen zur
      Präzesion. Siehe auch <link linkend="ini.sect.bcmath">bcmath.scale
      </link> Option in der <link linkend="configuration.file">
      Konfigurationsdatei</link>.
     </simpara>
    </sect3>

    <sect3 id="enable-force-cgi-redirect">
     <title>--enable-force-cgi-redirect</title>
     <synopsis>
      <option>--enable-force-cgi-redirect</option>
     </synopsis>
     <simpara>
      Aktiviert den Sicherheits-Check für interne Server-Redirects.
      Sie sollten dieses Option aktivieren, wenn Sie die CGI-Version
      mit dem Apache benutzen.
     </simpara>
     <simpara>
      Wenn Sie PHP als CGI Binärdatei benutzen, überprüft PHP selber
      zuerst immer, ob es als Redirekt benutzt wird (z.B. unter Apache
      mittels Action Direktiven). Dieses stellt sicher, dass PHP
      in dieser Variante nicht missbraucht werden kann, um  
      Authentifizierungsmodelle des Webservers über direkte Aufrufe wie
      <filename role="url">http://my.host/cgi-bin/php/secret/doc.html</filename>
      zu umgehen. Dieses Beispiel greift zwar auf <filename
      role="url">http://my.host/secret/doc.html</filename> zu, aber berücksichtigt
      keine Sicherheitseinstellungen die durch die Directory-Einstellungen
      <filename role="dir">/secret</filename> in der httpd gesetzt wurden.
     </simpara>
     <simpara>
      Wenn Sie diese option nicht aktivieren, erlauben Sie das Umgehen
      von httpd Sicherheits- und Authentifizierungs- Einstellungen.
      Tun Sie dieses nur, wenn Ihre Serversoftware nicht fähig ist, 
      zu erkennen, ob ein sicherer Redirect erfolgt ist und alle ihre Dateien
      unterhalb des Document- Root und Benutzer-Verzeichnisse für jedermann
      zugänglich sein sollen / können.
     
     </simpara>
     <simpara>
      Lesen Sie die <link linkend="security.cgi.force-redirect"> Sektion im
      Sicherheits-Kapitel</link> um mehr über diese option zu erfahren.
     </simpara>
    </sect3>

    <sect3 id="disable-short-tags">
     <title>--disable-short-tags</title>
     <synopsis>
      <option>--disable-short-tags</option>
     </synopsis>
     <simpara>
      Deaktiviert die Kurzform <literal>&lt;? ?&gt;</literal> PHP Tags.
      Sie müssen diese Option deaktivieren, wenn Sie PHP im Zusammanhang
      mit <acronym>XML</acronym> benutzen wollen. 
      Wenn Sie die Kurzform deaktiviert haben, ist die einzige gültige
      Syntax für PHP-Code-Tags <literal>&lt;?php ?&gt;</literal>.
      Diese Option setzt nur den Standartwert. Die Option kann später
      in der <link linkend="ini.short-open-tag">short_open_tag</link> Direktive
      in der <link linkend="configuration.file">Konfigurationsdatei</link>
      geändert werden.
     </simpara>
    </sect3>

    <sect3 id="enable-url-includes">
     <title>--enable-url-includes</title>
     <synopsis>
      <option>--enable-url-includes</option>
     </synopsis>
     <simpara>
      Erlaubt es, Programme direkt von anderen HTTP- oder FTP- Servern
      mittels <link linkend="function.include">include()</link> laufen zu
      lassen. Siehe auch <link linkend="ini.include-path">include_path</link>
      Option in der <link linkend="configuration.file">Konfigurationsdatei</link>.
     </simpara>
    </sect3>

    <sect3 id="disable-syntax-hl">
     <title>--disable-syntax-hl</title>
     <synopsis>
      <option>--disable-syntax-hl</option>
     </synopsis>
     <simpara>
      Deaktiviert Syntax-Highlighting.
     </simpara>
    </sect3>

    <sect3>
     <title>CPPFLAGS and LDFLAGS</title>
     <para>
      Um die PHP-Installation dazu zu veranlassen in verschiedenen
      Verzeichnissen für Header unf Bibliotheken zu suchen, modifizieren
      Sie die <envar>CPPFLAGS</envar> und <envar>LDFLAGS</envar> 
      Umgebungsvariablen. Wenn Sie eine sensible shell benutzen, sollte
      es möglich sein folgendes zu tun:
      <command>
       LDFLAGS=-L/my/lib/dir CPPFLAGS=-I/my/include/dir ./configure
      </command>
     </para>
    </sect3>

   </sect2>


   <sect2>
    <title>Building</title>
    <simpara>
     Wenn PHP fertig konfiguriert ist, können Sie die CGI-ausführbare Datei
     oder PHP-Bibliothek gerstellen. Das Kommando <command>make</command>
     sollte das für Sie erledigen. Wenn dieser Weg fehlschlägt, und Sie nicht 
     herausfinden können warum, schauen Sie hier nach <link linkend="install-problems">
     Problem- Sektion</link>.
    </simpara>

   </sect2>

   <sect2>
    <title>Testing</title>
    <simpara>
     Wenn Sie PHP als CGI-Programm gergestellt haben, können Sie das
     Programm mit <command>make test</command> testen. Es ist immer
     eine gute Idee, Ihr Programm zu testen. So können Sie ein Problem
     möglicherweise früher erkennen und beseitigen.
    </simpara>
   </sect2>

   <sect2>
    <title>Benchmarking</title>
    <simpara>
     Wenn Sie PHP als CGI-Programm hergestellt haben, können Sie
     mit  <command>make bench</command> ein Benchmark Test machen.
     Bedenken Sie, dass wenn der safe_mode standartmäßig aktiviert
     wurde, es sein kann, dass der Benchmark nicht fähig ist, den
     Benchmark zu vollenden, wenn der Vorgang länger als 30 Sekunden
     (die erlaubt sind) dauert. Dieses kommt daher, weil die Funktion
     <function>set_time_limit</function> im safe_mode nicht benutzt
     werden kann. Benutzten Sie die <link linkend="ini.max-execution-time">
     max_execution_time</link> Konfigurationseinstellungen um die Zeit
     für Ihre eigenen Skripte einzustellen. <command>make bench</command>
     ignoriert die <link linkend="configuration.file">Konfigurationsdatei</link>.
    </simpara>
   </sect2>

  </sect1>
<sect1 id="install.configure">
 <title>Complete list of configure options</title>
 <note>
  <para>
   These are only used at compile time. If you want to alter PHP's
   runtime configuration, please see the chapter on <link
   linkend="configuration">Configuration</link>.
  </para>
 </note>

 <para>
  The following is a complete list of options supported by the PHP 3
  and PHP 4 <filename>configure</filename> scripts, used when
  compiling in Unix-like environments. Some are available in PHP 3,
  some in PHP 4, and some in both, as noted. There are many options
  the names of which have changed between PHP 3 and PHP 4, but which
  accomplish the same things. These entries are cross-referenced to
  each other, so if you have a problem getting your PHP 3-era
  configuration options to work, check here to see whether the names
  have changed.
 </para>

 <itemizedlist>
  <listitem>
   <para>
    <link linkend="install.configure.databases">Database</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.ecommerce">Ecommerce</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.graphics">Graphics</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.misc">Miscellaneous</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.networking">Networking</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.php">PHP Behaviour</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.servers">Server</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.text">Text and language</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link linkend="install.configure.xml">XML</link>
   </para>
  </listitem>
 </itemizedlist>

 <sect2 id="install.configure.databases">
  <title>Database</title>
   <variablelist>

    <varlistentry id="install.configure.with-adabas">
     <term>
      <parameter>--with-adabas[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include Adabas D support. DIR is the Adabas base
       install directory, defaults to /usr/local.
      </para>
      <para>
       <ulink url="&url.adabas;">Adabas home page</ulink>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-dba">
     <term>
      <parameter>--enable-dba=shared</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Build DBA as a shared module
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-dbase">
     <term>
      <parameter>--enable-dbase</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available; use <link
       linkend="install.configure.with-dbase">--with-dbase</link>
       instead.
      </para>
      <para>
       PHP 4: Enable the bundled dbase library. No external libraries
       are required.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-dbase">
     <term>
      <parameter>--with-dbase</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Include the bundled dbase library. No external
       libraries are required.
      </para>
      <para>
       PHP 4: Option not available; use <link
       linkend="install.configure.enable-dbase">--enable-dbase</link>
       instead.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-db2">
     <term>
      <parameter>--with-db2[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include Berkeley DB2 support
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-db3">
     <term>
      <parameter>--with-db3[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Include Berkeley DB3 support
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-dbm">
     <term>
      <parameter>--with-dbm[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include DBM support
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-dbmaker">
     <term>
      <parameter>--with-dbmaker[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Include DBMaker support. DIR is the DBMaker base install
       directory, defaults to where the latest version of DBMaker is installed
       (such as /home/dbmaker/3.6).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-empress">
     <term>
      <parameter>--with-empress[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include Empress support. DIR is the Empress base install
       directory, defaults to $EMPRESSPATH
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-filepro">
     <term>
      <parameter>--enable-filepro</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available; use <link
       linkend="install.configure.with-filepro">--with-filepro</link>
       instead.
      </para>
      <para>
       PHP 4: Enable the bundled read-only filePro support. No
       external libraries are required.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-filepro">
     <term>
      <parameter>--with-filepro</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Include the bundled read-only filePro support. No
       external libraries are required.
      </para>
      <para>
       PHP 4: Option not available; use <link
       linkend="install.configure.enable-filepro">--enable-filepro</link>
       instead.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-fbsql">
     <term>
      <parameter>--with-fbsql[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available.
      </para>
      <para>
       PHP 4: Include FrontBase SQL support. DIR is the FrontBase base
       install directory, defaults to usual Frontbase install dir.
       Usual install dirs depends on your OS : 
       Solaris: <literal>/opt/FrontBase</literal>, 
       WinNT: <literal>\usr\FrontBase</literal>,
       Linux: <literal>/usr/frontbase</literal>,
       Mac OSX: <literal>/Library/FrontBase</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-gdbm">
     <term>
      <parameter>--with-gdbm[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include GDBM support
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-hyperwave">
     <term>
      <parameter>--with-hyperwave</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include Hyperwave support
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-ibm-db2">
     <term>
      <parameter>--with-ibm-db2[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include IBM DB2 support. DIR is the DB2 base
       install directory, defaults to
       <filename>/home/db2inst1/sqllib</filename>.
      </para>
      <para>
       <ulink url="&url.ibmdb2;">IBM DB2 home page</ulink>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-informix">
     <term>
      <parameter>--with-informix[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include Informix support. DIR is the Informix base install
       directory, defaults to nothing.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-ingres">
     <term>
      <parameter>--with-ingres[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Include Ingres II support. DIR is the Ingres base directory
       (default /II/ingres)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-interbase">
     <term>
      <parameter>--with-interbase[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include InterBase support. DIR is the InterBase base
       install directory, which defaults to <filename>/usr/interbase</filename>.
      </para>
      <simpara>
       <link linkend="ref.ibase">Interbase functions</link>
      </simpara>
      <simpara>
       <ulink url="&url.ibase;">Interbase home page</ulink>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-ldap">
     <term>
      <parameter>--with-ldap[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Include LDAP support. DIR is the LDAP base install
       directory.  Defaults to <filename>/usr</filename> and
      <filename>/usr/local</filename>
     </para>
     <para>
      PHP 4: Include LDAP support. DIR is the LDAP base install directory.
     </para>
      <simpara>
       This provides <acronym>LDAP</acronym> (Lightweight Directory Access
       Protocol support).  The parameter is the LDAP base install
       directory, defaults to <filename
       class="directory">/usr/local/ldap</filename>.
      </simpara>
      <simpara>
       More information about LDAP can be found in <ulink
       url="&url.rfc;rfc1777.html">RFC1777</ulink> and
       <ulink
       url="&url.rfc;rfc1778.html">RFC1778</ulink>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-msql">
     <term>
      <parameter>--with-msql[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Enables mSQL support.  The parameter to this
       option is the mSQL install directory and defaults to <filename
       class="directory">/usr/local/Hughes</filename>.  This is the
       default directory of the mSQL 2.0 distribution.
       <command>configure</command> automatically detects which mSQL
       version you are running and PHP supports both 1.0 and 2.0, but
       if you compile PHP with mSQL 1.0, you can only access mSQL 1.0
       databases, and vice-versa.
      </para>
      <simpara>
       See also <link linkend="ini.sect.msql">mSQL
       Configuration</link> Directives in the <link
       linkend="configuration.file">configuration file</link>.
      </simpara>
      <simpara>
       <ulink url="&url.msql;">mSQL home page</ulink>
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-mysql">
     <term>
      <parameter>--with-mysql[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Include MySQL support. DIR is the MySQL base install directory,
       defaults to searching through a number of common places for the MySQL
       files.
      </para>
      <para>
       PHP 4: Include MySQL support. DIR is the MySQL base directory. If
       unspecified, the bundled MySQL library will be used. This
       option is turned on by default.
      </para>
      <para>
       See also <link linkend="ini.sect.mysql">MySQL
       Configuration</link> Directives in the <link
       linkend="configuration.file">configuration file</link>.
      </para>
      <para>
       <ulink url="&url.mysql;">MySQL home page</ulink>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-ndbm">
     <term>
      <parameter>--with-ndbm[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include NDBM support
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-ovrimos">
     <term>
      <parameter>--with-ovrimos</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Include Ovrimos support.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-oci8">
     <term>
      <parameter>--with-oci8[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Include Oracle-oci8 support. Default DIR is ORACLE_HOME.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-oracle">
     <term>
      <parameter>--with-oracle[=DIR]</parameter>
     </term>
     <listitem>
     <para>
      PHP 3: Include Oracle database support. DIR is Oracle's home directory,
      defaults to $ORACLE_HOME.
     </para>
     <para>
      PHP 4: Include Oracle-oci7 support. Default DIR is ORACLE_HOME.
     </para>
     <simpara>
      Includes Oracle support.  Has been tested and should be
      working at least with Oracle versions 7.0 through 7.3.  The
      parameter is the <envar>ORACLE_HOME</envar> directory.  You do
      not have to specify this parameter if your Oracle environment
      has been set up.
     </simpara>
     <simpara>
      <ulink url="&url.oracle;">Oracle home page</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-pgsql">
    <term>
     <parameter>--with-pgsql[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Include PostgresSQL support. DIR is the PostgresSQL base
      install directory, which defaults to
      <filename>/usr/local/pgsql</filename>.
     </para>
     <para>
      PHP 4: Include PostgreSQL support. DIR is the PostgreSQL base
      install directory, which defaults to
      <filename>/usr/local/pgsql</filename>. Set DIR to shared to
      build as a dl, or shared,DIR to build as a dl and still specify
      DIR.
     </para>
     <simpara>
      See also <link linkend="ini.sect.pgsql">Postgres
      Configuration</link> Directives in the <link
      linkend="configuration.file">configuration file</link>.
     </simpara>
     <simpara>
      <ulink url="&url.pgsql;">PostgreSQL home page</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-solid">
    <term>
     <parameter>--with-solid[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Include Solid support. DIR is the Solid base install
      directory, defaults to /usr/local/solid
     </para>
     <simpara>
      <ulink url="&url.solid;">Solid home page</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-sybase-ct">
    <term>
     <parameter>--with-sybase-ct[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Include Sybase-CT support. DIR is the Sybase home
      directory, defaults to /home/sybase.
     </para>
     <simpara>
      See also <link linkend="ini.sect.sybct">Sybase-CT
      Configuration</link> Directives in the <link
      linkend="configuration.file">configuration
      file</link>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-sybase">
    <term>
     <parameter>--with-sybase[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Include Sybase-DB support. DIR is the Sybase home
      directory, which defaults to <filename>/home/sybase</filename>.
     </para>
     <simpara>
      See also <link linkend="ini.sect.sybase">Sybase
       Configuration</link> Directives in the <link
       linkend="configuration.file">configuration file</link>.
     </simpara>
     <simpara>
      <ulink url="&url.sybase;">Sybase home page</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-openlink">
    <term>
     <parameter>--with-openlink[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Include OpenLink ODBC support. DIR is the OpenLink base
      install directory, defaults to /usr/local/openlink.
     </para>
     <simpara>
      <ulink url="&url.openlink;">OpenLink Software's home page</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-iodbc">
    <term>
     <parameter>--with-iodbc[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Include iODBC support. DIR is the iODBC base install
      directory, defaults to <filename>/usr/local</filename>.
     </para>
     <para>
      This feature was first developed for iODBC Driver Manager, a
      freely redistributable ODBC driver manager which runs under
      many flavors of UNIX.
     </para>
     <simpara>
      <ulink url="&url.freeodbc;">FreeODBC home page</ulink> 
      or <ulink url="&url.iodbc;">iODBC home page</ulink>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-custom-odbc">
    <term>
     <parameter>--with-custom-odbc[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Includes support for an arbitrary custom ODBC
      library.  The parameter is the base directory and defaults to
      <filename class="directory">/usr/local</filename>.
     </para>
     <simpara>
      This option implies that you have defined CUSTOM_ODBC_LIBS
      when you run the configure script. You also must have a valid
      odbc.h header somewhere in your include path. If you don't
      have one, create it and include your specific header from
      there. Your header may also require some extra definitions,
      particularly when it is multiplatform. Define them in
      CFLAGS.
     </simpara>
     <simpara>
      For example, you can use Sybase SQL Anywhere on QNX as
      following:
      <literal>
       CFLAGS=-DODBC_QNX LDFLAGS=-lunix CUSTOM_ODBC_LIBS="-ldblib
       -lodbc" ./configure --with-custom-odbc=/usr/lib/sqlany50
      </literal>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.disable-unified-odbc">
    <term>
     <parameter>--disable-unified-odbc</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Disable unified ODBC support. Only applicable if iODBC, Adabas,
      Solid, Velocis or a custom ODBC interface is enabled.
     </para>
     <para>
      PHP 4: Option not available in PHP 4
     </para>
     <simpara>
      The Unified ODBC module, which is a common interface to all
      the databases with ODBC-based interfaces, such as Solid, IBM
      DB2 and Adabas D.  It also works for normal ODBC libraries.
      Has been tested with iODBC, Solid, Adabas D, IBM DB2 and
      Sybase SQL Anywhere. Requires that one (and only one) of these
      extensions or the Velocis extension is enabled, or a custom ODBC
      library specified. This option is only applicable if one of
      the following options is used: <link
      linkend="install.configure.with-iodbc">--with-iodbc</link>,
      <link
      linkend="install.configure.with-solid">--with-solid</link>,
      <link
      linkend="install.configure.with-ibm-db2">--with-ibm-db2</link>,
      <link
      linkend="install.configure.with-adabas">--with-adabas</link>,
      <link
      linkend="install.configure.with-velocis">--with-velocis</link>,
      or <link
      linkend="install.configure.with-custom-odbc">--with-custom-odbc</link>.
     </simpara>
     <simpara>
      See also <link linkend="ini.sect.uodbc">Unified ODBC
      Configuration</link> Directives in the <link
      linkend="configuration.file">configuration
      file</link>.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-unixODBC">
    <term>
     <parameter>--with-unixODBC[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Option not available in PHP 3
     </para>
     <para>
      PHP 4: Include unixODBC support. DIR is the unixODBC base install
      directory, defaults to /usr/local.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-velocis">
    <term>
     <parameter>--with-velocis[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Include Velocis support. DIR is the Velocis base install
      directory, defaults to /usr/local/velocis.
     </para>
     <simpara>
      <ulink url="&url.velocis;">Velocis home page</ulink>
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>
   
 <sect2 id="install.configure.ecommerce">
  <title>Ecommerce</title>
   <variablelist>
    <varlistentry id="install.configure.with-ccvs">
     <term>
      <parameter>--with-ccvs[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Compile CCVS support into PHP 4. Please specify your CCVS base
       install directory as DIR.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-mck">
     <term>
      <parameter>--with-mck[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Include Cybercash MCK support. DIR is the cybercash mck
       build directory, which defaults to
       <filename>/usr/src/mck-3.2.0.3-linux</filename>. For help, look
       in <filename>extra/cyberlib</filename>.
      </para>
      <para>
       PHP 4: Option not available; use <link
       linkend="install.configure.with-cybercash">--with-cybercash</link>
       instead.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-cybercash">
     <term>
      <parameter>--with-cybercash[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available; use <link
       linkend="install.configure.with-mck">--with-mck</link>
       instead.
      </para>
      <para>
       PHP 4: Include CyberCash support. DIR is the CyberCash MCK install
       directory.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.with-pfpro">
      <term>
      <parameter>--with-pfpro[=DIR]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Include Verisign Payflow Pro support
      </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>
  
 <sect2 id="install.configure.graphics">
  <title>Graphics</title>
  <variablelist>
   <varlistentry id="install.configure.enable-freetype-4bit-antialias-hack">
    <term>
     <parameter>--enable-freetype-4bit-antialias-hack</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Option not available in PHP 3
     </para>
     <para>
      PHP 4: Include support for FreeType2 (experimental).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-gd">
    <term>
     <parameter>--with-gd[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Include GD support (DIR is GD's install dir).
     </para>
     <para>
      PHP 4: Include GD support (DIR is GD's install dir). Set DIR to shared
      to build as a dl, or shared,DIR to build as a dl and still specify DIR.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.without-gd">
    <term>
     <parameter>--without-gd</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Disable GD support.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry id="install.configure.with-imagick">
    <term>
     <parameter>--with-imagick[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Include ImageMagick support. DIR is the install
      directory, and if left out, PHP will try to find it on its
      own. [experimental]
     </para>
     <para>
      PHP 4: Option not available in PHP 4
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-jpeg-dir">
    <term>
     <parameter>--with-jpeg-dir[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: jpeg dir for pdflib 2.0
     </para>
     <para>
      PHP 4: jpeg dir for pdflib 3.x and 4.x
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-png-dir">
    <term>
     <parameter>--with-png-dir[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Option not available in PHP 3
     </para>
     <para>
      PHP 4: png dir for pdflib 3.x and 4.x
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.enable-t1lib">
    <term>
     <parameter>--enable-t1lib</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Enable t1lib support.
     </para>
     <para>
      PHP 4: Option not available; use <link
      linkend="install.configure.with-t1lib">--with-t1lib</link>
      instead.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-t1lib">
    <term>
     <parameter>--with-t1lib[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Option not available; use <link
      linkend="install.configure.enable-t1lib">--enable-t1lib</link>
      instead.
     </para>
     <para>
      PHP 4: Include T1lib support.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-tiff-dir">
    <term>
     <parameter>--with-tiff-dir[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: tiff dir for pdflib 2.0
     </para>
     <para>
      PHP 4: tiff dir for pdflib 3.x and 4.x
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-ttf">
    <term>
     <parameter>--with-ttf[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3, PHP 4: Include FreeType support
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="install.configure.with-xpm-dir">
    <term>
     <parameter>--with-xpm-dir[=DIR]</parameter>
    </term>
    <listitem>
     <para>
      PHP 3: Option not available in PHP 3
     </para>
     <para>
      PHP 4: xpm dir for gd-1.8+
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2 id="install.configure.misc">
  <title>Miscellaneous</title>
   <para>
    These are being classified over time, where appropriate.
   </para>

   <variablelist>

    <varlistentry id="install.configure.gmp">
     <term>
      <parameter>--with-gmp</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4 : Include GMP support.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry id="install.configure.disable-bcmath">
     <term>
      <parameter>--disable-bcmath</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Compile without BC arbitrary precision math
       functions. These functions allow you to operate with numbers
       outside of the ranges allowed by regular integers and floats;
       see <link linkend="ref.bc">BCMath Arbitrary Precision
       Mathematics Functions</link> for more information.
      </para>
      <para>
       PHP 4: Option not available; bcmath is not compiled in by
       default. Use <link
        linkend="install.configure.enable-bcmath">--enable-bcmath</link>
       to compile it in.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry id="install.configure.disable-display-source">
     <term>
      <parameter>--disable-display-source</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Compile without displaying source support
      </para>
      <para>
       PHP 4: Option not available in PHP 4
      </para>
     </listitem>
    </varlistentry>
     <varlistentry id="install.configure.disable-libtool-lock">
     <term>
      <parameter>--disable-libtool-lock</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: avoid locking (might break parallel builds)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.disable-pear">
     <term>
      <parameter>--disable-pear</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Do not install PEAR
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.disable-pic">
     <term>
      <parameter>--disable-pic</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Disable PIC for shared objects
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.disable-posix">
     <term>
      <parameter>--disable-posix</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3; use <link
       linkend="install.configure.without-posix">--without-posix</link>
       instead.
      </para>
      <para>
       PHP 4: Disable POSIX-like functions
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.disable-rpath">
     <term>
      <parameter>--disable-rpath</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Disable passing additional runtime library search paths
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.disable-session">
     <term>
      <parameter>--disable-session</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Disable session support
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-bcmath">
     <term>
      <parameter>--enable-bcmath</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3; bcmath is compiled in
       by default. Use <link
       linkend="install.configure.disable-bcmath">--disable-bcmath</link>
       to disable it.
      </para>
      <para>
       PHP 4: Compile with bc style precision math functions. Read
       README-BCMATH for instructions on how to get this module
       installed. These functions allow you to operate with numbers
       outside of the ranges allowed by regular integers and floats;
       see <link linkend="ref.bc">BCMath Arbitrary Precision
       Mathematics Functions</link> for more information.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-c9x-inline">
     <term>
      <parameter>--enable-c9x-inline</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Enable C9x-inline semantics
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-calendar">
     <term>
      <parameter>--enable-calendar</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Enable support for calendar conversion
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-debug">
     <term>
      <parameter>--enable-debug</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Compile with debugging symbols.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-debugger">
     <term>
      <parameter>--enable-debugger</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Compile with remote debugging functions
      </para>
      <para>
       PHP 4: Option not available in PHP 4
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-discard-path">
     <term>
      <parameter>--enable-discard-path</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: If this is enabled, the PHP CGI binary can safely be
       placed outside of the web tree and people will not be able to circumvent
       .htaccess security.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-dmalloc">
     <term>
      <parameter>--enable-dmalloc</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Enable dmalloc
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-exif">
     <term>
      <parameter>--enable-exif</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Enable exif support
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-experimental-zts">
     <term>
      <parameter>--enable-experimental-zts</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: This will most likely break your build
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-fast-install">
     <term>
      <parameter>--enable-fast-install[=PKGS]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: optimize for fast installation [default=yes]
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-force-cgi-redirect">
     <term>
      <parameter>--enable-force-cgi-redirect</parameter>
     </term>
     <listitem>
      <para> 
       PHP 3, PHP 4: Enable the security check for internal server redirects.
       You should use this if you are running the CGI version with Apache.
      </para>
     </listitem>
    </varlistentry>
     <varlistentry id="install.configure.enable-inline-optimization">
     <term>
      <parameter>--enable-inline-optimization</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: If you have much memory and are using gcc, you might try this.
      </para>
     </listitem>
    </varlistentry>
     <varlistentry id="install.configure.enable-libgcc">
     <term>
      <parameter>--enable-libgcc</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Enable explicitly linking against libgcc
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-maintainer-mode">
     <term>
      <parameter>--enable-maintainer-mode</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: enable make rules and dependencies not useful (and
       sometimes confusing) to the casual installer
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-memory-limit">
     <term>
      <parameter>--enable-memory-limit</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Compile with memory limit support. [default=no] 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-safe-mode">
     <term>
      <parameter>--enable-safe-mode</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Enable safe mode by default.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-satellite">
     <term>
      <parameter>--enable-satellite</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Enable CORBA support via Satellite (Requires ORBit)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-shared">
     <term>
      <parameter>--enable-shared[=PKGS]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: build shared libraries [default=yes]
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-sigchild">
     <term>
      <parameter>--enable-sigchild</parameter>
     </term>
     <listitem>
      <para>
        PHP 3, PHP 4: Enable PHP's own SIGCHLD handler.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-static">
     <term>
      <parameter>--enable-static[=PKGS]</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: build static libraries [default=yes]
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-sysvsem">
     <term>
      <parameter>--enable-sysvsem</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Enable System V semaphore support.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-sysvshm">
     <term>
      <parameter>--enable-sysvshm</parameter>
     </term>
     <listitem>
      <para>
       PHP 3, PHP 4: Enable the System V shared memory support
      </para>
     </listitem>
    </varlistentry>
    <varlistentry id="install.configure.enable-trans-sid">
     <term>
      <parameter>--enable-trans-sid</parameter>
     </term>
     <listitem>
      <para>
       PHP 3: Option not available in PHP 3
      </para>
      <para>
       PHP 4: Enable transparent session id propagation
      </para>
     </listitem>
    </varlistentry>

     <varlistentry id="install.configure.with-cdb">
      <term>
       <parameter>--with-cdb[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include CDB support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-config-file-path">
      <term>
       <parameter>--with-config-file-path=PATH</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Sets the path in which to look for php3.ini. Defaults to
        <filename>/usr/local/lib</filename>
       </para>
       <para>
        PHP 4: Sets the path in which to look for <filename>php.ini</filename>. 
    Defaults to <filename>/usr/local/lib</filename>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-cpdflib">
      <term>
       <parameter>--with-cpdflib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include ClibPDF support. DIR is the ClibPDF install directory,
        defaults to /usr/local.
       </para>
       <para>
        PHP 4: Include cpdflib support (requires cpdflib &gt;= 2). DIR is the
        cpdfllib install directory, defaults to /usr.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-esoob">
      <term>
       <parameter>--with-esoob[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Easysoft OOB support. DIR is the OOB base install
        directory, defaults to /usr/local/easysoft/oob/client.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-exec-dir">
      <term>
       <parameter>--with-exec-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Only allow executables in DIR when in safe mode defaults
        to /usr/local/php/bin
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-fdftk">
      <term>
       <parameter>--with-fdftk[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include fdftk support. DIR is the fdftk install directory,
        defaults to /usr/local.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gnu-ld">
      <term>
       <parameter>--with-gnu-ld</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: assume the C compiler uses GNU ld [default=no]
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-icap">
      <term>
       <parameter>--with-icap[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include ICAP support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-imap">
      <term>
       <parameter>--with-imap[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include IMAP support. DIR is the IMAP include and
        c-client.a directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-imsp">
      <term>
       <parameter>--with-imsp[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include IMSP support (DIR is IMSP's include dir and libimsp.a
        dir).
       </para>
       <para>
        PHP 4: Option not available in PHP 4
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-java">
      <term>
       <parameter>--with-java[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Java support. DIR is the base install directory for the
        JDK. This extension can only be built as a shared dl.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-kerberos">
      <term>
       <parameter>--with-kerberos[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Kerberos support in IMAP.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mcal">
      <term>
       <parameter>--with-mcal[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include MCAL support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mcrypt">
      <term>
       <parameter>--with-mcrypt[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include mcrypt support. DIR is the mcrypt install
        directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mhash">
      <term>
       <parameter>--with-mhash[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include mhash support. DIR is the mhash install directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mm">
      <term>
       <parameter>--with-mm[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include mm support for session storage
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mod_charset">
      <term>
       <parameter>--with-mod_charset</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable transfer tables for mod_charset (Rus Apache).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pdflib">
      <term>
       <parameter>--with-pdflib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include pdflib support (tested with 0.6 and 2.0). DIR is
        the pdflib install directory, which defaults to
        <filename>/usr/local</filename>.
       </para>
       <para>
        PHP 4: Include pdflib 3.x/4.x support. DIR is the pdflib install
        location, which defaults to <filename>/usr/local</filename>.
       </para>
       <para>
	PHP 4 and PDFlib 3.x/4.x require that you have the JPEG and
	TIFF libraries available.  When compiling PDFlib support, use
	the <link
	linkend="install.configure.with-jpeg-dir">--with-jpeg-dir</link>
	and <link
	linkend="install.configure.with-tiff-dir">--with-tiff-dir</link>
	configure options.  You may wish to additionally specify the
	<link
	linkend="install.configure.with-png-dir">--with-png-dir</link>
	and <link
	linkend="install.configure.with-zlib-dir">--with-zlib-dir</link>
	configure options to compile PNG and Zlib support into the
	PDFlib extension.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-shared-pdflib">
      <term>
       <parameter>--enable-shared-pdflib</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Activate pdflib as shared library.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-readline">
      <term>
       <parameter>--with-readline[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include readline support. DIR is the readline install directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-regex">
      <term>
       <parameter>--with-regex=TYPE</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: regex library type: system, apache, php
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-servlet">
      <term>
       <parameter>--with-servlet[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include servlet support. DIR is the base install
        directory for the JSDK. This SAPI requires that the Java
        extension be built as a shared dl.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ming">
      <term>
       <parameter>--with-ming</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Flash 4 support, with Ming
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-swf">
      <term>
       <parameter>--with-swf[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include swf support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-system-regex">
      <term>
       <parameter>--with-system-regex</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Do not use the bundled regex library
       </para>
       <para>
        PHP 4: (deprecated) Use system regex library
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-tsrm-pth">
      <term>
       <parameter>--with-tsrm-pth[=pth-config]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Use GNU Pth.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-tsrm-pthreads">
      <term>
       <parameter>--with-tsrm-pthreads</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Use POSIX threads (default)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-x">
      <term>
       <parameter>--with-x</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: use the X Window System
       </para>
       <para>
        PHP 4: Option not available in PHP 4
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-bzip2">
      <term>
       <parameter>--with-bz2[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 4: Include support bzip2. DIR
        is the bzip2 install dir.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zlib-dir">
      <term>
       <parameter>--with-zlib-dir[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: zlib dir for pdflib 2.0 or include zlib support
       </para>
       <para>
        PHP 4: zlib dir for pdflib 3.x/4.x or include zlib support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zlib">
      <term>
       <parameter>--with-zlib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include zlib support (requires zlib &gt;= 1.0.9). DIR is
        the zlib install directory, defaults to /usr.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zziplib">
      <term>
       <parameter>--with-zziplib[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 4: Include ZZIPlib support (requires ZZIPlib &gt;= 0.10.6). DIR is
        the ZZIPlib install directory, defaults to /usr/local.
       </para>
       <para>
	The latest version of ZZIPlib can be found at <ulink
	url="&url.zziplib;">&url.zziplib;</ulink>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.without-pcre-regex">
      <term>
       <parameter>--without-pcre-regex</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Don't include Perl Compatible Regular Expressions support
       </para>
       <para>
        PHP 4: Do not include Perl Compatible Regular Expressions support. Use
        --with-pcre-regex=DIR to specify DIR where PCRE's include and library
        files are located, if not using bundled library.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.without-posix">
      <term>
       <parameter>--without-posix</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Don't include POSIX functions
       </para>
       <para>
        PHP 4: Option not available in PHP 4; use <link
         linkend="install.configure.disable-posix">--disable-posix</link>
        instead.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 id="install.configure.networking">
    <title>Networking</title>

    <variablelist>
     <varlistentry id="install.configure.with-curl">
      <term>
       <parameter>--with-curl[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include CURL support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-ftp">
      <term>
       <parameter>--enable-ftp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available; use <link
         linkend="install.configure.with-ftp">--with-ftp</link>
        instead.
       </para>
       <para>
        PHP 4: Enable FTP support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-ftp">
      <term>
       <parameter>--with-ftp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include FTP support.
       </para>
       <para>
        PHP 4: Option not available; use <link
         linkend="install.configure.enable-ftp">--enable-ftp</link>
        instead
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-url-fopen-wrapper">
      <term>
       <parameter>--disable-url-fopen-wrapper</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Disable the URL-aware fopen wrapper that allows accessing
        files via http or ftp.
       </para>
       <warning>
        <para>
         This switch is only available for PHP versions up to 4.0.3, newer
         versions provide an INI parameter called 
         <parameter>allow_url_fopen</parameter> instead of forcing you to
         decide upon this feature at compile time.
        </para>
       </warning>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-mod-dav">
      <term>
       <parameter>--with-mod-dav=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include DAV support through Apache's mod_dav, DIR is
        mod_dav's installation directory (Apache module version only!)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-openssl">
      <term>
       <parameter>--with-openssl[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include OpenSSL support in SNMP.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-snmp">
      <term>
       <parameter>--with-snmp[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include SNMP support. DIR is the SNMP base install
        directory, defaults to searching through a number of common locations
        for the snmp install. Set DIR to shared to build as a dl, or shared,DIR
        to build as a dl and still specify DIR.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-ucd-snmp-hack">
      <term>
       <parameter>--enable-ucd-snmp-hack</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable UCD SNMP hack
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sockets">
      <term>
       <parameter>--enable-sockets</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable sockets support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-yaz">
      <term>
       <parameter>--with-yaz[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include YAZ support (ANSI/NISO Z39.50). DIR is the YAZ bin
        install directory
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-yp">
      <term>
       <parameter>--enable-yp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available; use <link
         linkend="install.configure.with-yp">--with-yp</link>
        instead.
       </para>
       <para>
        PHP 4: Include YP support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-yp">
      <term>
       <parameter>--with-yp</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include YP support
       </para>
       <para>
        PHP 4: Option not available; use <link
         linkend="install.configure.enable-yp">--enable-yp</link>
        instead.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="install.configure.with-mnogosearch">
      <term>
       <parameter>--with-mnogosearch</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include mnoGoSearch support.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>

   <sect2 id="install.configure.php">
    <title>PHP Behaviour</title>

    <variablelist>
     <varlistentry id="install.configure.enable-magic-quotes">
      <term>
       <parameter>--enable-magic-quotes</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Enable magic quotes by default.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-short-tags">
      <term>
       <parameter>--disable-short-tags</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Disable the short-form &lt;? start tag by default.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-track-vars">
      <term>
       <parameter>--enable-track-vars</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Enable GET/POST/Cookie track variables by default.
       </para>
       <para>
        PHP 4: Option not available in PHP 4; as of PHP 4.0.2,
        track_vars is always on.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

   </sect2>

   <sect2 id="install.configure.servers">
    <title>Server</title>
    
    <variablelist>
     <varlistentry id="install.configure.with-aolserver-src">
      <term>
       <parameter>--with-aolserver-src=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Specify path to the source distribution of AOLserver
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-aolserver">
      <term>
       <parameter>--with-aolserver=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Specify path to the installed AOLserver
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-apache">
      <term>
       <parameter>--with-apache[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Build Apache module. DIR is the top-level Apache build
        directory, defaults to /usr/local/etc/httpd.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-apxs">
      <term>
       <parameter>--with-apxs[=FILE]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Build shared Apache module. FILE is the optional pathname
        to the Apache apxs tool; defaults to apxs.
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry id="install.configure.enable-versioning">
      <term>
       <parameter>--enable-versioning</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Take advantage of versioning and scoping Provided by Solaris 2.x
        and Linux
       </para>
       <para>
        PHP 4: Export only required symbols. See INSTALL for more information
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-caudium">
      <term>
       <parameter>--with-caudium[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Build PHP as a Pike module for use with the Caudium
        webserver.  DIR is the Caudium base directory. If no directory
        is specified $prefix/caudium/server is used. The prefix is
        controlled by the --prefix option and is /usr/local per
        default.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-fhttpd">
      <term>
       <parameter>--with-fhttpd[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Build fhttpd module. DIR is the fhttpd sources directory,
        defaults to /usr/local/src/fhttpd.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-nsapi">
      <term>
       <parameter>--with-nsapi=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Specify path to the installed Netscape
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-phttpd">
      <term>
       <parameter>--with-phttpd=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: 
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pi3web">
      <term>
       <parameter>--with-pi3web=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Build PHP as a module for use with Pi3Web.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-roxen">
      <term>
       <parameter>--with-roxen=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Build PHP as a Pike module. DIR is the base Roxen directory,
        normally /usr/local/roxen/server.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-roxen-zts">
      <term>
       <parameter>--enable-roxen-zts</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Build the Roxen module using Zend Thread Safety.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-thttpd">
      <term>
       <parameter>--with-thttpd=SRCDIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: 
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-zeus">
      <term>
       <parameter>--with-zeus=DIR</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Build PHP as an ISAPI module for use with Zeus.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    
   </sect2>

   <sect2 id="install.configure.text">
    <title>Text and language</title>
 
    <variablelist>
     <varlistentry id="install.configure.with-aspell">
      <term>
       <parameter>--with-aspell[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include ASPELL support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-gettext">
      <term>
       <parameter>--with-gettext[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4: Include GNU gettext support. DIR is the gettext install
        directory, defaults to /usr/local
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-pspell">
      <term>
       <parameter>--with-pspell[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include PSPELL support.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-recode">
      <term>
       <parameter>--with-recode[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include GNU recode support.
       </para>
       <para>
        PHP 4: Include recode support. DIR is the recode install directory.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-shmop">
      <term>
       <parameter>--enable-shmop</parameter>
      </term>
      <listitem>
       <para>
        PHP 3, PHP 4 : Activate shmop support.
       </para>
      </listitem>
     </varlistentry>
     
    </variablelist>

   </sect2>
   
   <sect2 id="install.configure.xml">
    <title>XML</title>

    <variablelist>   
     <varlistentry id="install.configure.with-dom">
      <term>
       <parameter>--with-dom[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include DOM support (requires libxml &gt;= 2.0). DIR is the
        libxml install directory, defaults to <filename>/usr</filename>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-sablot-errors-descriptive">
      <term>
       <parameter>--enable-sablot-errors-descriptive</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable Descriptive errors
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-sablot">
      <term>
       <parameter>--with-sablot[=DIR]</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Include Sablotron support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.enable-wddx">
      <term>
       <parameter>--enable-wddx</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3
       </para>
       <para>
        PHP 4: Enable WDDX support
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.disable-xml">
      <term>
       <parameter>--disable-xml</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Option not available in PHP 3; XML functionality is
        not built in by default. Use <link
         linkend="install.configure.with-xml">--with-xml</link>
        to turn it on.
       </para>
       <para>
        PHP 4: Disable XML support using bundled expat lib
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="install.configure.with-xml">
      <term>
       <parameter>--with-xml</parameter>
      </term>
      <listitem>
       <para>
        PHP 3: Include XML support
       </para>
       <para>
        PHP 4: Option not available; XML support is built in by
        default.  Use <link
         linkend="install.configure.disable-xml">--disable-xml</link> to
        turn it off.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>

  <sect1 id="install-windows">
   <title>Installation auf Windows 95/98/NT Systemen</title>

   <simpara>
    Diese Installationsanleitung soll Ihnen helfen, PHP auf Ihrem
    Windows 9x/NT Webserver zu installieren und zu konfigurieren.
    Diese Anleitung wurde von &link.bob; erstellt. Um die aktuellste
    Fassung (Englisch) zu erhalten, klicken Sie bitte hier: <ulink
    url="&url.win32install;">&url.win32install;</ulink>.
   </simpara>

   <para>
    Diese Anleitung umfasst die Installation folgender Komponenten:
    <itemizedlist>
     <listitem>
      <para>
       Personal Web Server (Neueste Version empfohlen)
      </para>
     </listitem>
     <listitem>
      <para>
       Internet Information Server 3 oder 4
      </para>
     </listitem>
     <listitem>
      <para>
       Apache 1.3.x
      </para>
     </listitem> 
     <listitem>
      <para>
       Omni HTTPd 2.0b1
      </para>
     </listitem>
    </itemizedlist>
   </para>
 
   <sect2>
    <title>Grundlegende Installations- Schritte</title>

    <para>
     Die folgenden Schritte sollten in jedem Fall und unabhängig vom
     bevorzugten Webserver ausgeführt werden.
     
     <itemizedlist>
      <listitem>
       <para>
	Entpacken Sie die Dateien, die mit der Distribution
	mitgeliefert werden in ein Verzeichnis Ihrer Wahl. Wir
	empfehlen "C:\PHP3\".
       </para>
      </listitem>
      <listitem>
       <para>
	Kopieren Sie die 'php3.ini-dist'- Datei in Ihr '%WINDOWS%'-
	Verzeichnis un benennen Sie sie um in 'php3.ini'. Ihr
	Windows-Verzeichnis ist im Allgemeinen:
	<simplelist>
	 <member>c:\windows für Windows 95/98</member>
	 <member>c:\winnt oder c:\winnt40 für NT servers</member>
	</simplelist>
       </para>	
      </listitem>
      <listitem>
       <para>
	Editieren Sie nun Ihre 'php3.ini' -Datei mit Ihrem bevorzugtem
	Editor:
	<itemizedlist>
	 <listitem>
	  <simpara>
	   Sie müssen den Schlüssel 'extension_dir' so verändern, dass
	   er auf Ihr PHP-Verzeichnis zeigt, bzw. dorthin, wo Sie die
	   zu ladenden Erweiterungen (Module) abgelegt haben.  Z.B.:
	   c:\php3
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   Wenn Sie den Omni Httpd-Server verwenden, überspringen Sie
	   den nächsten Schritt.  Geben Sie bei dem Schlüssel
	   'doc_root' das Stammverzeichnis an, in dem Ihre PHP-Skripte
	   liegen. Sie sollten diese Angabe aus Sicherheits-gründen
	   auf das Dokumentenverzeichnis des Webservers setzen:
	   Apache: '%apache\htdocs' IIS: '%inetpub\wwwroot' PWS:
	   '%webshare\wwwroot'. 
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   Wählen Sie nun die Erweiterungen (Module) aus, die Sie
	   benutzen möchten, wenn PHP startet. Dieses geschieht, indem
	   Sie die jeweiligen Schlüssel 'extension=php3_*.dll'
	   entkommentieren (Entfernen Sie das ';' vor den
	   Erweiterungen).  Einige Erweiterungen stehen in
	   Abhängigkeiten zu zusätzlichen Bibliotheken (Libraries),
	   welche auf Ihrem System installiert sein müssen, um korrekt
	   zu funktionieren.  Die <ulink
	   url="&url.php.faq;">FAQ</ulink> - Sektion von PHP liefert
	   hier weitere Informationen über Bezugsquellen weiterer
	   Bibliotheken.  Bei selten benutzten Modulen empfiehlt es
	   sich diese im Hinblick auf Systemresourcen dynamisch in das
	   einzelne Skript zu laden. Module können Sie dynamisch
	   mittels folgender Anweisung laden:
	   <command>dl("php_*.dll");</command>
	  </simpara>
	 </listitem>
	 <listitem>
	  <simpara>
	   Wenn Sie den PWS oder IIS benutzen, können Sie die
	   browscap.ini auf folgende Verzeichnisse setzen:
	   'c:\windows\system\inetsrv\browscap.ini' für Windows 95/98
	   und 'c:\winnt\system32\inetsrv\browscap.ini' für NT
	   Server. Zusätzliche Informationen zur Benutzung der
	   browsecap.ini und Ihrer Funktionalität erhalten Sie hier:
	   <ulink url="&url.browscap;">mirror</ulink>, klicken Sie auf
	   den "source" button um ein Anwendungsbeispiel zu erhalten.
	  </simpara>
	 </listitem>
	</itemizedlist>
       </para>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     Den DLLs für PHP Erweiterungen sind allen das Prefix 'php3_'
     vorangestellt.  Dieses soll Unklarheiten zwischen PHP
     Erweiterungen und ihren unterstützenden Bibliotheken vorbeugen.
    </simpara>

   </sect2>

   <sect2>
    <title>Windows 95/98/NT und PWS/IIS 3</title>

    <simpara>
     Die empfohlene Methode, um diese Server zu konfigurieren ist es,
     die 'php_iis_reg.inf'- Datei zu benutzen. Sie können diese Datei
     editieren, um sie Ihren Wünschen anzupassen. Sie können aber die
     Konfiguration auch "von Hand" vornehmen.
    </simpara>
    <simpara>
     (!)WARNUNG: Diese Schritte erfordern einen Eingriff in die
     Registrierungsdatei von Windows. Sie sollten auf jeden Fall zuvor
     eine Sicherheitskopie Ihrer Registrierungsdatei erstellen. Sollte
     Ihnen bei der Bearbeitung der Registrierungsdatei ein Fehler
     unterlaufen, kann dieses ein instabiles oder nicht mehr
     startendes System zur Folge haben.  Wir lehnen jede Verantwortung
     für Schäden und Verluste ab.  Bitte seien Sie also bei der
     folgenden Methode sehr aufmerksam.
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
	Starten Sie regedit.exe
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Gehen Sie zu <literal>HKEY_LOCAL_MACHINE /System
	/CurrentControlSet /Services /W3Svc /Parameters
	/ScriptMap</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wählen Sie aus dem 'Bearbeiten-Menü' folgendes aus:
	<literal>Neu->Zeichenfolge</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Geben Sie hier die Erweiterung Ihrer .php3- Dateien an. Bsp.:
	<literal>.php3</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Klicken Sie nun doppelt auf den Wert der Zeichenkette, und
	geben Sie hier als zugeordnetes Programm Ihre
	<literal>php.exe</literal> an. Bsp.: <literal>c:\php3\php.exe
	%s %s</literal>. Die Folge '%s %s' ist unbedingt einzufügen,
	PHP würde sonst nicht korrekt arbeiten.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wiederholen Sie diese Schritte für jede weitere
	Datei-Erweiterung, die sie mit PHP verbinden wollen.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wechseln Sie zu: <literal>HKEY_CLASSES_ROOT</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wählen Sie aus dem 'Bearbeiten-Menü' folgendes aus:
	<literal>Neu->Schlüssel</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Benennen Sie den Schlüssel wie Ihre Datei-Erweiterung
	(<literal>.php3</literal>)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wählen Sie nun den neu erstellten Schlüssel aus, und weisen
	Sie ihm den Standartwert <literal>phpfile</literal> zu.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wiederholen Sie diese Schritte, wenn Sie weitere
	Datei-Erweiterungen konfigurieren wollen.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Erzeugen Sie nun einen weiteren Schlüssel
	<literal>Neu->schlüssel</literal> im Verzeichnis
	<literal>HKEY_CLASSES_ROOT</literal> und benennen Sie ihn mit
	<literal>phpfile</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wählen Sie den neuen Schlüssel <literal>phpfile</literal> aus,
	und und weisen Sie ihm den Standartwert <literal>PHP
	Script</literal> zu.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Erstellen Sie nun unterhalb von <literal>phpfile</literal>
	mittels Rechtsklick einen neue Schlüssel und nennen Sie ihn
	<literal>Shell</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Unterhalb von <literal>Shell</literal> erzeugen Sie nun einen
	weiteren Schlüssel und nennen ihn <literal>open</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Unterhalb von <literal>open</literal> erzeugen Sie jetzt noch
	einen Schlüssel und nennen ihn <literal>command</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Wählen Sie den Schlüssel <literal>command</literal> aus, und
	geben Sie ihm als Standartwert den Pfad zur
	<literal>php.exe</literal> mit folgender Schreibweise an:
	<literal>c:\php3\php.exe -q %1</literal>. (vergessen Sie bitte
	nicht das <literal>%1</literal>).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Beenden Sie Regedit.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     PWS and IIS 3 Benutzer sollten nun ein voll funktionsfähiges
     System haben.  IIS 3 Benutzer können ein kleines <ulink
     url="&url.iiscfg;">Tool</ulink> von
     Steven Genusa benutzen, um Ihre Skript-Maps zu editieren.
    </simpara>

   </sect2>

   <sect2>
    <title>Windows NT und IIS 4</title>

    <simpara>
     Um PHP auf Windows NT und dem IIS4 zu installieren, folgen Sie
     dieser Anleitung:
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
	Im Internet Service Manager (MMC) selektieren Sie die Webseite
	oder ein Ausgangsverzeichnis Ihrer Anwendungen.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Öffnen Sie die Eigenschaften Ihres Verzeichnisses
	(Rechtsklick), danach klicken Sie auf die Registerkarte
	Homeverzeichnis, Virtuelles Verzeichnis oder Verzeichnis.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Klicken Sie auf die Schaltfläche Konfiguration und
	anschliessend auf die Registerkarte Anwendungs-Mapping.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Klicken Sie auf Hinzufügen und geben Sie in der Ausführungsbox
	ein: <literal>c:\path-to-php-dir\php.exe %s %s</literal>.Sie
	müssen %s %s unbedingt am Ende eingeben, sonst wird PHP nicht
	korrekt arbeiten.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Inder Ausführungsbox geben Sie die Dateierweiterungen an, mit
	der Ihre PHP-Skripte verbunden werden sollen. (Sie müssen
	Schritt 5 und 6 für jede zusätzlich gewünschte Erweiterung
	wiederholen. <literal>.php3</literal> und
	<literal>.phtml</literal> sind die gebräuchlichsten.)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Stellen Sie im Internet Service Manager die geeigneten
	Sicherheitsmechanismen ein.  Falls Ihr NT- Server das NTFS-
	Dateisystem benutzt, dann fügen Sie bitte Ausführungsrechte
	für I_USR_ dem Verzeichnis hinzu, das das Programm
	<literal>php.exe</literal> enthält.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

   </sect2>

   <sect2>
    <title>Windows 9x/NT and Apache 1.3.x</title>
    
    <simpara>
     Um den Apache zu konfigurieren, müssen Sie die Datei
     <literal>httpd.conf</literal> zum Bearbeiten öffnen (Bei älteren
     Apache-Versionen sind noch weitere Konfigurations-Dateien
     vorhanden; hier muss dann auch die <literal>srm.conf</literal>
     editiert werden).
    </simpara>
    <simpara>
     Obwohl der Apache auf mannigfaltige Weise konfiguriert werden
     kann, sollte die hier vorgestellte Art selbst für einen
     "Newcomer" keine grösseren Hindernisse darstellen. Für
     weitere Konfigurationsmöglichkeiten konsultieren Sie bitte die
     Apache Docs.
    </simpara>

    <para>
     <itemizedlist>
      <listitem>
       <simpara>
	<literal>
	 ScriptAlias /php3/ "c:/path-to-php-dir/"
	</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<literal>
	 AddType application/x-httpd-php3 .php3
	</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<literal>
	 AddType application/x-httpd-php3 .phtml
	</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	<literal>
	 Action application/x-httpd-php3 "/php3/php.exe"
	</literal>
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     Das Quell-Code-Highlighting Feature nutzen sie mit der Funktion
     showSource().  Erstellen Sie z.B. ein PHP-Skript in welchem Sie
     folgenden Code eingeben: <literal>&lt;?php show_source
     ("original_php_script.php3"); ?></literal>.  Ersetzen Sie
     <literal>original_php_script.php3</literal> durch den Namen des
     Skriptes, dessen Quellcode Sie anzeigen wollen (Dieses ist nur
     ein Weg, das Feature zu nutzen). Die Farben der des
     Syntax-Highlighting können Sie in der php.ini im Abschnitt
     'Languages Options' einstellen.  <emphasis>Bemerkung:</emphasis>
     Auf Win-Apache müssen alle Backslashes in einer
     Verzeichnis-Anweisung in Forward-Slashes (normaler Slash)
     konvertiert werden.
    </simpara>

   </sect2>

   <sect2>
    <title>Omni HTTPd 2.0b1 für Windows</title>
    
    <simpara>
     Dieser ist von allen Server der am einfachsten zu konfigurierende:
    </simpara>

    <para>
     <simplelist>
      <member>
       Schritt 1: Installieren Sie den Omni server
      </member>
      <member>
       Schritt 2: Rechtsklick auf das blaue OmniHTTPd Icon in der System
       Tray und selektieren Sie <literal>Eigenschaften</literal>
      </member>
      <member>
       Schritt 3: Klicken Sie auf <literal>Web Server Global
       Settings</literal>
      </member>
      <member>
       Schritt 4: Bei der Registerkarte 'External' , geben Sie
       folgendes ein: <literal>virtual = .php3 | actual =
       c:\path-to-php-dir\php.exe</literal>
      </member>
      <member>
       Schritt 5: Bei der Registerkarte <literal>Mime</literal> geben
       Sie folgendes ein: <literal>virtual = wwwserver/stdcgi | actual
       = .php3</literal>
      </member>
      <member>
       Schritt 6: Klicken Sie auf <literal>OK</literal>. Fertig :-)
      </member>
     </simplelist>
    </para>

    <simpara>
     Wiederholen Sie Schritt 2-6 für jede Dateierweiterung, die Sie
     mit PHP verbinden wollen.
    </simpara>

   </sect2>

   <sect2>
    <title>PHP Module</title>

    <para>
     <table>
      <title>PHP Module</title>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>php3_calendar.dll</entry>
	 <entry>Kalender - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_crypt.dll</entry>
	 <entry>Verschlüsselungs - Funktionen (MD5)</entry>
	</row>
	<row>
	 <entry>php3_dbase.dll</entry>
	 <entry>dBase - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_dbm.dll</entry>
	 <entry>GDBM Emulation via Berkely DB2 library</entry>
	</row>
	<row>
	 <entry>php3_filepro.dll</entry>
	 <entry>READ ONLY Zugang zur Filepro Datenbank</entry>
	</row>
	<row>
	 <entry>php3_gd.dll</entry> 
	 <entry>GD Library - Funktionen für gif-Manipulation</entry>
	</row>
	<row>
	 <entry>php3_hyperwave.dll</entry>
	 <entry>HyperWave - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_imap4r2.dll</entry>
	 <entry>IMAP 4 - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_ldap.dll</entry>
	 <entry>LDAP - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_msql1.dll</entry>
	 <entry>mSQL 1 client</entry>
	</row>
	<row>
	 <entry>php3_msql2.dll</entry>
	 <entry>mSQL 2 client</entry>
	</row>
	<row>
	 <entry>php3_mssql.dll</entry>
	 <entry>MSSQL client (benötigt MSSQL DB-Bibliotheken</entry>
	</row>
	<row>
	 <entry>php3_mysql.dll</entry>
	 <entry>MySQL - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_nsmail.dll</entry>
	 <entry>Netscape Mail - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_oci73.dll</entry>
	 <entry>Oracle - Funktionen</entry>
	</row>
	<row>
	 <entry>php3_snmp.dll</entry>
	 <entry>SNMP get and walk Funktionen (nur NT !)</entry>
	</row>
	<row>
	 <entry>php3_zlib.dll</entry>
	 <entry>ZLib - Funktionen</entry>
	</row>
       </tbody>
      </tgroup>
     </table>
     </para>

   </sect2>

  </sect1>

  <sect1 id="install-problems">
   <title>Probleme?</title>

   <sect2>
    <title>Lesen Sie die FAQ</title>
    <simpara>
     Einige Problem tauchen öfters auf als andere. Die am häufigsten
     auftretenden Probleme sind in der PHP-FAQ aufgelistet: <ulink
     url="&url.php.faq;">&url.php.faq;</ulink>
    </simpara>
   </sect2>

   <sect2>
    <title>Bug Reports</title>

    <simpara>
     Wenn Sie glauben, einen Bug gefunden zu haben, melden Sie ihn uns
     bitte. Die PHP-Entwickler kennen ihn wahrscheinlich noch nicht,
     und wenn Sie ihn nicht melden, stehen die Chancen schlecht, das
     er ausgemerzt wird. Sie können einen Bug mittels des
     "bug-tracking system" unter <ulink
     url="&url.php.bugs;">&url.php.bugs;</ulink> melden.
    </simpara>

   </sect2>

   <sect2>
    <title>Andere Probleme</title>

    <simpara>
     Wenn Ihnen trotzdem noch nicht geholfen werden konnte, könnte es
     sein, das jemand auf der Mailingliste Ihnen helfen kann. Bevor
     Sie jedoch ein Problem an die Mailingliste weitergeben, sollten
     Sie zuerst das Archiv der Liste durchsuchen. Das Archiv finden
     Sie unter <ulink url="&url.php;">&url.php;</ulink>.  Um sich auf
     der Mailingliste anzumelden, reicht es, eine leere Email an
     <ulink
     url="mailto:&email.php3.subscribe;">&email.php3.subscribe;</ulink>
     zu schicken.  Die Adresse der Mailingliste ist
     <literal>&email.php3;</literal>.
    </simpara>

    <simpara>
     Wenn Sie Hilfe von der Mailingliste haben möchten, dann achten
     Sie bitte auf folgende Verhaltensma&szlig;nahmen:
    </simpara>
    <simpara>
     Beschreiben Sie Ihr Problem so präzise wie möglich, und fügen Sie
     Details Ihrer Entwicklungsumgebung hinzu (Betriebssystem, Server,
     PHP-Version, CGI oder Modul- Version etc). Fügen Sie genug
     Quellcode hinzu, so dass andere Ihr Problem nachvollziehen können
    </simpara>
    <simpara>
     Verschicken Sie keine html-codierte Emails. Solche Emails können
     nicht von allen Email-Programmen gelesen werden, was zur Folge
     hat, das Ihre Email unter Umständen gleich im Papierkorb landet.
    </simpara>
    <simpara>
     Halten Sie die NetiQuette ein.
    </simpara>

   </sect2>

  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
